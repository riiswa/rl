Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.Specs", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.CSVLogger", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.MLFlowLogger", "reference/generated/torchrl.record.loggers.TensorboardLogger", "reference/generated/torchrl.record.loggers.WandbLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.Specs.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.CSVLogger.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.WandbLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "Specs", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Tutos", "Task-specific policy in multi-task environments", "Using pretrained models", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 41, 44, 46, 47, 48, 66, 69, 75, 78, 82, 84, 87, 91, 94, 102, 104, 105, 106, 107, 113, 115, 116, 118, 119, 123, 124, 129, 130, 136, 137, 139, 140, 142, 143, 144, 149, 153, 154, 155, 157, 158, 159, 161, 165, 170, 171, 172, 173, 183, 185, 186, 187, 190, 194, 219, 221, 222, 229, 231, 235, 237, 238, 239, 240], "tensordict": [0, 1, 3, 11, 12, 14, 15, 16, 19, 20, 21, 23, 27, 28, 32, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 113, 115, 116, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 181, 190, 194, 196, 198, 199, 204, 207, 209, 212, 214, 217, 225, 229, 231, 232, 233, 234, 235, 236, 237, 239], "class": [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 221, 222, 223, 229, 231, 232, 237, 238, 239], "ha": [0, 3, 4, 6, 7, 9, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 46, 47, 48, 63, 87, 91, 133, 135, 140, 161, 231, 232, 234, 235, 237, 238, 239, 240], "been": [0, 4, 6, 7, 11, 12, 15, 41, 44, 46, 47, 48, 90, 232, 234, 239], "move": [0, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 95, 114, 139, 197, 232, 239, 240], "out": [0, 3, 4, 23, 41, 44, 46, 47, 48, 87, 97, 117, 118, 136, 139, 140, 168, 169, 229, 237, 238, 239, 240], "dedic": [0, 130, 131, 132, 231, 234], "librari": [0, 4, 5, 6, 7, 8, 9, 46, 99, 225, 226, 230, 231, 239], "take": [0, 1, 3, 7, 16, 41, 44, 46, 47, 48, 86, 88, 90, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 151, 174, 175, 176, 177, 178, 179, 180, 190, 200, 229, 231, 232, 237, 239], "look": [0, 4, 6, 7, 23, 41, 44, 46, 47, 48, 78, 79, 140, 141, 142, 232, 235, 237, 239, 240], "find": [0, 5, 133, 135, 237], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 232, 233, 234, 235, 237, 238, 239, 240], "code": [0, 3, 4, 6, 7, 78, 142, 233, 234, 235, 236, 237, 239, 240], "github": [0, 2, 4, 5, 6, 9, 231, 232, 235, 240], "i": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 69, 71, 74, 75, 78, 79, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 125, 126, 127, 129, 130, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 190, 192, 193, 194, 195, 196, 197, 199, 201, 202, 204, 207, 212, 214, 217, 219, 223, 226, 229, 231, 232, 234, 235, 237, 239, 240], "an": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 65, 67, 70, 74, 75, 78, 79, 80, 87, 89, 90, 91, 95, 97, 103, 104, 105, 106, 107, 113, 114, 115, 117, 121, 130, 131, 132, 136, 139, 140, 141, 144, 147, 148, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 182, 188, 194, 195, 199, 202, 207, 220, 221, 222, 223, 226, 231, 232, 234, 235, 237, 238, 239, 240], "open": [0, 4, 6, 10, 240], "reinforc": [0, 2, 3, 8, 63, 104, 105, 106, 107, 136, 145, 152, 156, 160, 164, 165, 166, 207, 225, 232, 240], "learn": [0, 2, 3, 6, 7, 8, 23, 63, 104, 105, 106, 107, 116, 118, 136, 145, 152, 156, 160, 163, 164, 165, 166, 207, 231, 232, 234, 239, 240], "rl": [0, 1, 2, 3, 4, 7, 9, 11, 12, 14, 15, 45, 118, 129, 137, 143, 152, 162, 190, 226, 229, 231, 232, 235, 237, 238, 239], "pytorch": [0, 1, 2, 7, 89, 199, 229, 231, 235, 238, 239, 240], "It": [0, 2, 3, 6, 23, 27, 41, 44, 45, 46, 47, 48, 56, 75, 79, 91, 97, 104, 106, 110, 123, 124, 136, 140, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 195, 214, 226, 231, 235, 237, 238, 239, 240], "provid": [0, 2, 3, 4, 7, 8, 14, 17, 21, 22, 23, 24, 25, 26, 27, 41, 44, 45, 46, 47, 48, 64, 65, 71, 74, 75, 78, 79, 83, 87, 91, 94, 95, 103, 113, 114, 115, 129, 133, 135, 137, 145, 165, 170, 171, 172, 173, 182, 189, 190, 196, 202, 204, 212, 214, 217, 219, 226, 229, 231, 232, 234, 235, 237, 239, 240], "python": [0, 3, 4, 5, 6, 9, 229, 231, 232, 233, 234, 235, 237, 239, 240], "first": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 44, 64, 71, 75, 78, 79, 89, 91, 114, 117, 121, 139, 140, 158, 181, 198, 231, 232, 234, 235, 237, 238, 239, 240], "low": [0, 67, 231, 232, 240], "high": [0, 8, 67, 171, 174, 175, 178, 231, 232, 240], "level": [0, 19, 161, 231, 232, 240], "abstract": [0, 7, 18, 19, 20, 21, 29, 30, 31, 40, 41, 76, 115, 229, 238, 240], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 66, 67, 68, 70, 71, 78, 83, 87, 90, 91, 92, 94, 95, 101, 102, 107, 108, 113, 115, 118, 122, 124, 136, 139, 140, 141, 142, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 196, 219, 223, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240], "intend": [0, 6, 11, 12, 14, 15, 67, 240], "effici": [0, 2, 7, 118, 231, 232, 234, 235, 238, 240], "modular": [0, 142, 240], "properli": [0, 238, 240], "test": [0, 3, 4, 97, 113, 195, 219, 237, 240], "aim": [0, 3, 6, 78, 94, 114, 201, 226, 231, 232, 240], "support": [0, 3, 19, 38, 46, 75, 90, 99, 134, 139, 142, 145, 156, 171, 172, 173, 185, 229, 237, 238, 240], "research": [0, 6, 8, 240], "most": [0, 3, 6, 7, 23, 67, 231, 232, 240], "written": [0, 3, 35, 41, 44, 46, 47, 48, 63, 83, 88, 136, 139, 140, 152, 153, 161, 162, 170, 181, 182, 229, 231, 234, 237, 240], "highli": [0, 2, 239, 240], "wai": [0, 3, 78, 94, 162, 232, 234, 235, 239, 240], "can": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 42, 44, 46, 47, 48, 63, 66, 67, 74, 75, 78, 79, 83, 87, 90, 91, 94, 95, 102, 112, 115, 116, 118, 119, 126, 127, 133, 139, 140, 141, 142, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 195, 204, 212, 214, 217, 221, 222, 223, 226, 229, 231, 232, 234, 235, 237, 239, 240], "easili": [0, 3, 6, 47, 48, 204, 212, 214, 217, 232, 238, 239, 240], "swap": [0, 3, 235, 240], "compon": [0, 2, 3, 35, 36, 37, 38, 145, 146, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 194, 199, 234, 235, 237, 240], "transform": [0, 2, 7, 23, 25, 26, 27, 28, 42, 44, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 104, 110, 145, 146, 149, 151, 182, 196, 204, 207, 209, 212, 214, 217, 223, 225, 232, 235], "them": [0, 6, 25, 26, 27, 28, 41, 42, 44, 46, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 161, 182, 231, 232, 234, 235, 237, 238, 239, 240], "write": [0, 7, 23, 44, 77, 139, 140, 142, 154, 155, 163, 165, 170, 182, 229, 231, 232, 234, 235, 237, 238, 240], "new": [0, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 41, 44, 46, 47, 48, 83, 90, 95, 101, 136, 139, 140, 144, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 231, 232, 237, 238, 239, 240], "ones": [0, 19, 23, 41, 44, 46, 47, 48, 64, 66, 68, 75, 78, 87, 91, 94, 139, 231, 238, 239, 240], "littl": [0, 3, 239, 240], "effort": [0, 3, 240], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 56, 63, 64, 66, 67, 70, 72, 75, 78, 79, 83, 84, 87, 88, 90, 91, 93, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 181, 190, 192, 195, 196, 199, 200, 201, 202, 204, 212, 214, 217, 219, 223, 226, 229, 231, 232, 234, 235, 237, 239, 240], "repo": [0, 5, 226, 240], "attempt": [0, 133, 135, 240], "align": [0, 240], "exist": [0, 23, 41, 44, 46, 47, 48, 64, 91, 202, 223, 237, 239, 240], "ecosystem": [0, 240], "dataset": [0, 25, 26, 27, 95, 235, 238, 239, 240], "pillar": [0, 240], "environ": [0, 1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 23, 24, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 67, 68, 72, 74, 75, 78, 79, 86, 90, 91, 95, 97, 102, 113, 115, 116, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 190, 192, 195, 201, 202, 204, 205, 206, 207, 209, 212, 214, 217, 219, 220, 221, 222, 223, 226, 233, 235, 236], "model": [0, 1, 3, 7, 8, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 78, 87, 94, 96, 103, 114, 115, 116, 130, 131, 132, 139, 144, 152, 157, 158, 159, 162, 163, 165, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 225, 226, 229, 233, 236, 237, 239], "data": [0, 3, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 75, 97, 102, 113, 116, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 154, 163, 165, 171, 172, 173, 190, 196, 199, 200, 205, 219, 221, 222, 223, 225, 229, 232, 235, 237, 238, 239], "util": [0, 3, 11, 12, 14, 15, 16, 23, 41, 44, 46, 47, 48, 78, 94, 97, 98, 99, 100, 101, 103, 149, 150, 151, 219, 225, 230, 231, 232, 237, 239, 240], "e": [0, 1, 3, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 35, 36, 41, 42, 44, 46, 47, 48, 64, 66, 71, 75, 78, 83, 87, 90, 91, 94, 97, 112, 116, 119, 126, 127, 139, 140, 146, 170, 171, 172, 173, 190, 201, 222, 231, 232, 235, 238, 239, 240], "g": [0, 1, 3, 7, 9, 10, 23, 24, 41, 42, 44, 46, 47, 48, 64, 66, 71, 75, 78, 83, 87, 90, 91, 94, 97, 112, 116, 126, 127, 139, 140, 170, 176, 177, 179, 180, 222, 231, 232, 235, 239, 240], "collector": [0, 3, 11, 12, 13, 14, 15, 16, 136, 196, 199, 200, 205, 206, 219, 221, 222, 225, 229, 232, 239, 240], "contain": [0, 3, 6, 11, 12, 14, 15, 19, 23, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 66, 68, 78, 87, 91, 94, 95, 101, 102, 103, 114, 116, 139, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 189, 190, 201, 204, 207, 209, 212, 214, 217, 219, 220, 221, 222, 223, 229, 232, 235, 237, 239, 240], "etc": [0, 3, 6, 7, 10, 23, 30, 31, 41, 44, 46, 47, 48, 91, 114, 231, 238, 239, 240], "have": [0, 3, 4, 5, 6, 7, 11, 12, 15, 19, 21, 23, 38, 41, 44, 46, 47, 48, 49, 63, 74, 75, 87, 90, 91, 95, 97, 103, 113, 114, 141, 142, 153, 161, 162, 167, 190, 199, 229, 231, 232, 234, 235, 237, 238, 239, 240], "few": [0, 2, 7, 190, 232, 239, 240], "depend": [0, 3, 6, 7, 143, 162, 239, 240], "possibl": [0, 3, 20, 23, 24, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 195, 199, 231, 237, 238, 239, 240], "standard": [0, 75, 82, 95, 102, 110, 116, 117, 118, 133, 171, 172, 173, 231, 232, 240], "numpi": [0, 10, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 89, 199, 231, 232, 239, 240], "common": [0, 3, 44, 47, 48, 130, 131, 132, 147, 148, 219, 226, 229, 231, 234, 235, 237, 238, 239, 240], "openai": [0, 6, 54, 55, 239, 240], "gym": [0, 3, 7, 10, 11, 12, 14, 42, 44, 54, 55, 75, 87, 95, 204, 207, 209, 212, 214, 217, 219, 226, 231, 232, 235, 240], "onli": [0, 1, 3, 6, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 49, 64, 66, 67, 71, 75, 78, 79, 87, 91, 94, 95, 113, 139, 140, 141, 142, 202, 229, 231, 232, 234, 237, 239, 240], "option": [0, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 41, 42, 44, 45, 46, 47, 48, 49, 52, 59, 61, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 133, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 154, 155, 157, 158, 159, 163, 164, 165, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 185, 190, 192, 193, 194, 195, 196, 197, 199, 202, 204, 205, 206, 207, 208, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 231, 232, 240], "On": [0, 3, 6, 232, 238], "end": [0, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 91, 103, 115, 174, 175, 176, 177, 178, 179, 180, 231, 234, 235, 239, 240], "come": [0, 1, 3, 7, 47, 48, 129, 130, 131, 132, 137, 143, 231, 237, 239, 240], "set": [0, 1, 2, 3, 6, 8, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 38, 41, 43, 44, 45, 46, 47, 48, 64, 66, 78, 86, 87, 91, 94, 97, 100, 115, 133, 139, 190, 195, 196, 206, 223, 226, 230, 231, 232, 234, 235, 239, 240], "re": [0, 3, 7, 23, 41, 44, 46, 47, 48, 140, 229, 232, 234, 237, 239, 240], "usabl": [0, 229, 240], "function": [0, 3, 7, 10, 16, 23, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 68, 91, 95, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 127, 130, 131, 132, 133, 135, 136, 139, 140, 142, 143, 149, 150, 151, 152, 153, 154, 155, 161, 162, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 204, 207, 209, 212, 214, 217, 219, 225, 231, 232, 234, 237, 238, 239], "cost": [0, 2, 20, 232], "return": [0, 3, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 134, 138, 139, 140, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 176, 177, 179, 180, 199, 201, 204, 205, 207, 209, 212, 214, 217, 219, 220, 221, 222, 223, 225, 229, 231, 232, 234, 235, 237, 238, 239, 240], "process": [0, 1, 2, 3, 4, 7, 11, 12, 15, 42, 46, 47, 48, 95, 136, 229, 231, 232, 235, 239, 240], "good": [0, 1, 8, 239, 240], "runtim": [0, 3, 23, 41, 44, 46, 47, 48], "perform": [0, 3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 74, 91, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 123, 124, 133, 135, 136, 149, 158, 162, 195, 199, 231, 232, 234, 238, 239], "introduct": [0, 233, 236, 239], "env": [0, 1, 2, 4, 5, 6, 7, 11, 12, 14, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 115, 116, 139, 181, 202, 204, 205, 206, 207, 209, 212, 214, 217, 219, 221, 222, 223, 225, 231, 232, 233, 234, 235, 236], "modul": [0, 3, 7, 10, 23, 41, 44, 45, 46, 47, 48, 66, 67, 78, 79, 87, 91, 94, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 160, 163, 164, 166, 168, 171, 172, 173, 199, 203, 208, 210, 211, 213, 216, 219, 225, 229, 231, 232, 234, 235, 237], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 23, 25, 26, 27, 28, 32, 41, 42, 44, 45, 46, 47, 48, 52, 64, 65, 67, 75, 78, 79, 87, 89, 90, 91, 94, 95, 97, 100, 101, 102, 103, 104, 105, 110, 112, 114, 115, 116, 118, 119, 126, 127, 136, 139, 140, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 174, 175, 178, 188, 189, 195, 196, 199, 200, 202, 205, 206, 207, 215, 219, 223, 226, 229, 230, 233, 234, 236, 238, 239], "object": [0, 3, 5, 11, 12, 14, 15, 19, 23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 68, 75, 78, 90, 91, 95, 116, 129, 130, 137, 139, 140, 141, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 202, 205, 206, 218, 219, 223, 225, 229, 232, 237, 239], "state": [0, 1, 3, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 51, 58, 63, 64, 66, 69, 75, 84, 86, 90, 91, 93, 95, 102, 110, 113, 114, 116, 120, 123, 124, 130, 139, 144, 163, 170, 171, 172, 173, 223, 231, 232, 239], "contribut": 0, "instal": [0, 4, 9, 199, 226, 239], "pretrain": [0, 233, 236], "improv": [0, 2, 72, 152], "structur": [0, 3, 6, 136, 171, 172, 173, 235], "dictionari": [0, 11, 12, 14, 15, 19, 23, 41, 44, 46, 47, 48, 87, 91, 140, 221, 222, 223, 229, 231, 239], "featur": [0, 3, 11, 12, 14, 15, 24, 41, 44, 46, 47, 48, 63, 71, 87, 92, 103, 110, 111, 114, 117, 118, 140, 171, 172, 173, 223, 231, 232, 237, 239], "tensor": [0, 3, 7, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 71, 75, 78, 79, 82, 87, 88, 89, 90, 91, 92, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 125, 126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 149, 150, 154, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 204, 207, 209, 212, 214, 217, 229, 231, 232, 234, 235, 237, 239, 240], "tensordictmodul": [0, 11, 12, 14, 15, 116, 139, 141, 231, 232, 233, 234, 235, 236], "exampl": [0, 2, 3, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 66, 67, 68, 75, 78, 87, 89, 91, 94, 95, 101, 102, 103, 113, 114, 116, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 148, 171, 172, 173, 190, 191, 192, 193, 194, 196, 197, 198, 200, 204, 207, 209, 212, 214, 217, 219, 229, 231, 232, 233, 234, 235, 238, 239, 240], "do": [0, 2, 3, 6, 11, 12, 14, 15, 44, 74, 79, 101, 117, 131, 229, 231, 232, 234, 239, 240], "": [0, 1, 3, 5, 6, 7, 23, 25, 26, 27, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 95, 97, 103, 118, 133, 139, 140, 165, 171, 172, 173, 214, 217, 231, 232, 234, 235, 238, 239, 240], "don": [0, 5, 6, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 231, 238, 239, 240], "t": [0, 3, 5, 6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 41, 42, 44, 46, 47, 48, 78, 88, 94, 95, 101, 139, 148, 154, 171, 172, 173, 199, 200, 223, 226, 231, 232, 234, 235, 239, 240], "showcas": 0, "implement": [0, 2, 3, 8, 10, 23, 38, 41, 44, 46, 47, 48, 95, 112, 125, 126, 127, 152, 162, 165, 204, 212, 214, 217, 229, 231, 232, 240], "deepmind": [0, 6, 7, 8, 52, 53], "control": [0, 1, 3, 4, 7, 47, 48, 52, 53, 67, 104, 105, 106, 107, 115, 116, 124, 136, 139, 140, 141, 153, 161, 162, 166, 171, 174, 175, 178, 207, 229, 231], "devic": [0, 1, 2, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 41, 43, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 77, 78, 87, 89, 91, 94, 102, 103, 104, 105, 106, 107, 111, 113, 114, 116, 117, 118, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 154, 196, 200, 204, 207, 209, 212, 214, 215, 217, 231, 232, 234, 235, 237, 240], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 15, 23, 41, 44, 45, 46, 47, 48, 52, 53, 74, 75, 91, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 141, 142, 149, 195, 221, 222, 223, 226, 229, 231, 232, 234, 235, 237, 238, 240], "parallel": [0, 1, 3, 7, 11, 12, 15, 97, 152, 220, 221, 222, 223, 232], "vecnorm": [0, 42, 223], "task": [0, 8, 47, 48, 52, 78, 94, 231, 232, 233, 236, 239, 240], "specif": [0, 4, 7, 27, 28, 44, 199, 225, 229, 233, 236], "polici": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 41, 44, 45, 46, 47, 48, 67, 100, 101, 118, 130, 131, 132, 133, 135, 136, 139, 140, 145, 146, 152, 153, 154, 161, 162, 163, 165, 195, 200, 204, 205, 206, 207, 209, 212, 219, 221, 222, 229, 232, 233, 235, 236, 237, 239, 240], "multi": [0, 3, 6, 8, 23, 41, 44, 46, 47, 48, 113, 114, 231, 232, 233, 236, 240], "execut": [0, 1, 3, 5, 6, 7, 11, 12, 14, 23, 25, 26, 27, 28, 41, 42, 44, 45, 46, 47, 48, 87, 141, 142, 202, 223, 229, 232, 236, 237, 239], "divers": [0, 47, 48], "rollout": [0, 1, 3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 59, 60, 97, 102, 116, 136, 152, 202, 231, 232, 235, 240], "ddpg": [0, 104, 105, 106, 107, 154, 160, 166, 207, 208, 225, 233, 236], "normal": [0, 75, 95, 103, 112, 114, 119, 126, 127, 133, 140, 153, 161, 162, 195, 197, 223, 229, 232, 239], "observ": [0, 2, 3, 7, 11, 12, 14, 29, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 75, 76, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 101, 104, 105, 106, 107, 113, 120, 121, 123, 129, 130, 131, 132, 134, 135, 136, 137, 138, 143, 144, 145, 146, 158, 171, 172, 173, 182, 204, 207, 209, 212, 214, 217, 219, 229, 232, 234, 237, 238, 239, 240], "build": [0, 3, 6, 16, 19, 23, 41, 44, 46, 47, 48, 95, 102, 116, 140, 199, 203, 208, 210, 211, 213, 215, 216, 218, 229, 235, 237, 238, 239, 240], "evalu": [0, 23, 41, 44, 46, 47, 48, 91, 108, 122, 127, 163, 205, 206, 232], "your": [0, 2, 3, 6, 7, 9, 23, 41, 44, 46, 47, 48, 95, 223, 226, 232, 238, 240], "record": [0, 23, 41, 44, 46, 47, 48, 162, 181, 182, 183, 184, 185, 186, 187, 188, 189, 219, 225, 232], "replai": [0, 7, 14, 25, 26, 27, 28, 32, 33, 34, 38, 39, 47, 48, 67, 79, 87, 154, 155, 163, 165, 196, 199, 215, 219, 225, 229, 232, 235], "buffer": [0, 3, 7, 14, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 66, 67, 78, 79, 87, 91, 94, 139, 142, 154, 155, 163, 165, 196, 199, 215, 219, 225, 229, 232, 235, 237, 239], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 75, 78, 87, 90, 91, 96, 102, 116, 117, 118, 133, 135, 136, 161, 163, 165, 204, 207, 209, 212, 214, 217, 223, 232, 239], "time": [0, 3, 6, 7, 11, 12, 14, 15, 23, 41, 42, 44, 46, 47, 48, 64, 79, 87, 88, 95, 101, 110, 113, 136, 158, 163, 171, 172, 173, 199, 232, 234, 235, 237, 238, 239, 240], "train": [0, 1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 72, 78, 91, 94, 97, 104, 106, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 199, 200, 219, 229, 235, 238, 239], "experi": [0, 3, 25, 32, 97, 183, 185, 186, 187, 188, 189, 226], "result": [0, 1, 3, 6, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 42, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 95, 97, 101, 114, 146, 171, 174, 175, 176, 177, 178, 179, 180, 181, 200, 232, 235, 238, 239, 240], "sampl": [0, 2, 7, 8, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 45, 79, 98, 100, 102, 108, 112, 116, 122, 123, 126, 127, 133, 135, 136, 139, 140, 153, 154, 155, 161, 162, 190, 196, 199, 201, 232, 235, 237, 239, 240], "trajectori": [0, 1, 11, 12, 14, 15, 16, 23, 27, 32, 41, 44, 46, 47, 48, 79, 90, 102, 116, 136, 162, 171, 173, 174, 175, 176, 177, 178, 179, 180, 190, 225, 232, 239, 240], "td": [0, 19, 50, 51, 52, 53, 54, 55, 57, 58, 64, 67, 68, 75, 89, 91, 95, 101, 102, 115, 116, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 172, 173, 176, 177, 179, 180, 181, 190, 198, 204, 207, 209, 212, 214, 217, 237, 238, 239, 240], "lambda": [0, 11, 12, 14, 15, 42, 157, 159, 173, 176, 177, 179, 180, 219, 237, 238, 239, 240], "pixel": [0, 3, 6, 19, 63, 65, 71, 73, 75, 78, 80, 89, 94, 104, 120, 121, 182, 204, 209, 212, 214, 217, 231, 233, 235, 236, 239, 240], "dqn": [0, 134, 138, 145, 155, 156, 160, 166, 209, 210, 225, 233, 236], "problem": [0, 6, 7, 14, 239], "deep": [0, 8, 63, 104, 105, 106, 107, 109, 136, 152, 160, 165, 166, 207, 231], "q": [0, 104, 105, 106, 107, 109, 111, 145, 146, 154, 155, 156, 160, 163, 165, 214, 217, 237], "network": [0, 1, 7, 23, 41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 114, 118, 120, 121, 123, 124, 130, 131, 132, 139, 154, 155, 156, 160, 163, 165, 166, 168, 171, 172, 173, 204, 207, 212, 218, 219, 229, 231, 234, 237, 239], "regular": [0, 15, 139, 140, 146, 156, 200, 229, 231, 237, 238, 239], "conclus": 0, "api": [0, 3, 4, 78, 94, 229, 239, 240], "packag": [0, 5, 6, 9, 225, 226, 231, 232, 239], "helper": [0, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 231, 240], "compos": [0, 3, 23, 25, 26, 27, 33, 34, 39, 41, 44, 46, 47, 48, 90, 91, 95, 158, 204, 207, 209, 212, 214, 217, 225, 232, 234, 239, 240], "tensorspec": [0, 3, 13, 17, 18, 19, 20, 21, 22, 24, 30, 31, 41, 45, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 124, 129, 133, 135, 136, 137, 139, 140, 141, 225], "envbas": [0, 3, 11, 12, 14, 15, 42, 44, 46, 47, 48, 49, 74, 90, 91, 95, 97, 102, 115, 116, 195, 202, 204, 205, 206, 207, 209, 212, 214, 217, 219, 221, 222, 223, 225], "gymlikeenv": [0, 225], "envmetadata": [0, 225], "spec": [0, 2, 3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 43, 44, 45, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 97, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 204, 207, 209, 212, 214, 217, 225, 231, 232, 234, 240], "vector": [0, 7, 17, 24, 47, 48, 67, 104, 106, 114, 173, 179, 180, 225, 231, 232, 234, 235, 237, 239], "domain": [0, 2, 7, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 87, 139, 140, 141, 142, 225, 239, 240], "hook": [0, 23, 41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 134, 135, 136, 138, 145, 146, 149, 192, 193, 195, 196, 197, 199, 200, 225], "explor": [0, 1, 96, 118, 133, 135, 136, 139, 140, 152, 195, 205, 206, 219, 225, 231, 232], "planner": [0, 102, 116, 225], "distribut": [0, 2, 3, 8, 9, 75, 102, 108, 109, 110, 112, 116, 119, 122, 123, 124, 125, 126, 127, 133, 134, 140, 141, 145, 153, 156, 161, 162, 225, 229, 231, 232, 237, 239, 240], "sac": [0, 163, 165, 216, 217, 225], "redq": [0, 163, 213, 214, 225], "ppo": [0, 7, 140, 153, 161, 162, 204, 211, 212, 225], "a2c": [0, 152, 203, 225], "dreamer": [0, 61, 110, 157, 158, 159, 225], "trainer": [0, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 231], "checkpoint": [0, 225, 235], "builder": [0, 225, 232, 239], "logger": [0, 182, 183, 185, 186, 187, 188, 189, 193, 195, 199, 219, 223, 225], "_util": [0, 10, 225], "implement_for": [0, 225], "work": [0, 3, 6, 7, 10, 23, 41, 44, 46, 47, 48, 64, 78, 95, 103, 114, 199, 226, 232, 234, 235, 237, 238, 239, 240], "what": [0, 3, 7, 29, 41, 44, 46, 47, 48, 87, 226, 232, 235, 237, 239, 240], "version": [0, 1, 5, 10, 23, 41, 44, 46, 47, 48, 165, 173, 226, 231, 232, 235, 239], "habitat": [0, 56, 226, 235], "lab": [0, 3, 52, 53, 226], "up": [0, 1, 2, 3, 7, 8, 20, 226, 231, 232, 237, 239], "issu": [0, 4, 7, 79, 139, 140, 226, 240], "about": [0, 3, 4, 226, 231, 232, 239, 240], "mujoco": [0, 5, 7, 226], "prerequisit": 0, "render": [0, 7, 195, 226, 231, 232], "all": [0, 3, 7, 11, 12, 14, 15, 23, 41, 42, 44, 45, 46, 47, 48, 49, 66, 70, 75, 78, 83, 87, 88, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 142, 149, 158, 194, 199, 201, 221, 222, 223, 226, 229, 231, 232, 233, 234, 237, 238, 239, 240], "bindindg": 0, "2": [0, 1, 3, 7, 9, 10, 11, 12, 14, 21, 22, 23, 41, 42, 44, 46, 47, 48, 59, 60, 64, 66, 67, 75, 78, 87, 91, 94, 95, 103, 104, 105, 106, 111, 113, 114, 119, 134, 135, 136, 139, 143, 145, 153, 154, 161, 163, 165, 170, 171, 172, 173, 176, 177, 179, 180, 182, 190, 231, 232, 234, 235, 238, 239, 240], "1": [0, 1, 2, 3, 7, 9, 10, 11, 12, 14, 15, 20, 21, 22, 23, 24, 30, 31, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 62, 64, 66, 67, 68, 72, 74, 75, 78, 79, 87, 88, 89, 91, 94, 95, 101, 102, 103, 104, 105, 107, 111, 112, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 145, 149, 152, 153, 158, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 195, 196, 197, 204, 207, 209, 212, 214, 217, 219, 223, 226, 229, 231, 232, 234, 235, 238, 239, 240], "old": [0, 161, 239], "bind": [0, 5], "py": [0, 3, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240], "when": [0, 1, 2, 3, 4, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 66, 67, 74, 75, 78, 79, 83, 87, 90, 91, 94, 95, 100, 102, 114, 115, 116, 117, 126, 139, 140, 142, 149, 153, 161, 162, 170, 181, 182, 196, 223, 226, 229, 231, 232, 235, 237, 238, 239], "pro": [0, 6, 226], "tip": [0, 6, 226], "debug": [0, 5, 226, 239], "gradient": [0, 23, 41, 44, 46, 47, 48, 91, 112, 118, 126, 127, 152, 164, 170, 171, 172, 173, 199, 231, 232], "relat": [0, 9, 71, 231], "error": [0, 1, 3, 6, 9, 10, 23, 41, 44, 46, 47, 48, 79, 97, 148, 231, 232, 238, 239], "newcom": 0, "my": 0, "too": [0, 2, 6, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 112, 126, 127, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 231, 232, 239], "slow": [0, 3], "intermedi": [0, 235], "bug": [0, 240], "resourc": [0, 226], "functorch": [0, 7, 9, 139, 142, 147, 232, 240], "blog": 0, "websit": 0, "index": [0, 3, 6, 7, 9, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 67, 101, 231, 234, 238, 240], "search": [0, 232], "page": [0, 6], "somewhat": [1, 239], "equival": [1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 91, 196, 239, 240], "dataload": [1, 238], "except": [1, 3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 70, 122, 148, 231, 232, 238, 239, 240], "thei": [1, 3, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 68, 70, 78, 90, 91, 94, 113, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 196, 199, 229, 231, 232, 234, 235, 237, 238, 239, 240], "collect": [1, 3, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 75, 78, 94, 97, 136, 154, 163, 165, 190, 196, 199, 200, 201, 202, 219, 229, 231, 232, 235, 238, 239, 240], "over": [1, 2, 3, 7, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 67, 75, 88, 142, 156, 158, 201, 229, 231, 237, 238, 239], "non": [1, 7, 23, 41, 44, 46, 47, 48, 62, 66, 71, 78, 87, 91, 92, 94, 139, 140, 158, 171, 172, 173, 231, 237, 239], "static": [1, 95], "like": [1, 6, 23, 41, 44, 46, 47, 48, 56, 89, 97, 163, 231, 235, 238, 239], "being": [1, 3, 7, 15, 23, 41, 44, 46, 47, 48, 67, 68, 91, 100, 136, 153, 161, 162, 182, 196, 200, 221, 222, 223, 231, 232, 235], "accept": [1, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 66, 71, 78, 83, 87, 91, 92, 94, 139, 140, 141, 229, 237, 239], "two": [1, 7, 9, 23, 41, 44, 46, 47, 48, 75, 78, 94, 107, 140, 161, 165, 167, 195, 199, 204, 212, 214, 217, 231, 232, 234, 237, 238, 239, 240], "main": [1, 2, 4, 42, 140, 199, 231, 232, 234, 239], "argument": [1, 3, 11, 12, 14, 15, 19, 23, 41, 44, 46, 47, 48, 66, 78, 87, 90, 91, 94, 103, 114, 117, 139, 140, 141, 143, 181, 192, 201, 204, 207, 209, 212, 214, 217, 219, 220, 223, 231, 232, 237, 239], "list": [1, 5, 6, 7, 8, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 41, 44, 45, 46, 47, 48, 63, 68, 75, 78, 83, 91, 94, 114, 142, 143, 169, 171, 173, 181, 195, 196, 221, 222, 231, 232, 234, 235, 237, 238, 239, 240], "constructor": [1, 14, 90, 171, 172, 173, 204, 207, 209, 212, 214, 217, 220, 223, 237], "iter": [1, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 69, 75, 84, 95, 103, 114, 139, 140, 141, 142, 147, 169, 195, 198, 199, 204, 212, 214, 217, 229, 231], "step": [1, 3, 7, 11, 12, 14, 15, 23, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 74, 75, 86, 88, 91, 101, 102, 110, 113, 115, 116, 133, 135, 136, 140, 152, 157, 162, 170, 181, 190, 195, 199, 229, 231, 232, 234, 235, 238, 240], "queri": [1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 78, 90, 95, 142, 237, 240], "defin": [1, 2, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 44, 46, 47, 48, 79, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 171, 172, 173, 181, 220, 232, 237, 238, 239], "number": [1, 3, 7, 11, 12, 14, 15, 18, 20, 23, 24, 25, 26, 27, 32, 35, 36, 37, 41, 44, 45, 46, 47, 48, 63, 67, 72, 74, 75, 82, 86, 88, 95, 102, 103, 108, 109, 110, 111, 112, 114, 116, 119, 120, 121, 123, 124, 125, 126, 127, 133, 135, 136, 139, 140, 151, 157, 163, 165, 190, 192, 195, 199, 200, 201, 202, 221, 222, 223, 231, 232, 235, 239], "befor": [1, 3, 5, 6, 9, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 114, 117, 118, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 172, 173, 196, 231, 232, 237, 238, 239], "deliv": [1, 232, 240], "stack": [1, 6, 7, 47, 48, 95, 101, 141, 142, 181, 190, 232, 234, 237, 238, 240], "user": [1, 2, 4, 7, 23, 41, 44, 46, 47, 48, 86, 91, 113, 220, 229, 232, 237, 239, 240], "reset": [1, 3, 7, 11, 12, 14, 15, 41, 42, 44, 45, 46, 47, 48, 51, 58, 63, 66, 69, 74, 78, 83, 84, 86, 87, 88, 90, 93, 95, 97, 101, 128, 136, 181, 204, 207, 209, 212, 214, 217, 231, 232, 234, 240], "whenev": [1, 3, 200], "reach": [1, 11, 12, 14, 15, 41, 44, 46, 47, 48, 133, 135, 136, 239, 240], "done": [1, 3, 6, 7, 11, 12, 14, 19, 23, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 75, 82, 84, 86, 87, 95, 101, 102, 116, 154, 155, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 204, 207, 209, 212, 214, 217, 231, 232, 234, 235, 238, 239, 240], "after": [1, 7, 19, 23, 41, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 101, 117, 133, 135, 158, 231, 232, 235, 237, 238, 239], "predifin": 1, "becaus": [1, 3, 6, 90, 107, 113, 139, 140, 231, 232, 234, 238, 239], "potenti": 1, "comput": [1, 3, 7, 11, 14, 20, 23, 41, 44, 46, 47, 48, 75, 91, 93, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 124, 126, 127, 130, 133, 135, 136, 140, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 202, 231, 232, 234, 235, 237], "heavi": [1, 7], "crucial": [1, 231, 232, 239], "configur": [1, 7, 11, 12, 14, 15, 162, 204, 212, 214, 217], "appropri": [1, 6, 11, 12, 14, 15, 39, 40, 87, 220, 223], "paramet": [1, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 212, 214, 217, 219, 220, 221, 222, 223, 231, 232, 235, 237, 240], "consider": [1, 3, 7, 231], "whether": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 45, 46, 47, 48, 91, 103, 114, 143, 154, 155, 156, 163, 165, 173, 232, 239], "should": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 38, 41, 44, 45, 46, 47, 48, 63, 71, 75, 79, 83, 84, 90, 91, 95, 97, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 149, 160, 161, 162, 163, 166, 170, 171, 172, 173, 182, 194, 195, 196, 199, 219, 221, 222, 223, 229, 231, 232, 234, 235, 239, 240], "occur": [1, 7, 12, 64, 75, 79, 139, 140, 158, 239], "serial": [1, 3, 23, 41, 44, 46, 47, 48, 95], "optim": [1, 7, 23, 41, 44, 46, 47, 48, 102, 116, 117, 118, 162, 165, 194, 199, 204, 212, 219, 229, 231, 232, 238], "syncdatacollector": [1, 11, 12, 15, 219, 222, 225], "worker": [1, 11, 12, 14, 15, 42, 46, 47, 48, 95, 221, 222, 223, 239, 240], "multisyncdatacollector": [1, 222, 225, 240], "split": [1, 11, 12, 14, 15, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 229, 240], "workload": 1, "across": [1, 7, 95, 136, 200, 238], "aggreg": [1, 103, 104, 105, 142, 238], "final": [1, 3, 133, 135, 136, 141, 171, 195, 231, 232, 239], "multiasyncdatacollector": [1, 15, 221, 225, 231, 232, 240], "sever": [1, 7, 21, 23, 41, 44, 46, 47, 48, 64, 91, 162, 239], "batch": [1, 3, 11, 12, 14, 15, 16, 20, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 47, 48, 71, 75, 79, 87, 91, 92, 108, 109, 113, 117, 122, 125, 136, 139, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 190, 196, 198, 199, 200, 221, 222, 223, 229, 231, 232, 234, 235, 237, 239, 240], "gather": [1, 79, 170, 202, 226, 237, 239], "continu": [1, 8, 18, 30, 104, 105, 106, 107, 136, 140, 142, 166, 171, 174, 175, 178, 207, 231, 239, 240], "concomittantli": 1, "impli": [1, 239], "weight": [1, 8, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 118, 139, 152, 153, 158, 200, 218, 229, 231, 232, 234, 240], "mai": [1, 2, 3, 4, 6, 7, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 75, 84, 91, 92, 95, 97, 114, 229, 231, 235, 239, 240], "slightli": [1, 231, 235, 237, 239], "lag": [1, 11, 12, 14, 15], "therefor": [1, 3, 6, 162, 238, 239], "although": [1, 7, 41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 229, 231, 232], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 7, 11, 12, 14, 15, 25, 26, 27, 28, 35, 36, 41, 44, 45, 46, 47, 48, 63, 78, 83, 88, 90, 92, 94, 133, 135, 139, 140, 151, 152, 153, 154, 156, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 181, 182, 196, 199, 200, 229, 231, 232, 234, 237, 239], "asynchron": [1, 8, 12, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 152, 221], "off": [1, 2, 112, 126, 127, 165, 195, 205, 229, 232, 235, 239], "curriculum": 1, "For": [1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 71, 75, 117, 145, 152, 156, 162, 195, 207, 229, 231, 235, 237, 239], "remot": [1, 47, 48, 239], "necessari": [1, 5, 7, 11, 12, 14, 15, 84, 163, 171, 172, 173, 231], "synchronis": [1, 42], "from": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 64, 67, 69, 75, 78, 79, 84, 86, 87, 89, 90, 91, 92, 94, 95, 101, 102, 104, 105, 106, 107, 112, 114, 115, 116, 117, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 153, 154, 155, 161, 162, 163, 165, 170, 171, 172, 173, 181, 182, 190, 196, 199, 201, 202, 204, 207, 209, 212, 214, 215, 217, 219, 220, 223, 226, 229, 231, 232, 234, 235, 237, 238, 239, 240], "either": [1, 4, 23, 41, 44, 46, 47, 48, 144, 189, 207, 229, 235, 238, 239, 240], "update_policy_weights_": [1, 11, 12, 14, 15, 231, 232, 240], "update_at_each_batch": [1, 11, 12, 15, 231], "true": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 59, 60, 64, 66, 67, 71, 74, 75, 78, 79, 82, 86, 87, 89, 91, 92, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 111, 112, 114, 116, 117, 118, 126, 127, 130, 131, 132, 133, 136, 139, 140, 141, 142, 148, 152, 153, 157, 158, 159, 161, 162, 163, 165, 167, 171, 172, 173, 176, 177, 179, 180, 181, 182, 192, 193, 195, 196, 199, 209, 223, 229, 231, 232, 234, 235, 237, 238, 239, 240], "second": [1, 7, 165, 198, 231, 232, 234, 235, 237, 238, 239, 240], "consid": [1, 7, 23, 41, 44, 46, 47, 48, 67, 108, 125, 231, 238], "oper": [1, 3, 6, 7, 11, 12, 15, 23, 41, 44, 46, 47, 48, 71, 90, 119, 130, 131, 132, 139, 144, 145, 152, 153, 154, 155, 156, 161, 162, 170, 171, 172, 173, 199, 207, 209, 214, 217, 229, 231, 232, 234, 237, 239], "instanc": [1, 3, 6, 7, 11, 12, 14, 15, 23, 29, 41, 42, 44, 45, 46, 47, 48, 53, 63, 75, 87, 90, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 119, 120, 121, 123, 124, 133, 135, 136, 140, 141, 142, 149, 182, 189, 195, 202, 204, 205, 206, 207, 209, 212, 214, 217, 219, 221, 222, 229, 232, 237, 238, 239], "cpu": [1, 3, 7, 9, 11, 12, 14, 17, 23, 29, 35, 36, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 78, 87, 91, 94, 102, 116, 118, 137, 139, 142, 196, 204, 207, 209, 212, 214, 217, 231, 232, 234, 235, 237, 238, 239, 240], "slower": 1, "than": [1, 7, 11, 12, 14, 15, 107, 114, 119, 133, 135, 139, 196, 200, 226, 231, 232, 237, 238, 239, 240], "one": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 22, 24, 25, 26, 27, 28, 32, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 67, 74, 75, 78, 85, 91, 92, 94, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 133, 134, 135, 136, 138, 139, 140, 145, 146, 149, 151, 152, 153, 154, 155, 161, 162, 163, 192, 194, 195, 199, 202, 204, 212, 214, 217, 223, 226, 229, 231, 232, 234, 235, 237, 238, 239], "cuda": [1, 3, 6, 23, 41, 44, 46, 47, 48, 66, 77, 78, 87, 91, 94, 139, 191, 231, 232, 235, 238, 239], "multipl": [1, 3, 4, 7, 11, 12, 14, 15, 20, 47, 48, 64, 67, 83, 90, 95, 113, 117, 118, 139, 140, 163, 214, 223, 229, 232, 238, 240], "infer": [1, 47, 48, 95, 117, 165, 231, 237, 238], "dispatch": 1, "avail": [1, 5, 140, 145, 146, 221, 222, 231, 232, 239], "speed": [1, 2, 7, 20, 231, 232], "avoid": [1, 23, 41, 44, 46, 47, 48, 91, 95, 139, 201, 237], "oom": 1, "choic": [1, 2, 119], "size": [1, 2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 41, 43, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 64, 71, 78, 85, 87, 89, 91, 92, 94, 102, 103, 108, 113, 114, 116, 119, 122, 123, 124, 125, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 170, 171, 172, 173, 182, 190, 196, 204, 207, 209, 212, 214, 217, 231, 232, 234, 235, 237, 239, 240], "pass": [1, 3, 14, 19, 23, 27, 41, 42, 43, 44, 46, 47, 48, 68, 90, 92, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 142, 148, 149, 171, 172, 173, 196, 221, 222, 223, 231, 232, 234, 239], "ie": [1, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 31, 32, 71, 92], "store": [1, 2, 7, 11, 12, 14, 15, 19, 23, 27, 28, 32, 35, 36, 37, 41, 44, 46, 47, 48, 95, 102, 113, 116, 204, 207, 209, 212, 214, 217, 229, 231, 232, 235, 238, 239], "while": [1, 3, 6, 7, 23, 41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 161, 162, 231, 232, 235, 240], "wait": [1, 232], "also": [1, 2, 3, 7, 10, 23, 27, 41, 44, 46, 47, 48, 67, 75, 83, 84, 87, 91, 124, 141, 142, 152, 154, 155, 171, 229, 231, 232, 234, 237, 238, 239], "impact": 1, "memori": [1, 3, 7, 20, 23, 35, 41, 42, 44, 46, 47, 48, 66, 78, 87, 91, 94, 95, 139, 223, 229, 231, 240], "manag": [1, 7, 168, 169, 195, 231, 237], "kei": [1, 3, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 101, 102, 115, 116, 133, 135, 136, 139, 140, 141, 142, 143, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 182, 194, 195, 198, 199, 202, 204, 212, 214, 217, 229, 231, 232, 234, 237, 239, 240], "which": [1, 3, 6, 7, 10, 11, 12, 14, 15, 19, 20, 23, 24, 28, 41, 44, 46, 47, 48, 49, 63, 64, 72, 74, 75, 78, 79, 87, 88, 90, 91, 97, 112, 126, 127, 130, 131, 132, 139, 140, 142, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 171, 190, 194, 204, 207, 209, 212, 214, 217, 229, 231, 232, 234, 235, 237, 238, 239], "storing_devic": [1, 11, 12, 14, 15, 231, 232, 240], "dure": [1, 11, 12, 14, 15, 41, 44, 46, 47, 48, 72, 91, 195, 199, 231, 239], "A": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 56, 67, 72, 78, 79, 87, 90, 91, 93, 95, 96, 97, 101, 102, 103, 114, 116, 118, 119, 133, 135, 140, 141, 142, 145, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 183, 184, 185, 192, 199, 200, 204, 209, 212, 214, 217, 219, 232, 238, 239], "heurist": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 136, 231, 239], "usual": [1, 3, 5, 6, 7, 41, 44, 46, 47, 48, 118, 181, 204, 212, 214, 217, 226, 229, 239], "same": [1, 3, 10, 14, 23, 41, 42, 44, 46, 47, 48, 67, 72, 74, 75, 90, 91, 95, 103, 114, 136, 231, 232, 234, 235, 237, 238, 239], "storag": [1, 2, 7, 23, 25, 26, 27, 28, 35, 36, 37, 41, 43, 44, 46, 47, 48, 68, 225, 229, 231, 232, 235], "default": [1, 3, 9, 11, 12, 14, 15, 17, 19, 20, 23, 24, 25, 26, 27, 32, 35, 36, 41, 44, 46, 47, 48, 49, 52, 63, 64, 67, 71, 74, 75, 78, 79, 82, 87, 88, 89, 91, 92, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 133, 135, 136, 137, 139, 140, 143, 149, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 190, 192, 193, 195, 196, 197, 199, 204, 207, 212, 214, 217, 219, 223, 229, 231, 232, 235, 237, 238, 239, 240], "behaviour": [1, 3, 44, 64, 75, 79, 112, 126, 127, 195, 232], "besid": 1, "those": [1, 4, 6, 47, 48, 75, 87, 140, 141, 142, 200, 221, 222, 231, 232, 239], "choos": [1, 231], "follow": [1, 2, 3, 5, 6, 7, 23, 41, 44, 45, 46, 47, 48, 78, 103, 114, 151, 153, 161, 164, 199, 214, 217, 229, 231, 232, 234, 237, 238, 239, 240], "max_frames_per_traj": [1, 11, 12, 14, 15, 201, 231, 240], "frame": [1, 2, 11, 12, 14, 15, 23, 44, 63, 72, 133, 135, 136, 181, 182, 192, 195, 199, 201, 202, 231, 232, 239, 240], "call": [1, 3, 6, 7, 10, 11, 12, 14, 15, 23, 25, 26, 27, 28, 35, 36, 37, 38, 41, 44, 46, 47, 48, 63, 66, 67, 68, 75, 77, 78, 83, 86, 87, 91, 94, 95, 97, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 142, 149, 170, 181, 195, 229, 231, 232, 237, 238, 239], "frames_per_batch": [1, 11, 12, 14, 15, 201, 231, 232, 240], "each": [1, 3, 6, 7, 11, 12, 14, 15, 16, 21, 22, 23, 27, 41, 42, 44, 46, 47, 48, 78, 83, 86, 87, 88, 94, 95, 133, 142, 145, 146, 176, 177, 179, 180, 195, 196, 221, 222, 231, 232, 235, 237, 239, 240], "init_random_fram": [1, 11, 12, 14, 15, 201, 231, 232], "random": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 33, 41, 44, 45, 46, 47, 48, 67, 74, 75, 87, 97, 139, 140, 163, 195, 202, 231, 232, 235, 239, 240], "rand_step": [1, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 95, 239, 240], "reset_at_each_it": [1, 11, 12, 14, 15, 231], "split_traj": [1, 11, 12, 14, 15, 231], "pad": [1, 16, 103, 104, 105, 113, 196, 231, 232], "along": [1, 63, 64, 75, 79, 83, 89, 114, 118, 139, 140, 232, 238], "mask": [1, 11, 12, 14, 79, 196, 231, 232, 238, 239, 240], "point": [1, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 39, 40, 41, 44, 46, 47, 48, 63, 66, 78, 87, 89, 91, 94, 115, 139, 151, 156, 199, 226, 234, 239], "boolean": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 44, 79, 133, 174, 175, 176, 177, 178, 179, 180, 229], "repres": [1, 3, 11, 12, 14, 15, 19, 27, 41, 44, 46, 47, 48, 72, 79, 140, 145, 146, 167, 171, 196, 237, 238], "valid": [1, 79, 91, 103, 114, 133, 135, 161, 196, 229, 239], "valu": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 49, 62, 63, 64, 67, 74, 75, 78, 79, 81, 83, 87, 88, 89, 90, 91, 94, 95, 104, 105, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 190, 192, 193, 194, 195, 196, 199, 204, 207, 212, 214, 217, 219, 229, 231, 232, 234, 237, 239, 240], "exploration_mod": [1, 11, 14, 195, 225, 231, 232, 237], "strategi": [1, 229, 231], "reset_when_don": [1, 11, 14], "central": 2, "part": [2, 7, 23, 41, 44, 46, 47, 48, 75, 83, 143, 190, 223, 231, 232, 237, 239], "algorithm": [2, 7, 8, 11, 12, 45, 72, 152, 162, 163, 164, 165, 190, 204, 205, 212, 229, 231, 232, 235, 238, 240], "wide": [2, 3, 4], "we": [2, 3, 4, 6, 8, 19, 23, 41, 42, 44, 46, 47, 48, 78, 87, 95, 102, 113, 226, 229, 231, 232, 234, 235, 237, 238, 239, 240], "give": [2, 6, 45, 226, 231, 232, 235, 240], "abil": 2, "veri": [2, 3, 231, 232, 239, 240], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 64], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 225, 231, 232, 235], "advis": [2, 239], "share": [2, 3, 5, 7, 35, 36, 37, 38, 42, 47, 48, 95, 130, 131, 132, 223, 234, 237, 239, 240], "due": [2, 3, 4, 235, 239], "lower": [2, 11, 12, 14, 15, 18, 95, 123, 124, 238], "serialis": 2, "memmaptensor": [2, 235], "well": [2, 3, 7, 11, 12, 15, 23, 38, 41, 44, 46, 47, 48, 123, 124, 231, 232, 235, 237, 238, 239, 240], "specifi": [2, 10, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 83, 85, 92, 102, 139, 140, 231, 237], "file": [2, 5, 6, 7, 181, 229, 231, 232, 236], "locat": [2, 6, 44, 75, 82, 112, 119, 126, 127, 238], "node": [2, 204, 207, 209, 212, 214, 217], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 14, 27, 32, 75, 95, 102, 108, 110, 113, 116, 125, 133, 140, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 231, 232, 239, 240], "liststorag": [2, 25, 26, 27, 225], "were": [2, 6, 47, 48, 231], "found": [2, 5, 6, 9, 19, 23, 27, 41, 44, 46, 47, 48, 95, 140, 154, 162, 231, 232, 237], "rough": 2, "benchmark": [2, 3, 8], "http": [2, 4, 5, 6, 9, 25, 32, 46, 63, 78, 104, 105, 106, 107, 110, 111, 116, 118, 120, 121, 123, 124, 136, 145, 152, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 171, 174, 175, 178, 204, 207, 212, 214, 217, 235, 240], "com": [2, 4, 5, 6, 9, 235, 240], "tree": 2, "type": [2, 3, 23, 25, 27, 29, 41, 44, 45, 46, 47, 48, 66, 78, 87, 91, 94, 95, 103, 114, 118, 133, 135, 139, 140, 147, 204, 207, 209, 212, 214, 217, 221, 231, 232, 238, 239], "1x": 2, "lazytensorstorag": [2, 225], "83x": 2, "3": [2, 3, 5, 6, 9, 10, 11, 12, 14, 19, 20, 21, 22, 23, 24, 41, 44, 46, 47, 48, 66, 67, 75, 78, 87, 89, 91, 94, 102, 103, 104, 105, 111, 113, 114, 116, 119, 129, 130, 131, 132, 134, 137, 139, 142, 143, 145, 148, 158, 171, 172, 173, 176, 177, 179, 180, 182, 198, 209, 229, 231, 232, 235, 238, 239, 240], "44x": 2, "difficult": 2, "trajecotri": 2, "One": [2, 7, 122, 133, 135, 139, 167, 189, 231, 237, 238, 239], "element": [2, 21, 22, 24, 25, 26, 27, 28, 32, 35, 36, 37, 79, 103, 133, 139, 140, 190, 231, 239], "pai": [2, 7, 232], "attent": [2, 7, 232, 237], "alwai": [2, 23, 41, 44, 46, 47, 48, 74, 232], "lead": [2, 3, 7, 9, 10, 19, 87, 112, 126, 127, 240], "dimens": [2, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 63, 64, 71, 75, 79, 85, 89, 92, 103, 114, 117, 118, 125, 126, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 223, 231, 238], "other": [2, 3, 6, 7, 23, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 67, 84, 95, 118, 119, 140, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 196, 204, 212, 214, 217, 221, 222, 229, 231, 232, 235, 237, 239, 240], "word": [2, 231, 239], "creat": [2, 3, 4, 5, 6, 9, 11, 12, 15, 23, 25, 26, 27, 41, 42, 44, 46, 47, 48, 49, 78, 83, 90, 91, 95, 101, 103, 104, 105, 106, 107, 111, 114, 115, 140, 155, 156, 163, 182, 196, 202, 205, 206, 219, 221, 222, 231, 232, 235, 237, 238, 239, 240], "1m": [2, 201, 235], "multidimension": [2, 27, 32, 238], "doe": [2, 3, 25, 27, 32, 38, 117, 141, 142, 153, 161, 162, 170, 199, 229, 231, 238, 239], "desir": [2, 3, 23, 41, 44, 46, 47, 48, 49, 66, 75, 78, 79, 87, 91, 94, 100, 103, 114, 139, 140, 231, 232, 238], "sub": [2, 3, 41, 44, 46, 47, 48, 79, 141, 142, 190, 199, 234, 239, 240], "diversifi": 2, "make": [2, 6, 23, 38, 41, 44, 46, 47, 48, 55, 58, 75, 78, 79, 97, 101, 117, 140, 162, 196, 206, 223, 231, 232, 234, 235, 237, 238, 239, 240], "more": [2, 5, 7, 10, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 96, 114, 117, 119, 133, 135, 139, 145, 152, 156, 162, 171, 174, 175, 178, 194, 207, 226, 229, 231, 232, 234, 235, 237, 238, 239], "To": [2, 3, 5, 6, 7, 23, 25, 26, 27, 41, 44, 46, 47, 48, 95, 130, 131, 132, 136, 199, 231, 232, 235, 237, 239, 240], "custom": [2, 3, 4, 23, 41, 44, 46, 47, 48, 223], "name": [2, 5, 6, 10, 23, 41, 44, 46, 47, 48, 52, 67, 69, 83, 84, 91, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 183, 185, 186, 187, 189, 193, 194, 204, 207, 209, 212, 214, 217, 229, 231, 232, 237, 239], "randomcroptensordict": 2, "here": [2, 3, 6, 7, 8, 9, 231, 232, 234, 235, 237, 238, 239, 240], "how": [2, 23, 25, 27, 32, 41, 44, 46, 47, 48, 153, 160, 161, 162, 199, 226, 231, 232, 234, 235, 239, 240], "parent": [2, 3, 29, 41, 64, 71, 72, 75, 78, 87, 90, 92, 130, 162, 232, 238, 239, 240], "subclass": [2, 3, 41, 44, 46, 47, 48, 90, 97, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 134, 135, 136, 138, 139, 140, 141, 149, 162, 231], "basic": [2, 45, 239], "properti": [2, 3, 41, 44, 45, 46, 47, 48, 91, 108, 112, 117, 122, 125, 126, 127, 237, 238], "action": [2, 3, 7, 8, 11, 12, 14, 20, 24, 29, 41, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 67, 68, 72, 74, 84, 91, 101, 102, 104, 105, 106, 107, 109, 110, 114, 115, 116, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 145, 146, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 204, 207, 209, 212, 214, 217, 219, 223, 229, 231, 232, 234, 235, 237, 238, 239, 240], "shape": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 44, 46, 47, 48, 49, 64, 75, 87, 89, 96, 97, 108, 109, 114, 117, 119, 122, 125, 137, 139, 142, 167, 182, 190, 196, 199, 219, 231, 232, 234, 235, 237, 238, 239, 240], "dtype": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 67, 68, 75, 78, 87, 89, 91, 94, 97, 102, 116, 117, 118, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 171, 172, 173, 204, 207, 209, 212, 214, 217, 231, 232, 234, 235, 237, 238, 239, 240], "import": [2, 3, 5, 6, 9, 11, 12, 14, 25, 27, 32, 42, 44, 45, 47, 48, 75, 78, 87, 94, 95, 102, 114, 116, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 153, 171, 172, 173, 192, 195, 204, 207, 209, 212, 214, 217, 219, 231, 232, 234, 235, 237, 238, 239, 240], "match": [2, 3, 5, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 103, 108, 114, 125, 139, 140, 161, 163, 165, 196, 200, 232, 234, 237, 238, 239, 240], "input": [2, 3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 45, 46, 47, 48, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 97, 101, 103, 104, 105, 106, 107, 113, 114, 117, 118, 123, 124, 136, 139, 140, 141, 142, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 201, 219, 229, 232, 238, 239, 240], "output": [2, 3, 11, 12, 14, 15, 23, 25, 26, 27, 41, 44, 45, 46, 47, 48, 63, 75, 78, 88, 90, 94, 97, 103, 104, 105, 109, 110, 113, 114, 119, 130, 133, 135, 136, 139, 140, 141, 142, 145, 146, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 182, 190, 231, 234, 235, 238, 239, 240], "send": [2, 3, 7, 232, 238, 240], "receiv": [2, 3, 23, 41, 44, 46, 47, 48, 90, 114, 232, 234], "parallelenv": [2, 3, 11, 12, 14, 15, 46, 48, 220, 225, 231, 232, 234, 239, 240], "commun": [2, 3, 226, 239], "spawn": [2, 3, 46], "check": [2, 3, 4, 5, 6, 10, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 64, 70, 79, 97, 139, 140, 147, 231, 232, 234, 235, 239], "check_env_spec": [2, 3, 225], "method": [2, 3, 11, 12, 14, 15, 23, 27, 32, 35, 36, 37, 38, 41, 44, 46, 47, 48, 63, 66, 71, 75, 78, 80, 87, 91, 94, 102, 113, 130, 131, 132, 139, 140, 141, 147, 152, 181, 220, 229, 230, 231, 237, 238, 239], "saniti": [2, 3, 6, 97], "offer": [3, 6, 239], "handl": [3, 23, 41, 44, 46, 47, 48, 95, 114, 199, 221, 222], "differ": [3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 63, 67, 75, 91, 92, 114, 116, 145, 146, 162, 167, 171, 172, 195, 199, 200, 221, 222, 229, 231, 232, 234, 235, 238, 239], "backend": [3, 6, 10, 229, 231], "dm": [3, 239], "base": [3, 7, 8, 11, 12, 14, 15, 34, 40, 45, 46, 87, 93, 130, 157, 199, 204, 212, 214, 217, 229, 231, 233, 236, 239], "goal": [3, 231, 232], "abl": [3, 234, 238, 240], "even": [3, 7, 12, 35, 36, 37, 38, 42, 231, 238, 239], "simul": [3, 4, 6, 7, 60, 61, 102, 116, 231], "some": [3, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 78, 97, 104, 140, 141, 142, 190, 201, 229, 231, 232, 237, 239, 240], "box": [3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "wrapper": [3, 10, 15, 27, 28, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 119, 133, 135, 136, 140, 144, 171, 185, 186, 187, 223, 231, 235, 239], "under": [3, 23, 41, 44, 46, 47, 48, 139, 140, 231, 239], "lib": [3, 4, 5, 6, 8, 9, 11, 12, 14, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 75, 87, 95, 204, 207, 209, 212, 214, 217, 219, 231, 232, 234, 235, 239, 240], "hope": 3, "imit": 3, "torch": [3, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 64, 66, 67, 68, 75, 78, 82, 87, 89, 91, 94, 95, 101, 102, 103, 108, 110, 112, 113, 114, 116, 117, 118, 119, 122, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 154, 171, 172, 173, 190, 198, 204, 207, 209, 212, 214, 217, 219, 229, 231, 232, 234, 235, 237, 238, 239, 240], "nn": [3, 11, 12, 14, 23, 41, 44, 45, 46, 47, 48, 66, 67, 78, 87, 91, 94, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 116, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 155, 156, 171, 172, 173, 214, 217, 219, 231, 232, 234, 235, 237, 240], "typic": [3, 7, 23, 41, 44, 46, 47, 48, 229], "organis": 3, "allow": [3, 11, 12, 14, 15, 23, 24, 41, 44, 46, 47, 48, 49, 87, 101, 114, 167, 229, 231, 237, 238, 239], "gener": [3, 6, 7, 14, 26, 34, 42, 45, 75, 83, 84, 108, 122, 129, 137, 140, 143, 144, 163, 171, 174, 175, 178, 188, 199, 231, 232, 233, 234, 235, 237, 238, 239, 240], "arbitrari": [3, 24, 47, 48, 231, 232], "nest": [3, 19, 23, 41, 44, 46, 47, 48, 49, 171, 172, 173, 229, 232, 238, 240], "attribut": [3, 23, 41, 44, 46, 47, 48, 78, 86, 140, 232, 237], "batch_siz": [3, 7, 11, 12, 14, 19, 25, 26, 27, 28, 41, 43, 45, 51, 58, 59, 60, 61, 63, 87, 102, 116, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 190, 196, 204, 207, 209, 212, 214, 217, 231, 232, 234, 235, 237, 238, 239, 240], "togeth": [3, 11, 12, 14, 15, 79, 130, 131, 132, 144, 237], "expect": [3, 6, 19, 23, 29, 41, 44, 45, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 97, 136, 139, 142, 152, 153, 161, 162, 202, 226, 229, 231, 239], "live": [3, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 44, 45, 46, 47, 48], "actual": [3, 6, 11, 12, 15, 41, 44, 46, 47, 48, 201, 231, 232], "respons": [3, 7, 199, 237, 239], "just": [3, 190, 229, 232, 237, 238, 239, 240], "retriev": [3, 25, 26, 27, 28, 41, 44, 46, 47, 48, 49, 64, 75, 101, 102, 116, 140, 153, 161, 162, 171, 172, 173, 204, 207, 209, 212, 214, 217, 223, 229, 238, 239], "care": [3, 7, 41, 44, 46, 47, 48, 90, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 231, 232], "map": [3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 41, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 95, 119, 130, 131, 132, 139, 140, 142, 144, 145, 225, 231, 232, 235, 237, 238], "see": [3, 5, 6, 7, 8, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 96, 103, 112, 114, 117, 126, 127, 139, 140, 196, 231, 232, 237, 238, 239], "below": [3, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 103, 112, 114, 126, 127, 139, 196], "parametr": [3, 118, 140, 165, 231, 237], "hardwar": 3, "observation_spec": [3, 41, 45, 63, 64, 65, 66, 68, 69, 71, 73, 75, 78, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 102, 116, 202, 219, 231, 234, 239], "compositespec": [3, 41, 43, 45, 67, 86, 87, 102, 116, 129, 133, 135, 137, 142, 225, 231, 239], "pair": [3, 23, 41, 44, 46, 47, 48, 49, 87, 130, 140, 231, 232, 234, 238, 239], "input_spec": [3, 41, 45, 47, 48, 66, 67, 68, 75, 84, 86, 90, 91, 92, 102, 116, 239], "action_spec": [3, 13, 41, 44, 45, 46, 47, 48, 51, 58, 91, 124, 129, 131, 134, 137, 138, 145, 146, 219, 231, 232, 234, 235, 239, 240], "reward_spec": [3, 41, 45, 62, 66, 68, 81, 82, 83, 90, 91, 92, 102, 116, 239], "reward": [3, 11, 12, 14, 23, 29, 41, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 62, 66, 68, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 101, 102, 116, 144, 154, 155, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 192, 193, 195, 197, 223, 229, 231, 232, 234, 235, 238, 239, 240], "importantli": [3, 140], "4": [3, 6, 11, 12, 14, 17, 20, 24, 45, 52, 53, 54, 57, 95, 102, 103, 104, 105, 110, 111, 113, 114, 116, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 148, 181, 231, 232, 235, 238, 239, 240], "action_s": 3, "simpli": [3, 5, 69, 84, 231, 232, 239], "With": [3, 229, 238, 239], "necessarili": 3, "requir": [3, 6, 7, 14, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 114, 139, 141, 142, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 229, 231, 232, 237, 239], "stateless": [3, 47, 48, 90, 239], "set_se": [3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 51, 58, 75, 91, 231, 239, 240], "integ": [3, 11, 12, 14, 15, 21, 22, 23, 24, 31, 38, 41, 44, 46, 47, 48, 72, 75, 86, 103, 114], "seed": [3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 52, 59, 60, 91, 97, 199, 231], "next": [3, 7, 11, 12, 14, 19, 23, 25, 26, 27, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 95, 101, 102, 116, 124, 144, 163, 170, 171, 172, 173, 231, 232, 234, 235, 239, 240], "determinist": [3, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 110, 120, 124, 129, 135, 139, 140, 231, 232, 239], "preced": [3, 113, 237], "without": [3, 6, 8, 23, 41, 44, 46, 47, 48, 131, 163, 170, 219, 226, 231, 232, 239], "risk": [3, 79], "overlap": 3, "consecut": [3, 136, 232, 239], "still": [3, 8, 86, 133, 161, 231, 232, 234, 239], "reproduc": [3, 97], "max_step": [3, 41, 44, 45, 46, 47, 48, 59, 60, 86, 101, 231, 232, 239, 240], "maximum": [3, 11, 12, 14, 15, 18, 23, 35, 36, 37, 41, 44, 46, 47, 48, 67, 81, 86, 88, 125, 126, 127, 137, 165, 196, 231, 232, 239, 240], "safemodul": [3, 45, 61, 102, 115, 130, 131, 132, 133, 135, 136, 137, 140, 142, 144, 147, 148, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 195, 205, 206, 219, 225, 240], "ani": [3, 4, 7, 19, 23, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 71, 78, 79, 91, 95, 97, 103, 114, 118, 139, 140, 141, 142, 162, 185, 199, 226, 231, 232, 239, 240], "compat": [3, 6, 10, 23, 38, 41, 44, 46, 47, 48, 56, 63, 95, 147, 167, 232, 240], "better": [3, 7, 232], "intens": [3, 7], "gym3": 3, "envpool": [3, 46], "interfac": [3, 114, 117, 237], "simultan": [3, 47, 48], "often": [3, 7, 160, 199, 239], "competit": 3, "advantag": [3, 7, 111, 152, 153, 161, 162, 164, 171, 172, 173, 174, 175, 176, 178, 179, 229, 231, 232, 239], "scale": [3, 75, 82, 110, 112, 119, 123, 124, 126, 127, 130, 131, 132, 137, 140, 142, 197, 202, 204, 212, 214, 217, 223, 231, 232, 237, 240], "varieti": 3, "its": [3, 4, 6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 45, 46, 47, 48, 63, 90, 91, 95, 103, 133, 134, 135, 140, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 199, 219, 229, 231, 232, 235, 237, 239], "own": [3, 11, 12, 15, 23, 41, 44, 46, 47, 48, 232, 237], "As": [3, 41, 44, 46, 47, 48, 140, 231, 232, 235, 239, 240], "inherit": [3, 115, 229, 237, 238], "enjoi": 3, "exact": 3, "Of": [3, 6, 226, 239], "cours": [3, 226, 239], "correspond": [3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 44, 45, 46, 47, 48, 78, 87, 91, 94, 95, 136, 140, 232, 235], "count": [3, 42, 86, 136, 195, 201, 239], "def": [3, 10, 23, 41, 42, 44, 45, 46, 47, 48, 102, 116, 143, 145, 148, 229, 231, 232, 234, 237, 238, 239, 240], "make_env": [3, 60, 95, 101, 205, 206, 231, 232, 239], "gymenv": [3, 4, 11, 12, 14, 15, 42, 56, 66, 75, 87, 91, 95, 204, 207, 209, 212, 214, 217, 219, 225, 231, 232, 235, 239, 240], "pendulum": [3, 11, 12, 14, 15, 42, 46, 54, 55, 66, 75, 87, 91, 95, 219, 232, 239, 240], "v1": [3, 11, 12, 14, 42, 46, 75, 87, 167, 176, 177, 179, 180, 232, 239, 240], "from_pixel": [3, 52, 53, 204, 212, 214, 217, 231, 232, 235, 239, 240], "9": [3, 6, 23, 95, 231, 232, 235, 238], "81": [3, 235], "0": [3, 4, 5, 6, 7, 9, 10, 21, 22, 23, 24, 25, 27, 32, 41, 44, 45, 46, 47, 48, 51, 58, 62, 64, 66, 67, 74, 75, 78, 87, 89, 91, 94, 95, 97, 101, 102, 103, 104, 105, 107, 110, 112, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 133, 135, 136, 139, 142, 149, 152, 153, 157, 158, 159, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 190, 197, 199, 219, 223, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240], "must": [3, 6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 72, 75, 87, 91, 92, 103, 114, 139, 140, 145, 146, 174, 175, 176, 177, 178, 179, 180, 190, 195, 196, 199, 200, 204, 207, 209, 212, 214, 217, 231, 232, 234, 237, 238, 240], "print": [3, 5, 6, 11, 12, 14, 17, 19, 20, 23, 24, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 68, 75, 87, 89, 95, 101, 103, 114, 119, 129, 130, 131, 132, 134, 135, 136, 138, 139, 142, 143, 145, 146, 148, 204, 207, 209, 212, 214, 217, 219, 229, 231, 232, 234, 235, 237, 238, 239, 240], "b": [3, 6, 7, 16, 19, 117, 118, 171, 172, 173, 182, 235, 237, 238], "c": [3, 5, 6, 19, 75, 204, 207, 209, 212, 214, 217, 238], "d": [3, 25, 32, 140, 238, 240], "get": [3, 5, 6, 7, 38, 42, 47, 48, 64, 67, 68, 75, 79, 89, 95, 129, 135, 140, 174, 175, 178, 189, 231, 232, 237, 239, 240], "forc": [3, 5, 6, 232], "variou": [3, 11, 12, 14, 15, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 221, 222, 231, 232, 239], "reset_work": 3, "fals": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 55, 58, 59, 60, 64, 66, 71, 74, 75, 78, 79, 82, 87, 89, 91, 92, 94, 95, 97, 102, 103, 104, 114, 116, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 171, 172, 173, 176, 177, 179, 180, 192, 193, 195, 196, 197, 199, 204, 207, 209, 212, 214, 217, 223, 229, 231, 232, 234, 235, 237, 238, 239, 240], "field": [3, 11, 12, 14, 15, 19, 23, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 87, 91, 102, 116, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 202, 204, 207, 209, 212, 214, 217, 226, 232, 234, 235, 237, 238, 239, 240], "bool": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 64, 67, 71, 74, 75, 78, 82, 87, 89, 91, 92, 94, 95, 97, 101, 102, 103, 104, 105, 112, 114, 116, 117, 118, 126, 127, 133, 136, 139, 140, 141, 142, 147, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 176, 177, 179, 180, 181, 182, 192, 193, 195, 196, 197, 199, 204, 207, 209, 212, 214, 217, 223, 232, 234, 235, 239, 240], "500": [3, 199, 231, 232, 239, 240], "uint8": [3, 31, 89, 232, 235, 239, 240], "none": [3, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 122, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 158, 159, 164, 165, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 199, 202, 204, 205, 206, 207, 209, 212, 214, 217, 219, 221, 222, 223, 229, 231, 232, 237, 238, 239, 240], "is_shar": [3, 11, 12, 14, 19, 45, 51, 58, 59, 60, 87, 95, 102, 116, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 204, 207, 209, 212, 214, 217, 232, 234, 235, 237, 238, 239, 240], "note": [3, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 95, 136, 140, 231, 232, 234, 237, 238, 239], "launch": 3, "quit": [3, 231, 232, 239], "mani": [3, 153, 161, 162, 163, 238, 239], "start": [3, 4, 11, 42, 101, 194, 231, 232, 239], "bottleneck": [3, 7], "why": [3, 231, 239], "so": [3, 5, 6, 9, 23, 41, 44, 46, 47, 48, 87, 95, 141, 142, 231, 239], "onc": [3, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 91, 133, 135, 229, 231, 232, 239], "great": [3, 6, 7, 238, 240], "speedup": [3, 7, 239], "anoth": [3, 7, 41, 44, 46, 47, 48, 90, 114, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 231, 234, 238, 239], "thing": [3, 6, 7, 232, 239], "misspecifi": 3, "caus": [3, 6, 7, 79], "breakag": 3, "prealloc": 3, "In": [3, 4, 6, 7, 9, 10, 11, 12, 15, 23, 41, 44, 46, 47, 48, 66, 78, 84, 87, 90, 91, 94, 112, 114, 124, 126, 127, 139, 142, 151, 200, 221, 222, 223, 231, 232, 234, 235, 238, 239], "obj": [3, 19, 139, 140, 141], "rais": [3, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 70, 91, 97, 148, 231, 232], "assert": [3, 5, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 95, 97, 101, 119, 171, 172, 173, 190, 198, 231, 232, 234, 237, 238, 239], "mismatch": [3, 238], "serialenv": [3, 87, 225, 239], "mostli": [3, 15, 239], "purpos": [3, 6, 219, 235, 238, 239], "want": [3, 5, 6, 7, 75, 231, 235, 238, 239, 240], "assess": [3, 231], "subprocess": [3, 42], "addit": [3, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 133, 139, 151, 171, 232], "multithread": [3, 25, 26, 27, 46], "multithreadedenv": [3, 225], "underneath": 3, "higher": [3, 231, 232, 239], "restrict": [3, 232, 235, 239], "flexibl": [3, 8, 46, 229, 237, 239], "cover": [3, 226, 240], "popular": 3, "atari": [3, 63, 239], "classic": [3, 45, 237, 238], "benchmark_batched_env": 3, "compar": [3, 41, 195, 232, 239], "case": [3, 4, 6, 7, 10, 11, 12, 14, 15, 19, 25, 27, 32, 41, 44, 46, 47, 48, 87, 91, 97, 114, 139, 140, 142, 151, 190, 200, 221, 222, 223, 229, 231, 237, 238, 239], "raw": [3, 112, 126, 127], "treat": 3, "logic": 3, "torchvis": [3, 78, 94, 239, 240], "transformedenv": [3, 42, 66, 74, 75, 87, 90, 95, 204, 207, 209, 212, 214, 217, 231, 232, 234, 235, 239, 240], "primit": [3, 231, 232], "built": [3, 4, 6, 215, 219, 220, 223, 239], "base_env": [3, 67, 68, 87, 231, 232, 235, 239, 240], "totensorimag": [3, 209, 232, 239, 240], "in_kei": [3, 11, 12, 14, 45, 62, 63, 64, 65, 67, 68, 71, 73, 75, 76, 78, 80, 81, 82, 83, 88, 89, 90, 94, 95, 102, 116, 129, 130, 131, 132, 137, 139, 140, 142, 143, 147, 148, 154, 155, 171, 172, 173, 181, 182, 214, 217, 219, 231, 232, 234, 235, 237, 239, 240], "resiz": [3, 232, 239], "64": [3, 104, 105, 111, 231, 232, 234, 235, 239, 240], "By": [3, 24, 44, 47, 48, 140, 195, 223, 235, 238, 239], "now": [3, 6, 231, 234, 235, 237, 238, 239], "appar": [3, 192], "bring": [3, 239], "signific": [3, 4, 7, 239], "kind": [3, 29, 101], "consult": 3, "achiev": [3, 23, 41, 44, 46, 47, 48, 196, 229, 237, 238, 239], "interest": [3, 47, 48, 140, 239], "abov": [3, 6, 23, 41, 44, 46, 47, 48, 112, 126, 127, 151, 229, 231, 232, 239], "resize_par": 3, "sinc": [3, 4, 6, 23, 41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 231, 232, 235, 239, 240], "out_kei": [3, 11, 12, 14, 45, 47, 48, 62, 63, 64, 65, 71, 73, 75, 76, 78, 80, 81, 83, 88, 89, 90, 94, 102, 116, 129, 130, 131, 132, 137, 139, 140, 142, 143, 145, 146, 147, 148, 171, 172, 173, 195, 219, 231, 234, 235, 237, 239, 240], "keyword": [3, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 140, 220, 231, 237, 239], "easi": [3, 4, 232, 235, 238, 239], "root": [3, 19, 112, 126, 127, 239], "graph": [3, 7, 168, 169], "inv": [3, 67], "appli": [3, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 63, 64, 66, 67, 69, 70, 71, 72, 77, 79, 84, 86, 87, 88, 90, 91, 93, 95, 126, 171, 194, 229, 231, 232, 237, 239, 240], "revers": 3, "order": [3, 14, 23, 24, 25, 26, 27, 28, 41, 44, 46, 47, 48, 91, 139, 141, 142, 237], "chain": [3, 25, 26, 27, 66, 67, 103, 142, 239], "taken": [3, 41, 44, 46, 47, 48, 232], "includ": [3, 6, 8, 23, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 91, 95, 201, 229, 231, 232, 238, 239], "invers": [3, 75, 150], "through": [3, 4, 7, 14, 47, 48, 79, 114, 140, 141, 142, 149, 231, 232, 234, 235, 237, 239], "in_keys_inv": [3, 68, 75, 76, 90, 231, 234, 239], "append_transform": [3, 25, 26, 27, 28, 78, 87, 231, 239, 240], "doubletofloat": [3, 204, 207, 212, 214, 217, 231, 234], "float32": [3, 11, 12, 14, 19, 25, 29, 32, 45, 51, 58, 59, 60, 68, 75, 87, 89, 102, 116, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 204, 207, 209, 212, 214, 217, 232, 234, 235, 237, 238, 239, 240], "float64": [3, 23, 41, 44, 46, 47, 48, 59, 60, 66, 78, 87, 91, 94, 139, 234, 239], "append": [3, 7, 25, 26, 27, 28, 42, 87, 101, 231, 232, 235, 238, 240], "regist": [3, 23, 24, 41, 44, 46, 47, 48, 91, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 229, 237], "manipul": [3, 7, 78, 239], "keep": [3, 6, 7, 12, 75, 78, 94, 95, 136, 192, 199, 232, 238, 239, 240], "mind": 3, "go": [3, 6, 79, 235, 237, 239], "singl": [3, 15, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 49, 63, 64, 78, 89, 94, 103, 113, 114, 142, 156, 163, 176, 177, 179, 180, 214, 223, 231, 232, 234, 235, 237], "third_transform": 3, "prohibit": 3, "would": [3, 23, 41, 44, 46, 47, 48, 114, 229, 232, 237, 238, 239], "replac": [3, 5, 6, 23, 67, 232], "unexpect": [3, 23, 41, 44, 46, 47, 48, 91, 239], "behviour": 3, "fortun": 3, "eras": [3, 41, 44, 46, 47, 48, 49], "ident": [3, 14, 47, 48, 221, 222, 231, 237, 238], "alreadi": [3, 7, 23, 41, 44, 46, 47, 48, 140, 231, 232], "place": [3, 11, 12, 14, 15, 19, 23, 41, 42, 44, 46, 47, 48, 49, 66, 78, 87, 91, 94, 95, 139, 196, 200, 201, 232, 237], "chang": [3, 4, 6, 23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 91, 95, 231, 235, 238, 239], "happen": [3, 133, 235, 239], "catfram": [3, 232], "hold": [3, 168, 169], "context": [3, 4, 7, 23, 41, 42, 44, 46, 47, 48, 87, 92, 117, 168, 169, 171, 174, 175, 178, 195, 231, 232, 235, 237], "notic": [3, 232], "loss": [3, 7, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 194, 199, 203, 208, 210, 211, 213, 214, 216, 219, 229, 231, 232, 238, 240], "parenthood": 3, "reason": [3, 7, 23, 41, 44, 46, 47, 48, 78, 231, 232], "henc": [3, 79, 231], "composit": [3, 19], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 238], "log": [3, 7, 108, 122, 127, 140, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 192, 193, 195, 199, 219, 229, 232, 237, 240], "tool": [4, 239], "real": [4, 140], "world": [4, 45, 144, 158, 239], "system": 4, "robot": [4, 6, 78, 94], "game": 4, "adopt": [4, 231, 239], "interact": [4, 6, 7, 14, 140, 239], "histor": 4, "wa": [4, 6, 41, 44, 46, 47, 48, 91, 160, 166, 231, 232, 234, 240], "ceas": 4, "maintain": [4, 8], "fork": 4, "gymnasium": [4, 10, 240], "farama": 4, "foundat": 4, "document": [4, 6, 23, 41, 44, 46, 47, 48, 91, 240], "further": 4, "detail": [4, 5, 6, 23, 41, 44, 46, 47, 48, 91, 145, 152, 156, 162, 207, 226, 234, 238], "usag": [4, 6, 165], "known": [4, 6, 7, 231], "gone": 4, "bc": [4, 240], "break": [4, 11, 12, 14, 23, 41, 44, 46, 47, 48, 95, 231, 232, 237, 240], "face": [4, 7, 8, 232, 239], "modif": [4, 19, 23, 41, 44, 46, 47, 48, 71, 231, 238], "practic": [4, 7, 112, 126, 127, 151, 226, 232, 235, 239], "torchrl": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 233, 234, 235, 236, 237, 238], "against": [4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 97, 139, 140], "13": [4, 9, 10, 232, 235, 236, 237], "between": [4, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 67, 74, 81, 89, 91, 97, 103, 114, 140, 158, 159, 161, 167, 171, 195, 199, 231, 232, 237, 238, 239], "howev": [4, 6, 23, 41, 44, 46, 47, 48, 83, 86, 91, 231, 232, 238, 239], "around": [4, 6, 15, 27, 28, 45, 140, 171, 239], "construct": [4, 23, 41, 44, 46, 47, 48, 97, 124, 140, 199, 204, 212, 237, 239], "automat": [4, 41, 44, 46, 47, 48, 75, 129, 137, 232, 240], "wrap": [4, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 97, 130, 131, 132, 144, 231, 232, 237, 239], "best": [4, 8, 232, 240], "gymwrapp": [4, 44, 225, 240], "If": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 64, 65, 67, 69, 71, 74, 75, 78, 79, 83, 84, 86, 87, 90, 91, 94, 95, 103, 113, 114, 133, 135, 136, 139, 140, 141, 142, 148, 149, 151, 158, 165, 170, 171, 172, 173, 179, 180, 194, 196, 199, 200, 202, 204, 212, 214, 217, 219, 223, 226, 231, 232, 234, 237, 238, 239, 240], "you": [4, 5, 6, 7, 9, 23, 41, 44, 46, 47, 48, 95, 226, 231, 232, 234, 235, 238, 239, 240], "feel": [4, 226, 240], "free": [4, 6, 152, 158, 162, 229, 240], "gladli": 4, "instruct": [5, 6, 9, 67], "prepar": 5, "conda": [5, 6, 226], "assum": [5, 19, 24, 28, 44, 47, 48, 65, 71, 78, 79, 83, 87, 94, 113, 165, 176, 177, 179, 180, 182, 231, 232, 234], "let": [5, 6, 23, 41, 44, 46, 47, 48, 195, 231, 232, 234, 235, 237, 238, 239, 240], "n": [5, 6, 17, 20, 23, 24, 41, 44, 46, 47, 48, 63, 67, 71, 92, 116, 140, 152, 170, 196, 229, 231, 232, 238, 239], "7": [5, 9, 20, 24, 102, 103, 113, 114, 116, 231, 232, 235, 240], "cmake": 5, "14": [5, 10, 75, 235], "activ": [5, 6, 8, 103, 110, 114, 162, 240], "sim": 5, "bullet": 5, "physic": [5, 6, 229, 231], "headless": [5, 6], "mode": [5, 14, 23, 41, 44, 46, 47, 48, 91, 95, 98, 100, 108, 112, 122, 125, 126, 127, 140, 195, 231, 232, 239, 240], "cluster": [5, 6, 7, 226], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 113, 148], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 20], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 23, 41, 44, 46, 47, 48, 85, 231, 239], "command": [5, 6, 9, 239], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 225], "_has_habitat": 5, "_env": [5, 239], "available_env": [5, 50, 51, 52, 53, 54, 55, 57, 58, 239], "startswith": 5, "oserror": 5, "could": [5, 232, 235, 238, 239], "load": [5, 11, 12, 14, 15, 25, 26, 27, 53, 223, 229, 232], "libllvmlit": 5, "solut": [5, 6, 7, 8, 226, 229, 240], "ionstal": 5, "miss": [5, 6, 10, 19, 23, 41, 44, 46, 47, 48, 87, 91, 141, 142, 226], "add": [5, 23, 25, 26, 27, 28, 39, 40, 41, 44, 46, 47, 48, 117, 152, 194, 231, 232, 238, 240], "pointer": [5, 42, 238], "path": [5, 6, 23, 35, 41, 44, 46, 47, 48, 78, 94, 116, 199, 229], "env_nam": [5, 46, 50, 52, 54, 56, 57, 231, 239], "llvmlite": 5, "config": [5, 6, 78, 94, 202, 204, 205, 206, 207, 209, 212, 214, 215, 217, 220], "var": [5, 6, 23, 41, 44, 46, 47, 48, 91], "ld_preload": [5, 6], "python3": [5, 6, 9, 231, 232], "8": [5, 6, 32, 51, 103, 104, 105, 111, 114, 130, 131, 132, 137, 139, 142, 235, 237, 240], "site": [5, 6, 231, 232], "deactiv": [5, 6], "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 23, 41, 44, 46, 47, 48, 91], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "link": [5, 6], "right": [5, 6, 113, 231, 232, 239], "mujoco_env": [5, 6], "proper": [5, 6], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 130, 131, 132, 234, 239], "joint": [6, 232], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 77, 78, 94, 130, 131, 132, 231], "develop": [6, 240], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 23], "area": 6, "demand": [6, 239], "fast": [6, 8, 51, 163, 231, 232], "accur": [6, 231], "articul": 6, "recent": [6, 10, 231, 232, 239], "acquir": [6, 231], "access": [6, 7, 23, 41, 44, 46, 47, 48, 49, 78, 223, 226, 238], "whomev": 6, "licenc": 6, "incorpor": [6, 231], "relianc": 6, "obsolet": 6, "seri": [6, 7, 24, 39, 40, 48, 74, 90, 182, 239], "legaci": 6, "capabl": [6, 229, 231, 234, 235, 239], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 231], "gpu": [6, 7, 23, 41, 44, 46, 47, 48, 239], "our": [6, 7, 231, 232, 234, 235, 237, 238, 240], "advic": [6, 239], "sudo": [6, 226], "enabl": [6, 7, 136, 195], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 7, 47, 78, 90, 94, 154, 229, 231, 239], "awar": [6, 35, 36, 37, 38], "fact": [6, 7, 232, 235, 239], "indent": 6, "workflow": [6, 130, 131, 132], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 23, 41, 42, 44, 46, 47, 48, 91, 103, 114, 130, 131, 132, 195, 231, 235, 237, 239], "tell": 6, "variabl": [6, 7, 20, 24, 116, 130, 131, 132, 163, 229, 237], "mujoco_gl": 6, "pyopengl_platform": 6, "pre": [6, 23, 36, 41, 44, 46, 47, 48, 78, 94, 239], "binari": [6, 17, 24, 62, 145, 146], "releas": [6, 9, 23, 41, 44, 46, 47, 48, 91, 240], "need": [6, 7, 9, 23, 38, 41, 44, 46, 47, 48, 71, 78, 91, 94, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 119, 120, 121, 123, 124, 133, 135, 136, 139, 149, 151, 163, 170, 182, 199, 223, 231, 237, 238, 239, 240], "These": [6, 78, 94, 239], "instead": [6, 7, 10, 20, 23, 41, 44, 46, 47, 48, 71, 87, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 223, 231, 232, 237, 239], "refer": [6, 7, 23, 41, 44, 46, 47, 48, 91, 95, 102, 110, 116, 120, 121, 123, 124, 145, 152, 156, 157, 158, 159, 162, 171, 174, 175, 178, 207, 231, 232], "setup": 6, "mkdir": 6, "cd": 6, "tag": [6, 182, 185, 223], "earlier": [6, 11, 12, 14, 15, 231], "roboti": 6, "u": [6, 9, 231, 235, 237, 239, 240], "download": [6, 9, 78, 94, 231, 232, 233, 234, 235, 237, 238, 239, 240], "html": [6, 46], "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 44, 78, 94, 102, 196, 231, 232], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": [6, 231, 232, 235], "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 238], "hard": [6, 160, 232, 239], "later": [6, 107, 140, 231, 232], "try": [6, 7, 148, 232, 238, 239, 240], "nativ": [6, 8, 41, 44, 46, 47, 48, 63, 237], "local": [6, 9, 14, 23, 41, 44, 46, 47, 48, 91, 185], "modifi": [6, 7, 23, 41, 44, 46, 47, 48, 66, 71, 78, 87, 90, 91, 94, 136, 139, 201, 204, 212, 214, 217, 231, 237], "nvidia": 6, "driver": 6, "older": [6, 10], "hack": 6, "line": [6, 23, 41, 44, 46, 47, 48, 231, 232], "adatp": 6, "script": [6, 97, 204, 207, 209, 212, 214, 217, 219, 223, 229, 231, 232, 234, 235, 237, 238, 239, 240], "unnot": [6, 79], "until": 6, "complet": [6, 8, 44, 226, 232, 234], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "troubleshoot": 6, "gl": 6, "h": [6, 65, 80, 89, 116, 182], "eglshim": 6, "10": [6, 19, 42, 45, 59, 60, 89, 102, 113, 116, 135, 136, 163, 164, 165, 171, 172, 173, 190, 229, 231, 232, 235, 237, 238, 239, 240], "fatal": 6, "No": 6, "directori": [6, 35, 185, 229], "sure": [6, 38, 101, 223, 231, 237, 238, 239, 240], "glu": 6, "38": [6, 235], "disappear": [6, 234], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "__init__": [6, 45, 102, 116, 143, 145, 148, 229, 237, 239], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 7, 23, 41, 44, 46, 47, 48, 91, 231, 238, 239], "job": [6, 238], "schedul": [6, 195], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": [6, 235], "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": [6, 97], "opengl": 6, "global": [6, 140, 229, 231, 237], "cuda_visible_devic": 6, "id": [6, 16, 136, 163, 188, 214], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 52, 65, 78, 89, 94, 114, 232, 235, 238, 239], "black": 6, "read": [6, 11, 12, 14, 15, 35, 36, 37, 38, 44, 47, 48, 49, 63, 64, 66, 67, 69, 70, 71, 72, 77, 79, 84, 86, 87, 88, 90, 93, 95, 122, 130, 131, 132, 139, 140, 142, 144, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 182, 199, 204, 212, 214, 217, 231, 232, 234, 235, 237, 239], "onscreen": 6, "101": 6, "displai": [6, 199, 229, 232], "correctli": [6, 23, 41, 44, 46, 47, 48], "cannot": [6, 19, 79, 238], "scratch": [7, 231, 232], "loop": [7, 11, 12, 14, 15, 44, 101, 199, 229, 231, 234, 238], "sketch": [7, 229], "ob": [7, 19, 68, 75, 89, 143, 171, 172, 173, 231, 234, 239, 240], "_": [7, 42, 64, 67, 68, 75, 89, 95, 139, 151, 171, 172, 173, 231, 232, 237, 240], "rang": [7, 10, 20, 42, 95, 101, 161, 229, 231, 232, 237, 238, 240], "n_training_step": 7, "datapoint": 7, "onlin": [7, 11, 15, 152, 162, 190, 223], "n_data_per_train": 7, "no_grad": [7, 23, 41, 44, 46, 47, 48, 231, 232], "replay_buff": [7, 32, 33, 34, 35, 36, 37, 38, 39, 40, 196, 219, 231, 232], "extend": [7, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 196, 229, 231, 232, 235, 240], "offlin": [7, 11, 12, 14, 15, 97, 229, 235, 240], "loss_fn": [7, 240], "backward": [7, 23, 41, 44, 46, 47, 48, 95, 231, 232, 238], "zero_grad": [7, 23, 41, 44, 46, 47, 48, 229, 231, 232, 238], "backpropag": [7, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165], "decor": [7, 10], "differenti": [7, 171, 172, 173, 231], "understand": [7, 231, 232], "denomin": 7, "probabl": [7, 108, 122, 127, 140, 232, 237, 240], "artifact": 7, "numer": [7, 95, 112, 126, 127, 139, 140, 238, 239], "misconcept": 7, "directli": [7, 45, 223, 232], "save": [7, 23, 41, 44, 46, 47, 48, 181, 199, 229, 232], "freed": 7, "appear": [7, 24], "compuat": 7, "twice": [7, 165], "fix": [7, 87, 165, 239], "retain_graph": 7, "discuss": [7, 8], "inplac": [7, 23, 41, 44, 46, 47, 48, 231], "flag": [7, 25, 26, 27, 28, 174, 175, 176, 177, 178, 179, 180, 235], "updat": [7, 11, 12, 14, 15, 23, 32, 41, 44, 45, 46, 47, 48, 67, 91, 93, 95, 102, 116, 136, 139, 140, 152, 160, 162, 166, 171, 172, 173, 195, 199, 200, 205, 206, 218, 219, 229, 231, 232, 237, 239, 240], "critic": [7, 130, 152, 153, 161, 162, 164, 165, 237], "accumul": 7, "onto": [7, 24, 133, 135, 139, 140], "separ": [7, 11, 12, 15, 16, 78, 94, 154, 163, 165, 231, 239], "exclud": [7, 47, 48, 69, 231], "forward": [7, 23, 41, 44, 46, 47, 48, 63, 64, 66, 67, 69, 70, 71, 72, 75, 77, 78, 79, 84, 86, 87, 88, 90, 93, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 143, 145, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 231, 232, 237, 240], "submodul": [7, 23, 41, 44, 46, 47, 48], "param": [7, 23, 41, 44, 45, 46, 47, 48, 108, 125, 137, 138, 139, 142, 143, 145, 146, 166, 169, 171, 172, 173, 207, 231, 232, 235, 237, 240], "grad": [7, 23, 41, 44, 46, 47, 48, 232], "whose": [7, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 119, 139, 231], "norm": [7, 199, 232], "strictli": [7, 23, 41, 44, 46, 47, 48, 91], "neg": [7, 11, 12, 14, 15, 25, 27, 32, 63, 71, 79, 92, 157, 231], "ask": [7, 235, 239], "core": [7, 204, 207, 209, 212, 214, 217, 229, 240], "much": [7, 25, 27, 32, 161, 162, 238, 239], "upon": 7, "factor": [7, 23, 112, 118, 126, 127, 136, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 231, 232, 239], "fit": [7, 10, 75, 229], "everi": [7, 11, 12, 15, 19, 23, 24, 38, 41, 44, 46, 47, 48, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 199, 229, 231, 232, 238], "bottlneck": 7, "affect": [7, 23, 41, 44, 46, 47, 48, 90, 91, 97], "brax": [7, 50, 51, 239], "jax": [7, 10], "improperli": 7, "item": [7, 11, 70, 154, 155, 190, 229, 231, 232, 238], "underli": 7, "tedeiou": 7, "priorit": [7, 25, 27, 32, 154, 155, 163, 165, 231, 232], "amount": [7, 47, 48, 136], "isn": [7, 139], "contigu": [7, 238, 239, 240], "costli": 7, "concaten": [7, 21, 22, 63, 64, 75, 90, 114, 142, 231, 232, 238, 239], "constitut": 7, "plain": 7, "profil": 7, "indic": [7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 44, 46, 47, 48, 64, 86, 87, 103, 114, 136, 149, 202, 223, 226, 229, 231, 237, 238, 239], "fulli": [7, 23, 41, 44, 46, 47, 48, 232], "frequent": 7, "techniqu": [7, 232], "target": [7, 23, 41, 42, 44, 46, 47, 48, 90, 139, 140, 154, 155, 156, 159, 160, 161, 163, 165, 166, 170, 171, 172, 173, 201, 218, 219, 229, 231, 232], "program": [7, 239], "incl": 7, "suit": [7, 53, 239], "mujoco_instal": 7, "valueerror": 7, "bad": 7, "fds_to_keep": 7, "view": [7, 20, 23, 24, 41, 44, 46, 47, 48, 114, 145, 231, 238, 239, 240], "expand": [7, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 139, 142, 237, 240], "new_shap": 7, "origin": [7, 11, 12, 14, 15, 67, 78, 91, 94, 139, 140, 160, 162, 214, 217, 234, 238, 239], "content": [7, 14, 46, 103, 114, 232, 238, 240], "lost": 7, "permut": [7, 238, 239, 240], "clone": [7, 130, 131, 132, 139, 204, 212, 214, 217, 225, 231, 232, 237, 238, 240], "spin": [8, 239], "hug": 8, "syllabu": 8, "lectur": 8, "awesom": [8, 238], "curat": 8, "succinct": 8, "summari": [8, 75, 95], "reddit": 8, "reagent": 8, "product": [8, 221, 222], "orient": [8, 239], "stabl": [8, 9, 231], "baselines3": 8, "tf": 8, "agent": [8, 118], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 45, 239, 240], "dopamin": 8, "prototyp": 8, "salina": 8, "simpl": [8, 23, 24, 41, 44, 46, 47, 48, 104, 140, 164, 171, 231, 232, 238, 239], "sequenti": [8, 23, 41, 44, 46, 47, 48, 141, 142, 235, 237, 238, 239], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 240], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 24, 29, 67, 121, 133, 135, 136, 139, 140, 142, 145, 146, 231, 239, 240], "mbrl": [8, 45], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 232], "689": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 231, 232, 233, 234, 235, 237, 238, 239, 240], "24": [9, 235], "11": [9, 20, 24, 42, 89, 102, 116, 235], "2022": [9, 240], "12": [9, 235, 238], "pip": [9, 239, 240], "solv": [9, 226, 231, 232], "pip3": 9, "extra": [9, 23, 41, 44, 46, 47, 48, 95], "url": 9, "org": [9, 25, 32, 63, 78, 104, 105, 106, 107, 110, 111, 116, 118, 120, 121, 123, 124, 136, 145, 152, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 174, 175, 178, 204, 207, 212, 217, 235], "whl": 9, "latest": [9, 46, 196, 240], "There": [9, 229, 232, 239], "upgrad": 9, "previou": [9, 23, 124, 231, 237, 239], "relas": 9, "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 35, 41, 43, 44, 46, 47, 48, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 94, 95, 98, 100, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 129, 133, 134, 135, 136, 137, 139, 140, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 198, 202, 204, 207, 212, 214, 215, 217, 223, 231], "from_vers": 10, "to_vers": 10, "explicit": [10, 113, 231, 232], "intersect": 10, "eg": [10, 35, 36, 37, 38, 67], "v": [10, 95, 113, 165, 232, 237, 240], "longer": [10, 232], "fun": [10, 237, 238], "self": [10, 23, 41, 44, 45, 46, 47, 48, 66, 78, 87, 91, 94, 102, 116, 133, 135, 139, 143, 145, 148, 229, 231, 232, 237, 238, 240], "x": [10, 16, 19, 23, 89, 103, 109, 111, 113, 114, 116, 145, 148, 149, 151, 174, 175, 176, 177, 178, 179, 180, 182, 199, 232, 237, 240], "27": [10, 235], "doesn": [10, 46], "create_env_fn": [11, 12, 14, 15, 42, 47, 48, 231, 240], "sequenc": [11, 12, 14, 15, 19, 21, 22, 25, 26, 39, 40, 62, 63, 64, 65, 67, 68, 71, 73, 75, 76, 79, 80, 81, 82, 83, 88, 89, 90, 95, 103, 108, 114, 122, 129, 137, 140, 141, 142, 143, 181, 182, 194, 196, 198, 199, 204, 212, 214, 217, 232, 234, 237, 239], "callabl": [11, 12, 14, 15, 23, 25, 26, 27, 41, 42, 44, 45, 46, 47, 48, 151, 205, 206, 221, 222, 223], "union": [11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 41, 44, 46, 47, 48, 61, 66, 75, 78, 82, 91, 94, 95, 103, 104, 105, 106, 107, 108, 111, 113, 114, 117, 118, 122, 125, 126, 127, 136, 137, 139, 140, 141, 147, 148, 150, 155, 156, 160, 163, 165, 166, 171, 172, 173, 196, 204, 205, 206, 207, 212, 214, 215, 217, 219, 220, 221, 222, 223], "tensordictbas": [11, 12, 14, 15, 16, 19, 23, 27, 28, 41, 43, 44, 46, 47, 48, 49, 63, 64, 66, 69, 70, 71, 74, 77, 79, 83, 84, 86, 87, 88, 90, 93, 95, 101, 102, 115, 116, 133, 135, 136, 139, 140, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 170, 171, 172, 173, 199], "total_fram": [11, 12, 14, 15, 199, 201, 219, 229, 231, 232, 240], "int": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 52, 59, 61, 63, 64, 65, 66, 67, 71, 72, 74, 75, 78, 79, 80, 85, 86, 88, 91, 92, 94, 97, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 123, 124, 125, 126, 133, 135, 136, 138, 139, 140, 145, 146, 152, 153, 154, 157, 158, 159, 161, 162, 163, 165, 181, 182, 190, 191, 192, 195, 196, 199, 200, 204, 207, 212, 214, 215, 217, 221, 222, 223], "create_env_kwarg": [11, 12, 14, 15, 42, 46, 47, 48, 231], "dict": [11, 12, 14, 15, 19, 20, 21, 23, 41, 42, 44, 46, 47, 48, 87, 91, 95, 103, 104, 105, 106, 107, 111, 113, 114, 140, 185, 189, 195, 205, 206, 207, 214, 217, 221, 222, 223, 239], "200": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 59, 60, 104, 105, 110, 123, 124, 231], "postproc": [11, 12, 14, 15, 231, 232], "pin_memori": [11, 14, 15, 25, 26, 27, 47, 48, 77, 231, 240], "init_with_lag": [11, 12, 14, 15], "given": [11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 45, 46, 47, 48, 66, 67, 75, 78, 87, 91, 94, 101, 102, 110, 116, 136, 139, 140, 141, 142, 145, 146, 151, 154, 155, 170, 171, 172, 173, 191, 195, 219, 229, 231, 232, 237, 239], "datacollector": [11, 12, 14, 15, 140], "synchron": [11, 46, 221, 222], "recept": 11, "safe": [11, 12, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 133, 136, 139, 140, 147, 231, 240], "env_mak": [11, 12, 14, 219, 239], "linear": [11, 12, 14, 23, 41, 44, 45, 46, 47, 48, 66, 78, 87, 91, 94, 102, 103, 114, 116, 117, 118, 119, 123, 124, 129, 130, 131, 132, 135, 136, 137, 138, 139, 142, 143, 145, 146, 148, 171, 172, 173, 219, 234, 235, 237, 240], "2000": [11, 12, 14, 231], "50": [11, 12, 14], "enumer": [11, 12, 14, 23, 41, 44, 46, 47, 48, 231, 232, 240], "step_count": [11, 12, 14, 86, 231, 232, 240], "int64": [11, 12, 14, 17, 20, 21, 22, 24, 134, 136, 138, 145, 146, 209, 232, 239, 240], "traj_id": [11, 12, 14, 16, 231, 240], "shutdown": [11, 12, 14, 15, 231, 240], "del": [11, 12, 14, 231, 240], "bound": [11, 12, 14, 15, 18, 19, 23, 41, 44, 46, 47, 48, 95, 123, 124, 136, 139, 140, 239], "total": [11, 12, 14, 15, 17, 21, 22, 24, 44, 153, 161, 162, 190, 192, 195, 199, 201, 202, 231, 232, 234, 235, 236, 237, 238, 239, 240], "greater": [11, 12, 15, 231, 232, 240], "close": [11, 12, 14, 15, 44, 46, 153, 161, 162, 231, 240], "signal": [11, 12, 15, 231], "sent": [11, 12, 15, 35, 36, 47, 48, 95, 232, 238], "server": [11, 12, 15], "per": [11, 12, 14, 15, 47, 110, 199, 221, 222, 231, 232, 240], "span": [11, 12, 14, 15], "unless": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 237], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 14, 15, 23, 231], "track": [11, 12, 14, 15, 83, 95, 136, 185, 192, 231, 232, 238], "independ": [11, 12, 14, 15, 90, 92, 165, 229, 231, 240], "ignor": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 67, 69, 84, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 237, 238, 239], "length": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 47, 48, 79, 102, 103, 104, 106, 109, 114, 116, 139, 190, 196, 231, 232, 238, 239], "mainli": [11, 12, 14, 15], "postprocessor": [11, 12, 15], "format": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 239], "accord": [11, 12, 14, 15, 49, 75, 82, 112, 117, 123, 126, 127, 237, 238], "split_trajectori": [11, 12, 14, 15, 225], "inform": [11, 12, 14, 15, 23, 41, 42, 44, 46, 47, 48, 103, 114, 229, 232], "accommod": [11, 12, 14, 15], "kept": [11, 12, 14, 15, 47, 48, 67, 90, 97, 101, 112, 126, 127], "long": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 232, 238], "truncat": [11, 12, 14, 15, 127, 239], "help": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 226, 231], "desynchron": [11, 12, 14, 15], "load_state_dict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 91, 95, 229], "state_dict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 91, 95, 223, 229, 239], "ordereddict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 91, 95], "form": [11, 12, 15, 23, 25, 26, 27, 41, 44, 46, 47, 48, 95, 151, 153, 161, 162, 199], "worker0": [11, 12, 15], "state_dict0": [11, 12, 15], "worker1": [11, 12, 15], "state_dict1": [11, 12, 15], "reset_idx": [11, 12, 15], "static_se": [11, 12, 14, 15, 41, 44, 46, 47, 48, 91], "increment": [11, 12, 14, 15, 41, 44, 46, 47, 48, 86, 161], "last": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 71, 75, 79, 88, 103, 113, 114, 120, 133, 135, 231, 232, 235, 239, 240], "env_fn": [11, 12, 14, 15, 42, 221, 222], "v0": [11, 12, 15, 44, 54, 55, 57, 58, 66, 91, 95, 219], "env_fn_parallel": [11, 12, 14, 15], "6": [11, 12, 14, 15, 58, 75, 103, 108, 113, 114, 125, 143, 204, 207, 209, 212, 214, 217, 231, 232, 235, 237, 238, 239, 240], "out_se": [11, 12, 14, 15, 239], "shut": [11, 12, 14, 15], "down": [11, 12, 14, 15], "irrevers": [11, 12, 15], "arg": [12, 19, 23, 35, 36, 41, 42, 44, 45, 46, 47, 48, 78, 85, 91, 92, 93, 94, 103, 114, 129, 130, 134, 138, 187, 192, 196, 199, 223], "kwarg": [12, 14, 15, 19, 23, 35, 36, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 85, 87, 91, 92, 93, 94, 103, 104, 105, 106, 107, 111, 112, 114, 115, 122, 125, 127, 129, 130, 134, 137, 138, 140, 153, 161, 170, 182, 185, 187, 189, 192, 199, 204, 205, 206, 207, 212, 214, 217, 220, 221, 222], "envcreat": [14, 219, 220, 223, 225, 231, 232, 239, 240], "return_same_td": 14, "stop": [14, 41, 44, 46, 47, 48, 239, 240], "equat": [14, 136, 151, 153, 166], "exce": 14, "batcher": 14, "cautious": [14, 162], "ad": [14, 23, 25, 26, 27, 28, 32, 41, 44, 46, 47, 48, 49, 83, 91, 117, 118, 136, 153, 161, 162, 231, 239], "whole": [14, 19, 23, 41, 44, 46, 47, 48, 91, 190, 232], "yield": [14, 23, 41, 44, 46, 47, 48], "chunk": 14, "policy_state_dict": 14, "env_state_dict": 14, "paradigm": 15, "prefer": [15, 79, 84], "mere": 15, "rollout_tensordict": 16, "zero": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 64, 67, 75, 102, 113, 135, 136, 149, 171, 172, 173, 237, 238, 240], "max": [16, 24, 27, 32, 67, 88, 125, 126, 127, 153, 163, 165, 231], "durat": [16, 232], "discret": [17, 20, 21, 22, 24, 31, 67, 122, 145, 146, 156], "5": [17, 42, 46, 58, 59, 60, 102, 103, 110, 112, 113, 114, 116, 126, 127, 134, 138, 145, 146, 161, 231, 232, 234, 235, 238, 239, 240], "assert_is_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "belong": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "otherwis": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 67, 75, 87, 91, 95, 112, 126, 127, 158, 165, 195, 196, 229, 231, 239], "encod": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 121, 122, 123, 134, 138, 145, 146, 151, 237], "val": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 240], "ndarrai": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 136], "np": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 231], "tupl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 61, 75, 104, 113, 114, 119, 154, 157, 171, 172, 173, 208, 210, 213, 216, 238], "compli": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 231, 238], "current": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 49, 56, 79, 91, 98, 110, 113, 124, 136, 145, 146, 188, 204, 212, 229, 231, 239, 240], "least": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "complient": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "singleton": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 103, 114], "slice": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 238], "tensor_to_index": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "is_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 239], "project": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 133, 135, 136, 139, 140, 232, 239, 240], "back": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 139, 140, 231], "rand": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 45, 51, 58, 102, 116, 239, 240], "uniform": [17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32], "unbound": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 87, 238], "to_numpi": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "transformed_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 90, 91, 119, 125, 223], "type_check": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "fill": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 87, 235, 238], "minimum": [18, 81, 110, 119, 125, 126, 127, 137, 149, 151, 165, 190, 231, 239, 240], "float": [18, 20, 23, 24, 25, 27, 30, 32, 41, 44, 46, 47, 48, 66, 68, 75, 78, 81, 82, 87, 89, 91, 94, 95, 108, 110, 112, 116, 117, 118, 123, 124, 125, 127, 133, 135, 136, 139, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 197, 231, 232, 239], "upper": 18, "unnam": 19, "effect": [19, 23, 41, 44, 46, 47, 48, 83, 91, 199, 232, 239], "pixels_spec": 19, "boundedtensorspec": [19, 130, 131, 132, 135, 136, 137, 225, 239, 240], "32": [19, 59, 60, 103, 104, 105, 111, 114, 120, 121, 231, 232, 235, 236, 239, 240], "observation_vector_spec": 19, "33": [19, 23, 41, 44, 46, 47, 48, 103, 114, 235], "composite_spec": 19, "observation_vector": [19, 64, 204, 207, 212, 214, 217, 231], "within": [19, 23, 28, 41, 44, 46, 47, 48, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 240], "randn": [19, 75, 113, 119, 129, 130, 131, 132, 134, 137, 138, 139, 142, 143, 145, 146, 171, 172, 173, 198, 237, 238, 239, 240], "td_project": 19, "yield_nesting_kei": 19, "nested_kei": 19, "keysview": 19, "immedi": [19, 23, 41, 44, 46, 47, 48, 170], "children": [19, 23, 41, 44, 46, 47, 48], "selected_kei": [19, 47, 48, 84, 231], "altern": [20, 46, 151, 232, 238], "onehottensorspec": 20, "categor": [20, 24, 122, 145, 146], "larg": 20, "action_valu": [20, 24, 134, 138, 145, 146, 209, 232], "arang": [20, 24, 134, 145, 190], "argmax": [20, 134, 138, 145, 146], "dim": [20, 63, 64, 87, 92, 113, 223, 231, 232, 237, 238], "chosen_action_valu": [20, 24, 138, 209, 232], "outcom": [20, 24, 108, 125], "nvec": [21, 22], "cardin": [21, 22, 145, 146], "ax": [21, 117, 118], "use_regist": [22, 24], "hot": [22, 24, 67, 122, 134, 138, 145, 146], "sum": [22, 24, 44, 158, 170, 231, 232, 239], "gamma": [23, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 219, 231, 232, 240], "present": [23, 25, 32, 41, 44, 46, 47, 48, 49, 69, 83, 84, 104, 105, 106, 107, 111, 118, 136, 139, 140, 141, 142, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 223, 229, 231, 234, 240], "sutton": 23, "r": [23, 75, 140, 151, 170, 239], "1988": 23, "predict": [23, 110, 115, 116, 144, 156, 158, 159, 165, 170], "tempor": [23, 116, 172], "44": [23, 235], "discount": [23, 42, 152, 153, 154, 155, 156, 157, 159, 161, 162, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 231, 232], "ahead": [23, 239], "add_modul": [23, 41, 44, 46, 47, 48], "child": [23, 41, 44, 46, 47, 48, 238], "fn": [23, 41, 44, 46, 47, 48, 119, 221, 222], "recurs": [23, 41, 44, 46, 47, 48], "init": [23, 41, 44, 46, 47, 48, 231, 232], "init_weight": [23, 41, 44, 46, 47, 48], "m": [23, 41, 44, 46, 47, 48, 67, 140, 231, 232], "fill_": [23, 41, 44, 46, 47, 48, 232, 238, 239], "net": [23, 41, 44, 46, 47, 48, 113, 163, 214, 219, 232, 235, 237, 240], "in_featur": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 103, 104, 105, 106, 107, 113, 114, 117, 118, 130, 139, 237, 240], "out_featur": [23, 41, 44, 45, 46, 47, 48, 66, 78, 87, 91, 94, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 116, 117, 118, 130, 134, 139, 231, 232, 237, 240], "bia": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 103, 110, 114, 117, 118, 119, 135, 136, 139, 149, 150, 151, 232, 240], "requires_grad": [23, 41, 44, 46, 47, 48, 231], "bfloat16": [23, 41, 44, 46, 47, 48], "cast": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 95, 139, 204, 207, 209, 212, 214, 217, 238, 239], "datatyp": [23, 41, 44, 46, 47, 48], "direct": [23, 41, 44, 46, 47, 48, 232], "member": [23, 41, 44, 46, 47, 48], "xdoctest": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "skip": [23, 41, 44, 46, 47, 48, 72, 91, 97, 140, 181, 182, 192, 195, 237], "buf": [23, 41, 44, 46, 47, 48], "20l": [23, 41, 44, 46, 47, 48], "1l": [23, 41, 44, 46, 47, 48], "5l": [23, 41, 44, 46, 47, 48], "associ": [23, 41, 44, 46, 47, 48, 123, 223, 237], "copi": [23, 41, 44, 46, 47, 48, 91, 231, 232, 238], "doubl": [23, 25, 27, 30, 41, 44, 46, 47, 48, 66, 68, 78, 87, 89, 91, 94, 139, 155, 156, 160, 163, 166, 231, 239], "eval": [23, 41, 44, 46, 47, 48, 91, 95, 231, 232], "certain": [23, 41, 44, 46, 47, 48, 72, 86, 91, 161, 231, 232, 238, 239], "particular": [23, 41, 44, 46, 47, 48, 91, 229, 232, 234], "behavior": [23, 41, 44, 46, 47, 48, 91], "dropout": [23, 41, 44, 46, 47, 48, 91, 237], "batchnorm": [23, 41, 44, 46, 47, 48, 91], "disabl": [23, 41, 44, 46, 47, 48, 91, 112, 126, 127, 231], "comparison": [23, 41, 44, 46, 47, 48, 91], "similar": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 93, 94, 95, 101, 139, 140, 231, 237, 239], "mechan": [23, 41, 44, 46, 47, 48, 91], "confus": [23, 41, 44, 46, 47, 48, 91], "extra_repr": [23, 41, 44, 46, 47, 48], "represent": [23, 41, 44, 46, 47, 48, 78, 94, 231, 232, 235, 239], "string": [23, 41, 44, 46, 47, 48, 78, 94, 140, 151, 181, 198, 204, 212, 214, 217], "tennsordict": 23, "shift": [23, 149], "nontermin": [23, 231], "termin": [23, 141, 231, 232, 237, 240], "original_reward": [23, 231], "newli": 23, "get_buff": [23, 41, 44, 46, 47, 48], "throw": [23, 41, 44, 46, 47, 48, 239], "docstr": [23, 41, 44, 46, 47, 48], "get_submodul": [23, 41, 44, 46, 47, 48], "explan": [23, 41, 44, 46, 47, 48], "qualifi": [23, 41, 44, 46, 47, 48], "referenc": [23, 41, 44, 46, 47, 48], "attributeerror": [23, 41, 44, 46, 47, 48], "invalid": [23, 41, 44, 46, 47, 48], "resolv": [23, 41, 44, 46, 47, 48], "someth": [23, 41, 44, 46, 47, 48, 226, 239], "get_extra_st": [23, 41, 44, 46, 47, 48, 95], "set_extra_st": [23, 41, 44, 46, 47, 48, 95], "pickleabl": [23, 41, 44, 46, 47, 48, 95], "ensur": [23, 25, 27, 32, 41, 44, 46, 47, 48, 63, 78, 95, 147, 231], "guarante": [23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 95, 240], "pickl": [23, 41, 44, 46, 47, 48, 95], "get_paramet": [23, 41, 44, 46, 47, 48], "sai": [23, 41, 44, 46, 47, 48, 235, 239], "net_b": [23, 41, 44, 46, 47, 48], "net_c": [23, 41, 44, 46, 47, 48], "conv": [23, 41, 44, 46, 47, 48, 103], "conv2d": [23, 41, 44, 46, 47, 48, 103, 240], "16": [23, 41, 44, 46, 47, 48, 235], "kernel_s": [23, 41, 44, 46, 47, 48, 103, 104, 105, 232, 240], "stride": [23, 41, 44, 46, 47, 48, 103, 104, 105, 111, 232, 240], "100": [23, 41, 44, 46, 47, 48, 75, 191, 199, 219, 231, 232, 234, 235, 239, 240], "diagram": [23, 41, 44, 46, 47, 48], "show": [23, 41, 44, 46, 47, 48, 232, 237, 240], "itself": [23, 41, 44, 46, 47, 48, 86], "degre": [23, 41, 44, 46, 47, 48], "named_modul": [23, 41, 44, 46, 47, 48], "o": [23, 41, 44, 46, 47, 48], "transit": [23, 41, 44, 46, 47, 48, 144, 231, 232], "half": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 231], "ipu": [23, 41, 44, 46, 47, 48], "strict": [23, 41, 44, 46, 47, 48, 91], "descend": [23, 41, 44, 46, 47, 48, 91], "exactli": [23, 41, 44, 46, 47, 48, 56, 91], "persist": [23, 41, 44, 46, 47, 48, 91], "enforc": [23, 41, 44, 46, 47, 48, 91, 141], "missing_kei": [23, 41, 44, 46, 47, 48, 91], "unexpected_kei": [23, 41, 44, 46, 47, 48, 91], "namedtupl": [23, 41, 44, 46, 47, 48, 91], "duplic": [23, 41, 44, 46, 47, 48, 155, 156, 238], "l": [23, 41, 44, 46, 47, 48, 170], "idx": [23, 41, 44, 46, 47, 48, 232, 238], "named_buff": [23, 41, 44, 46, 47, 48, 232], "prefix": [23, 41, 44, 46, 47, 48, 91, 181, 239], "prepend": [23, 41, 44, 46, 47, 48], "running_var": [23, 41, 44, 46, 47, 48], "named_children": [23, 41, 44, 46, 47, 48], "conv4": [23, 41, 44, 46, 47, 48], "conv5": [23, 41, 44, 46, 47, 48], "memo": [23, 41, 44, 46, 47, 48], "remove_dupl": [23, 41, 44, 46, 47, 48], "named_paramet": [23, 41, 44, 46, 47, 48, 232], "register_backward_hook": [23, 41, 44, 46, 47, 48], "removablehandl": [23, 41, 44, 46, 47, 48], "deprec": [23, 41, 44, 46, 47, 48, 91, 239], "favor": [23, 41, 44, 46, 47, 48], "register_full_backward_hook": [23, 41, 44, 46, 47, 48], "futur": [23, 41, 44, 46, 47, 48, 78, 91, 94, 114, 226, 240], "register_buff": [23, 41, 44, 46, 47, 48], "running_mean": [23, 41, 44, 46, 47, 48], "alongsid": [23, 41, 44, 46, 47, 48], "latter": [23, 41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 221, 222], "num_featur": [23, 41, 44, 46, 47, 48], "register_forward_hook": [23, 41, 44, 46, 47, 48, 145, 146], "signatur": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 148], "posit": [23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 71, 72, 85, 86, 88, 91, 92, 119, 237], "won": [23, 41, 42, 44, 46, 47, 48, 78, 94, 199, 223, 231], "register_forward_pre_hook": [23, 41, 44, 46, 47, 48], "invok": [23, 41, 44, 46, 47, 48], "respect": [23, 41, 44, 46, 47, 48, 62, 66, 78, 79, 87, 91, 94, 124, 139, 143, 194], "grad_input": [23, 41, 44, 46, 47, 48], "grad_output": [23, 41, 44, 46, 47, 48], "subsequ": [23, 41, 44, 46, 47, 48], "entri": [23, 41, 44, 46, 47, 48, 65, 71, 75, 78, 94, 171, 172, 173, 235, 237], "technic": [23, 41, 44, 46, 47, 48], "similarli": [23, 41, 44, 46, 47, 48, 141, 142, 231, 237, 239], "caller": [23, 41, 44, 46, 47, 48], "register_load_state_dict_post_hook": [23, 41, 44, 46, 47, 48], "post": [23, 41, 44, 46, 47, 48, 232], "incompatible_kei": [23, 41, 44, 46, 47, 48], "consist": [23, 41, 44, 46, 47, 48, 103, 114, 231, 232, 235, 239], "thrown": [23, 41, 44, 46, 47, 48], "clearn": [23, 41, 44, 46, 47, 48], "register_modul": [23, 41, 44, 46, 47, 48, 229], "alia": [23, 41, 44, 46, 47, 48], "register_paramet": [23, 41, 44, 46, 47, 48], "requires_grad_": [23, 41, 44, 46, 47, 48, 231], "autograd": [23, 41, 44, 46, 47, 48, 91], "freez": [23, 41, 44, 46, 47, 48], "finetun": [23, 41, 44, 46, 47, 48], "individu": [23, 41, 44, 46, 47, 48], "gan": [23, 41, 44, 46, 47, 48], "share_memori": [23, 41, 42, 44, 46, 47, 48, 231], "share_memory_": [23, 41, 44, 46, 47, 48, 238, 240], "destin": [23, 41, 44, 46, 47, 48, 91, 101], "keep_var": [23, 41, 44, 46, 47, 48, 91], "averag": [23, 41, 44, 46, 47, 48, 91, 95, 136, 157, 158, 197, 231, 237], "shallow": [23, 41, 44, 46, 47, 48, 91], "pleas": [23, 41, 44, 46, 47, 48, 91, 226], "design": [23, 24, 41, 44, 46, 47, 48, 79, 91, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 231, 232, 234, 238, 239], "detach": [23, 41, 44, 46, 47, 48, 91, 231, 232], "non_block": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 232], "memory_format": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "channels_last": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "Its": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "complex": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 237], "integr": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 107, 116, 139, 235], "unchang": [23, 41, 44, 46, 47, 48, 66, 67, 78, 87, 91, 94, 139], "tri": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "convert": [23, 41, 44, 46, 47, 48, 66, 68, 78, 87, 91, 94, 95, 139, 151, 238], "host": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "pin": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "4d": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "ignore_w": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "1913": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "3420": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "5113": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "2325": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "torch_doctest_cuda1": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "gpu1": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "1914": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "5112": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "2324": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "float16": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "cdoubl": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "3741": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "j": [23, 25, 32, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139, 229, 232], "2382": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "5593": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "4443": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "complex128": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "6122": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "1150": [23, 41, 44, 46, 47, 48, 66, 78, 87, 91, 94, 139], "to_empti": [23, 41, 44, 46, 47, 48], "dst_type": [23, 41, 44, 46, 47, 48], "xpu": [23, 41, 44, 46, 47, 48], "set_to_non": [23, 41, 44, 46, 47, 48], "unidimension": [24, 238], "keepdim": 24, "user_regist": 24, "experiment": [24, 140], "priori": 24, "definit": [24, 38], "uniqu": 24, "discretebox": 24, "alpha": [25, 27, 32, 103, 163, 165, 231, 232, 240], "beta": [25, 27, 32, 161, 231, 232, 240], "ep": [25, 27, 32, 95, 136, 153, 166, 197], "1e": [25, 27, 32, 95, 108, 110, 119, 125], "08": [25, 27, 32, 231, 235], "collate_fn": [25, 26, 27, 238, 240], "prefetch": [25, 26, 27, 231, 232], "schaul": [25, 32], "quan": [25, 32], "antonogl": [25, 32], "silver": [25, 32], "2015": [25, 32], "arxiv": [25, 32, 63, 78, 104, 105, 106, 107, 110, 111, 116, 118, 120, 121, 123, 124, 136, 145, 152, 156, 157, 158, 159, 160, 162, 165, 166, 171, 174, 175, 178, 204, 207, 212, 217, 235], "ab": [25, 32, 78, 95, 110, 111, 116, 118, 120, 121, 123, 124, 152, 157, 158, 159, 160, 162, 165, 204, 212, 235], "1511": [25, 32, 111], "05952": [25, 32], "expon": [25, 27, 32], "\u03b1": [25, 27, 32], "determin": [25, 27, 32, 78, 94, 136, 232], "delta": [25, 27, 32, 125, 140, 225], "prioriti": [25, 27, 28, 32, 35, 36, 37, 38, 154, 155, 163, 165, 229, 231, 232], "null": [25, 27, 32, 62, 231], "max_siz": [25, 26, 27, 35, 37, 38, 232], "1_000": [25, 26, 27], "merg": [25, 26, 27], "mini": [25, 26, 27], "style": [25, 26, 27], "rb": [25, 26, 27, 232, 235, 240], "insert_transform": [25, 26, 27, 28], "insert": [25, 26, 27, 28, 39, 40, 92, 232], "return_info": [25, 26, 27, 28], "sampler": [25, 26, 27, 28, 32, 33, 35, 36, 37, 38, 79, 225, 231], "info": [25, 26, 27, 28, 41, 44, 46, 47, 48, 59, 60, 96, 237], "select": [25, 26, 27, 28, 47, 48, 63, 64, 66, 69, 70, 71, 72, 74, 77, 79, 84, 86, 87, 88, 90, 93, 95, 102, 198, 231, 232], "writer": [26, 39, 225], "randomsampl": [26, 225, 231], "roundrobinwrit": [26, 225], "priority_kei": [27, 28, 155, 156, 165, 240], "td_error": [27, 28, 154, 155, 156, 163, 165, 231, 240], "reduct": [27, 32], "prioritizedreplaybuff": [27, 225, 240], "update_tensordict_prior": [27, 231, 240], "min": [27, 32, 125, 126, 127, 153, 163, 165, 231, 232], "median": [27, 32, 140], "include_info": [27, 28], "kw": [28, 39], "replaybuff": [28, 40, 79, 215, 219, 225, 235, 240], "meta": [29, 43, 229], "describ": [29, 64, 90, 125, 126, 188, 204, 212, 239], "max_capac": [32, 231], "update_prior": [32, 196, 229, 231, 240], "uniformli": [33, 239], "scratch_dir": [35, 231], "memmap": [35, 47, 48, 95, 196, 231], "attach": [35, 36, 37, 38, 232], "entiti": [35, 36, 37, 38], "made": [35, 36, 37, 38, 136, 231, 235], "alloc": 36, "__len__": 38, "roundrobin": 39, "piec": [39, 40], "_inplace_upd": [41, 46, 47, 48, 91], "_batch_lock": [41, 46, 47, 48, 91], "run_type_check": [41, 45], "batch_lock": [41, 43, 44, 46, 47, 48, 87, 91], "environn": [41, 44, 45, 46, 47, 48, 91], "immut": [41, 44, 46, 47, 48, 91, 204, 212], "fake_tensordict": [41, 44, 46, 47, 48], "fake": [41, 44, 46, 47, 48], "overridden": [41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149], "recip": [41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149], "afterward": [41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 239], "former": [41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149], "silent": [41, 44, 46, 47, 48, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149], "_step": [41, 44, 46, 47, 48, 71], "privat": [41, 44, 46, 47, 48, 239], "_reset": [41, 44, 45, 46, 47, 48, 102, 116], "overwritten": [41, 44, 46, 47, 48, 71, 101, 231], "callback": [41, 44, 46, 47, 48], "auto_reset": [41, 44, 46, 47, 48, 232], "auto_cast_to_devic": [41, 44, 46, 47, 48], "break_when_any_don": [41, 44, 46, 47, 48], "return_contigu": [41, 44, 46, 47, 48, 97, 234], "soon": [41, 44, 46, 47, 48], "smaller": [41, 44, 46, 47, 48], "lazystackedtensordict": [41, 44, 45, 46, 47, 48, 102, 116, 234, 238, 239, 240], "concomitt": [41, 44, 46, 47, 48], "workspac": [41, 44, 46, 47, 48, 49], "carri": [41, 44, 46, 47, 48], "creator": [42, 205, 206, 221, 222, 223], "substitut": [42, 95], "multiprocess": [42, 43, 95, 239], "mp": [42, 95], "env_creat": [42, 231], "test_env1": 42, "_td": 42, "observation_count": [42, 239], "test_env2": 42, "sleep": [42, 239], "__name__": [42, 232], "__main__": 42, "p": [42, 232, 237], "p1": [42, 232], "p2": [42, 232], "join": [42, 204, 212], "9934": 42, "env_str": 43, "discard": [44, 101, 181, 239], "info_dict_read": 44, "set_info_dict_read": 44, "put": [44, 95, 223, 238], "f": [44, 151, 171, 172, 173, 231, 232, 237, 238, 239], "read_act": 44, "read_don": 44, "reader": [44, 231, 232], "frame_skip": [44, 52, 53, 54, 57, 72, 192, 195, 201, 229, 231, 240], "broken": [44, 97], "read_ob": 44, "dictat": [44, 140], "inner": [44, 67, 229, 231, 239], "read_reward": 44, "total_reward": 44, "step_reward": 44, "far": [44, 112, 126, 127, 239], "baseinfodictread": 44, "info_dict": 44, "hoc": 44, "manner": [44, 78, 231, 234], "dict_read": 44, "default_info_dict_read": 44, "my_info_kei": 44, "some_env": 44, "meant": 45, "limit": [45, 47, 48, 238], "safeti": 45, "constraint": 45, "behav": [45, 56, 122, 235], "unboundedcontinuoustensorspec": [45, 87, 102, 129, 130, 131, 132, 139, 142, 143, 225, 239], "mymbenv": [45, 102, 116], "world_model": [45, 61, 102, 116, 158], "super": [45, 102, 116, 143, 145, 148, 237, 240], "hidden_observ": [45, 102, 116], "mlp": [45, 102, 103, 104, 105, 106, 107, 113, 116, 130, 134, 204, 212, 214, 217, 225, 231, 232, 234, 235, 237, 240], "worldmodelwrapp": [45, 102, 116, 225], "activation_class": [45, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 231, 232, 240], "relu": [45, 102, 116, 119, 151, 237], "activate_last_lay": [45, 102, 107, 114, 116], "depth": [45, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 120, 121, 134, 232, 234], "faster": 46, "less": [46, 221, 222, 231, 232, 240], "equal": [46, 47, 48, 74, 75, 103, 109, 114, 167, 190, 221, 222, 235, 238], "readthedoc": 46, "io": [46, 47, 48], "en": 46, "python_interfac": 46, "num_work": [46, 47, 48, 231, 232], "thread": 46, "task_id": 46, "my_env_fun": [47, 48], "custom_attribute_list": [47, 48], "custom_attribut": [47, 48], "custom_method_list": [47, 48], "custom_method": [47, 48], "deploi": [47, 48], "creation": [47, 48, 231, 239], "slight": [47, 48, 232], "overhead": [47, 48, 237], "env_input_kei": [47, 48], "permit": [47, 48, 71, 92], "drastic": [47, 48], "decreas": [47, 48], "burden": [47, 48], "_batchedenv": [47, 48], "might": [47, 48, 189, 226, 231, 239], "next_pixel": [47, 48], "next_vector": [47, 48], "occupi": [47, 48], "excluded_kei": [47, 48, 69], "share_individual_td": [47, 48], "lazi": [47, 48, 78, 117, 141, 142, 231, 234, 238, 239], "shared_memori": [47, 48], "policy_proof": [47, 48], "ll": [47, 48, 231, 232, 239], "hidden": [47, 48, 110, 113, 120, 121, 123, 124, 130, 131, 132, 139, 142, 204, 212, 234, 237, 240], "instanti": [47, 48, 90, 231, 232, 238, 239], "allow_step_when_don": [47, 48], "encount": [47, 48, 226], "update_kwarg": [47, 48], "build_tensordict": 49, "next_observ": [49, 101, 113, 234], "log_prob": [49, 108, 122, 127], "empti": [49, 78, 88, 91, 94, 231], "popul": [49, 87], "googl": [50, 51], "ant": [50, 51, 235], "categorical_action_encod": [51, 55], "get_environ": 51, "87": [51, 235], "acrobot": [51, 239], "fetch": [51, 235, 239], "dm_control": [52, 53, 231, 234, 239], "task_nam": 52, "cheetah": [52, 53, 231, 239], "disable_env_check": [54, 56], "serv": [56, 239], "placehold": [56, 91], "secur": 56, "jumanji": [57, 58], "snake": [57, 58], "6x6": [57, 58], "td1": 58, "int32": [58, 238, 240], "12x12": 58, "tsp50": 58, "tsp100": 58, "vma": [59, 60], "scenario_nam": [59, 60], "num_env": [59, 60], "continuous_act": [59, 60], "flock": [59, 60], "scenario": [59, 60], "n_agent": [59, 60], "cohesion_rew": [59, 60], "collision_rew": [59, 60], "separation_rew": [59, 60], "velocity_rew": [59, 60], "18": [59, 60, 235, 239], "model_bas": [61, 102, 116], "prior_shap": 61, "belief_shap": 61, "obs_decod": 61, "transform_reward_spec": [62, 66, 68, 81, 82, 90, 92], "success": [63, 90, 240], "account": 63, "movement": 63, "veloc": [63, 239], "propos": [63, 115, 160, 166, 214, 217], "plai": [63, 239], "pdf": [63, 104, 105, 106, 107, 136, 145, 156, 163, 166, 171, 174, 175, 178, 207, 214, 217], "1312": 63, "5602": 63, "_buffer": [63, 88], "transform_observation_spec": [63, 64, 65, 66, 68, 69, 71, 73, 75, 80, 83, 84, 86, 87, 88, 89, 90, 92], "del_kei": [64, 232, 234], "unsqueeze_if_oor": 64, "observation_posit": 64, "observation_veloc": 64, "delet": [64, 238], "unsqueez": [64, 89, 92, 113, 238], "key1": [64, 190, 198], "key2": [64, 190, 198], "w": [65, 80, 89, 136, 182], "crop": [65, 79, 182], "center": [65, 182], "width": [65, 80, 232], "height": [65, 80, 232], "squar": [65, 112, 126, 127, 182], "rewardsc": [66, 91, 231], "rewardclip": 66, "transformed_env": [66, 90, 91], "tranform": [66, 69, 84, 86, 90, 93], "dest": [66, 78, 94, 139], "transform_input_spec": [66, 67, 68, 75, 86, 90, 92], "num_actions_effect": 67, "max_act": 67, "action_kei": [67, 102, 115, 116, 133, 135], "include_forward": 67, "dimension": [67, 171, 174, 175, 178], "num_act": [67, 232], "action_out": 67, "wherea": [67, 229, 231, 237], "_call": [67, 71], "inde": [67, 231, 238], "remain": [67, 118], "manual_se": [67, 75, 135, 136, 231, 239, 240], "expos": [68, 141, 237], "extern": [68, 239], "finit": [70, 231], "first_dim": 71, "last_dim": 71, "allow_positive_dim": [71, 92], "flatten": [71, 196, 231, 232], "adjac": 71, "th": [71, 92], "exclus": [71, 223], "frameskip": 71, "repeatedli": 72, "stabil": 72, "turn": [73, 92, 195, 232, 235], "noop": [74, 240], "30": [74, 123, 124, 232, 235], "op": [74, 133, 135, 200], "randomli": [74, 75, 87, 140], "noop_max": 74, "loc": [75, 82, 112, 119, 126, 127, 130, 131, 132, 137, 140, 142, 202, 204, 212, 214, 217, 223, 231, 232, 237, 240], "out_keys_inv": [75, 76, 90], "standard_norm": [75, 82, 231, 232], "affin": [75, 82], "layer": [75, 95, 103, 104, 105, 110, 114, 117, 118, 120, 121, 128, 231, 232, 235, 237], "set_default_tensor_typ": 75, "doubletensor": 75, "std": [75, 95, 119, 133, 231, 232, 239], "isclos": 75, "next_ob": [75, 171, 172, 173, 231, 240], "stat": [75, 202, 223, 231], "rubric": [75, 142], "init_stat": 75, "3752e": 75, "01": [75, 136, 149, 152, 153, 161, 162, 231, 235, 236], "5087e": 75, "03": [75, 231, 235, 236], "9294e": 75, "9636": 75, "5608": 75, "6408": 75, "num_it": 75, "reduce_dim": 75, "cat_dim": 75, "keep_dim": 75, "constant": [75, 229, 231, 232, 239], "ideal": [75, 231], "statist": [75, 95, 164, 223, 231, 239], "approach": [75, 239], "gaussian": [75, 87, 102, 116, 117, 118, 133], "empir": [75, 102, 116, 140], "deviat": [75, 95, 102, 110, 116, 117, 118, 133, 162, 231, 232], "3d": 75, "third": 75, "r3m": [78, 235], "resnet": [78, 94], "visual": [78, 94], "embed": [78, 93, 94, 130, 131, 132, 139, 235, 237], "ego4d": [78, 94], "paper": [78, 94, 160, 214, 217, 231], "univers": [78, 94], "suraj": 78, "nair": 78, "aravind": 78, "rajeswaran": 78, "vikash": [78, 94], "kumar": [78, 94], "chelsea": 78, "finn": 78, "abhinav": 78, "gupta": 78, "2203": [78, 116, 235], "12601": [78, 235], "_init": 78, "snippet": [78, 231], "resnet50": [78, 94, 235], "model_nam": [78, 94, 188], "resnet34": 78, "resnet18": 78, "left": [78, 88, 94, 232], "r3m_vec": [78, 235], "feed": [78, 94], "244": [78, 94], "stack_imag": [78, 94], "tread": [78, 94], "separet": [78, 94], "hub": [78, 94, 235], "cach": [78, 91, 94, 191, 235], "public": [78, 94], "resnet50_weight": [78, 94], "imagenet1k_v1": [78, 94], "download_path": [78, 94], "tensor_pixels_kei": [78, 94], "sub_seq_len": 79, "sample_dim": 79, "mask_kei": 79, "primarili": 79, "hesit": 79, "request": 79, "robust": 79, "vari": 79, "mix": 79, "NOT": 79, "improp": 79, "interpol": [80, 232], "bilinear": 80, "clamp_min": [81, 136], "clamp_max": 81, "clip": [81, 153, 199], "clip_min": 81, "scalar": [81, 105, 107, 117, 118, 133, 135, 136, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "clip_max": 81, "episod": [83, 102, 174, 175, 176, 177, 178, 179, 180, 232], "cumul": [83, 102], "episode_": 83, "reward1": 83, "reward2": 83, "ho": 83, "excludetransform": 84, "squeeze_dim": 85, "squeez": [85, 103, 232, 238], "manual": 86, "primer": 87, "default_valu": 87, "drawn": [87, 140], "rel": [87, 108, 125], "unit": [87, 102, 110, 120, 121, 123, 124], "chosen": [87, 204, 212, 214, 217], "transfomedenv": 87, "lock": [87, 95], "mykei": 87, "dtype_or_devic": 87, "pool": 88, "255": 89, "precis": [89, 231], "ri": 89, "randint": [89, 231], "principl": 90, "combin": [90, 238], "cattransform": 90, "notabl": 90, "cache_spec": 91, "anymor": [91, 139, 231], "unsqueeze_dim": 92, "danger": 92, "vip": [93, 94, 235], "toward": 94, "implicit": 94, "jason": 94, "ma": 94, "shagun": 94, "sodhani": 94, "dinesh": 94, "jayaraman": 94, "osbert": 94, "bastani": 94, "ami": 94, "zhang": 94, "vip_vec": 94, "shared_td": 95, "decai": [95, 133, 135, 163, 197, 231, 232, 239], "9999": 95, "0001": [95, 110, 119, 197], "fly": [95, 161, 239], "to_observation_norm": 95, "rate": [95, 170, 231, 232], "99": [95, 116, 152, 153, 157, 159, 161, 162, 163, 164, 165, 170, 219, 231, 232, 235, 240], "underflow": 95, "1000": [95, 133, 135, 136, 140, 160, 231, 232, 235], "build_td_for_shared_vecnorm": 95, "memmori": 95, "memmap_": [95, 238], "queue": 95, "td_share": 95, "observationnorm": [95, 223, 231, 232, 240], "state_dim": [96, 123, 124], "action_dim": [96, 104, 106, 234], "gsde": [96, 163, 223], "nois": [96, 118, 128, 136, 163, 195, 223, 231], "func": [96, 237], "gsdemodul": 96, "check_dtyp": 97, "short": 97, "discrep": [97, 152, 153, 154, 155, 161, 162], "imposs": 97, "heterogen": 97, "caution": [97, 239], "adequ": 97, "probabilistictdmodul": [100, 114, 140, 165, 170, 195], "next_tensordict": [101, 231], "keep_oth": 101, "exclude_reward": 101, "exclude_don": 101, "exclude_act": 101, "_run_check": 101, "reflect": [101, 201], "renam": [101, 231], "next_": 101, "funtion": 101, "td_out": [101, 190, 198], "make_polici": 101, "next_td": 101, "planning_horizon": [102, 116], "optim_step": [102, 116, 238], "num_candid": [102, 116], "top_k": [102, 116], "reward_kei": [102, 116], "cross": 102, "entropi": [102, 152, 153, 161, 162, 163, 165], "botev": 102, "et": [102, 237], "al": [102, 209, 237, 239], "2013": 102, "cem": 102, "plan": [102, 115, 116], "varianc": [102, 112, 119, 126, 127], "rank": 102, "top": [102, 116], "k": [102, 232, 237, 238], "repeat": 102, "maximis": [102, 104, 106, 116, 231], "horizon": [102, 116], "modelbasedenv": [102, 116], "mpc": [102, 115, 116], "candid": [102, 116], "modelbasedenvbas": [102, 115, 116, 225], "next_hidden_observ": 102, "actor": [102, 104, 106, 110, 116, 130, 131, 132, 134, 135, 136, 137, 138, 145, 146, 152, 153, 154, 157, 161, 162, 163, 165, 204, 207, 209, 212, 214, 217, 225, 231, 232, 235, 240], "num_cel": [103, 104, 105, 106, 107, 110, 111, 114, 130, 231, 232, 237, 240], "elu": [103, 104, 105, 106, 107, 110, 111, 232, 240], "activation_kwarg": [103, 114], "norm_class": [103, 104, 105, 114], "norm_kwarg": [103, 114], "bias_last_lay": [103, 104, 105, 106, 107, 111, 114], "aggregator_class": [103, 104, 105, 232, 240], "squashdim": [103, 104, 240], "aggregator_kwarg": [103, 104, 105, 232], "squeeze_output": [103, 104, 105, 232], "convolut": [103, 104, 105], "neural": [103, 139, 232, 237, 239], "produc": [103, 114, 122, 130, 132, 182, 239], "len": [103, 114, 231, 232, 235, 237, 238, 240], "cell": [103, 114, 231], "kernel": [103, 111, 113], "tanh": [103, 112, 114, 125, 126, 127, 231, 235, 240], "device_typ": [103, 104, 105, 106, 107, 111, 114, 117, 118], "cnet": 103, "34": [103, 114, 235, 236, 240], "35": [103, 114, 235], "possibli": [103, 139, 199, 231, 239], "rectangular": 103, "conv_net_kwarg": [104, 105], "mlp_net_kwarg": [104, 105, 106], "use_avg_pool": [104, 105], "WITH": [104, 105, 106, 107, 136, 166, 207], "1509": [104, 105, 106, 107, 116, 136, 160, 166, 207], "02971": [104, 105, 106, 107, 136, 166, 207], "convnet": [104, 225, 240], "ndims_in": 104, "avgpool": [104, 105], "128": [105, 231, 235], "adaptiveavgpool2d": [105, 232], "400": [106, 107, 232], "300": [106, 107, 204, 212], "mlp_net_kwargs_net1": 107, "mlp_net_kwargs_net2": 107, "atol": [108, 125], "06": [108, 125, 235], "rtol": [108, 125], "batch_shap": [108, 125], "event_shap": [108, 125], "absolut": [108, 125], "toler": [108, 125], "densiti": [108, 122, 127], "mass": [108, 122, 127], "rsampl": [108, 122, 140], "sample_shap": [108, 122], "reparameter": [108, 122], "dqnet": 109, "atom": 109, "std_bia": 110, "std_min_val": 110, "stochast": [110, 118, 120, 124, 163, 165], "belief": [110, 120, 123, 124], "1912": [110, 157, 158, 159], "01603": [110, 157, 158, 159], "softplu": [110, 119, 149, 150, 151], "out_features_valu": 111, "cnn_kwarg": [111, 232], "mlp_kwarg": [111, 113, 232], "duel": [111, 232], "cnn": [111, 232, 240], "06581": 111, "512": 111, "upscal": [112, 126, 127], "tanh_loc": [112, 126, 127], "event_dim": [112, 125, 126], "prevent": [112, 126, 127, 161, 162, 231], "ultim": [112, 126, 127], "unstabl": [112, 126, 127], "poor": [112, 126, 127], "explos": [112, 126, 127], "switch": [112, 126, 127], "sigma": [112, 126, 127, 133, 136], "formula": [112, 126, 127, 153, 161, 162], "lstm_kwarg": 113, "embedd": 113, "lstm": [113, 119], "time_step": 113, "2d": 113, "hidden_s": 113, "input_s": 113, "hidden0_in": 113, "hidden1_in": 113, "hidden0_out": 113, "hidden1_out": 113, "single_bias_last_lay": 114, "layer_class": 114, "layer_kwarg": 114, "perceptron": 114, "seamless": 114, "though": 114, "reshap": [114, 237, 238], "lazylinear": [114, 235, 240], "42": [114, 199, 235], "noisylinear": [114, 117, 225, 232], "noisylazylinear": [114, 225], "At": [115, 234, 235], "mpcplanner": 115, "tensordict_out": [115, 237, 239], "advantage_modul": [116, 152], "temperatur": 116, "mppi": 116, "covari": 116, "william": [116, 164], "aldrich": 116, "theodor": 116, "01149": 116, "hansen": 116, "wang": 116, "su": 116, "04955": 116, "ndunboundedcontinuoustensorspec": [116, 142], "valueoper": [116, 130, 131, 132, 152, 153, 161, 162, 219, 225, 231, 237], "tdlambdaestim": [116, 225], "value_net": [116, 171, 172, 173], "adv": 116, "95": [116, 157, 231, 232, 235], "std_init": [117, 118], "noisi": [117, 118, 128], "term": [117, 118, 151, 152, 200, 232], "matrix": [117, 118], "initialize_paramet": 117, "isol": 117, "1706": 118, "10295v3": 118, "induc": 118, "aid": 118, "descent": 118, "emploi": 118, "scale_map": 119, "biased_softplus_1": 119, "scale_lb": [119, 123, 124], "exp": [119, 151], "module_norm": 119, "decod": [120, 237], "1803": [120, 121], "10122": [120, 121], "rnn_hidden": 120, "latent": 121, "logit": 122, "prob": 122, "excacli": 122, "hidden_dim": [123, 124, 237], "posterior": [123, 158], "rssm": [123, 124, 158], "1811": [123, 124], "04551": [123, 124], "obs_embed": 123, "rnn_hidden_dim": 124, "prior": [124, 158], "dream": 124, "recurr": 124, "tanhtransform": 126, "tensordict_modul": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 236, 237], "translat": [129, 137], "td_modul": [129, 130, 131, 132, 137, 139, 140, 142, 143, 237, 240], "get_policy_oper": [130, 131, 132, 204, 212, 237], "alon": [130, 131, 132], "tdmodul": [130, 131, 132, 219], "get_critic_oper": [130, 237], "common_oper": [130, 132], "policy_oper": [130, 131, 132], "value_oper": [130, 131, 132], "probabilisticactor": [130, 131, 132, 165, 225, 231], "tanhnorm": [130, 131, 132, 137, 142, 225, 237, 240], "normalparamwrapp": [130, 131, 132, 137, 142, 225, 237, 240], "spec_hidden": [130, 132], "module_hidden": [130, 132, 237], "td_module_hidden": [130, 132, 237], "spec_act": [130, 132], "module_act": [130, 132, 237], "td_module_act": [130, 131, 132, 237], "dist_in_kei": [130, 131, 132, 137, 142], "sample_out_kei": [130, 132, 142], "distribution_class": [130, 131, 132, 137, 140, 142, 231, 237, 240], "return_log_prob": [130, 131, 132, 140, 142, 237, 240], "module_valu": [130, 131, 132, 237], "td_module_valu": [130, 131, 132, 237], "state_action_valu": [130, 143, 170, 207, 214, 217, 219, 231, 237, 240], "td_clone": [130, 131, 132, 237], "sample_log_prob": [130, 131, 132, 140, 142, 204, 212, 214, 237, 240], "tensordictmodulewrapp": [130, 205, 206, 219], "estim": [130, 131, 132, 152, 153, 161, 162, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 231, 232], "get_value_oper": [130, 131, 132, 204, 212], "action_modul": 131, "state_valu": [131, 132, 143, 171, 172, 173, 174, 175, 176, 178, 179, 204, 212, 217, 231], "safesequenti": [131, 132, 144, 225], "sigma_init": 133, "sigma_end": 133, "annealing_num_step": [133, 135, 136, 231, 232], "po": [133, 135], "epsilon": [133, 135, 136, 166, 232], "know": [133, 135, 163, 195, 231, 232], "recov": [133, 135, 141, 234], "action_spac": [134, 138, 145, 146], "one_hot": [134, 138, 145, 146], "onehotdiscretetensorspec": [134, 138, 145, 146, 225], "nbin": [134, 145], "qvalue_actor": [134, 138, 145, 146], "eps_init": [135, 136, 232], "eps_end": [135, 136, 232], "greedi": [135, 146, 232], "explorative_polici": [135, 136], "0000": [135, 240], "6986": 135, "9366": 135, "5837": 135, "8596": 135, "grad_fn": [135, 240], "addbackward0": [135, 240], "theta": 136, "15": [136, 157, 232, 235], "mu": 136, "dt": 136, "x0": 136, "sigma_min": 136, "n_steps_ann": 136, "ornstein": [136, 231], "uhlenbeck": [136, 231], "ou": [136, 231], "introduc": [136, 237, 238], "auto": [136, 163, 165], "correl": 136, "sort": 136, "prev_nois": 136, "current_sigma": 136, "sqrt": [136, 232], "n_step": 136, "ou_prev_nois": 136, "ou_step": 136, "increas": 136, "anneal": 136, "_ou_prev_nois": 136, "_ou_step": 136, "probabilist": [137, 237, 240], "functional_modul": [137, 138, 139, 142, 143, 145, 146], "make_funct": [137, 138, 139, 142, 143, 145, 146, 147, 232, 237, 240], "functionalmodul": [139, 147], "functionalmodulewithbuff": [139, 147], "character": 139, "overflow": [139, 140], "grucel": [139, 237], "td_fmodul": 139, "td_function": 139, "td_state": 139, "vmap": [139, 142, 232, 237, 240], "ensembl": [139, 163], "params_repeat": 139, "td_vmap": [139, 142], "irrespect": [139, 140], "random_sampl": [139, 140], "tensor_spec": 140, "default_interaction_mod": [140, 237], "distribution_kwarg": [140, 231], "cache_dist": 140, "n_empirical_estim": 140, "probabilistictensordictmodul": [140, 141, 240], "rule": [140, 237], "interaction_mod": 140, "get_dist": [140, 141, 237], "__call__": [140, 229, 237], "suppli": 140, "fist": 140, "set_interaction_mod": 140, "diverg": [140, 158, 161], "partial_toler": [141, 142, 234], "probabilistictensordictsequenti": [141, 237, 240], "tensordictsequenti": [141, 234, 235, 240], "who": [141, 142], "AND": [141, 142], "scan": [141, 142], "tensordictsequenci": 142, "tensordictsequ": 142, "safeprobabilisticmodul": [142, 225], "spec1": 142, "net1": 142, "module1": 142, "td_module1": 142, "spec2": 142, "module2": 142, "td_module2": 142, "custommodul": [143, 148], "cat": [143, 231, 238, 240], "transition_model": 144, "reward_model": 144, "imaginari": 144, "imagin": 144, "get_reward_oper": 144, "get_transition_model_oper": 144, "var_num": [145, 146], "regard": [145, 152, 156, 162, 238], "perspect": [145, 156], "1707": [145, 156, 162, 204, 212], "06887": [145, 156], "mult_one_hot": [145, 146], "customdistributionalqv": 145, "log_softmax": 145, "_src": 147, "wrapper_typ": 147, "mislead": 148, "other_kei": 148, "typeerror": 148, "min_val": [149, 151], "bias": [149, 231], "_bia": 149, "invert": 150, "surject": 151, "expln": 151, "biased_softplu": [151, 225], "beggin": 151, "biased_softplus_": 151, "syntax": [151, 231], "condit": 151, "met": 151, "safeprobabilisticsequenti": [152, 153, 161, 162, 164, 205, 206, 225], "advantage_kei": [152, 153, 161, 162, 164, 171, 172, 173], "value_target_kei": [152, 162, 164, 171, 172, 173], "value_target": [152, 162, 164, 171, 172, 173], "entropy_bonu": [152, 153, 161, 162], "samples_mc_entropi": [152, 153, 161, 162], "entropy_coef": [152, 153, 161, 162], "critic_coef": [152, 153, 161, 162], "loss_critic_typ": [152, 153, 161, 162, 164], "smooth_l1": [152, 153, 154, 155, 161, 162, 163, 164, 165, 167], "reli": [152, 231, 239], "1602": 152, "01783v2": 152, "advantage_diff_kei": 152, "advantage_diff": 152, "value_error": [152, 171, 172, 173], "loss_function_typ": 152, "l1": [152, 153, 154, 155, 161, 162, 163, 167, 232], "l2": [152, 153, 154, 155, 158, 159, 161, 162, 163, 167], "tha": 152, "throughout": [152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 239], "essenti": [152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 231, 238], "clip_epsilon": 153, "normalize_advantag": [153, 161, 162], "threshold": 153, "bonu": [153, 161, 162], "favour": [153, 161, 162], "exploratori": [153, 161, 162], "mont": [153, 161, 162], "carlo": [153, 161, 162], "multipli": [153, 161, 162, 163, 165, 231], "loss_funct": [153, 154, 155, 162, 163, 165, 167], "actor_network": [154, 163, 164, 165], "value_network": [154, 155, 156, 165, 171, 172, 173], "delay_actor": [154, 165], "delay_valu": [154, 155, 156, 164, 165], "input_tensordict": [154, 155, 156], "assign": [154, 155, 231, 237], "qvalueactor": [155, 225, 232], "distributionalqvalueactor": [156, 225], "unlik": [156, 162, 237, 238, 240], "disctount": 156, "actor_model": 157, "value_model": [157, 159], "model_based_env": 157, "dreamerenv": [157, 225], "imagination_horizon": 157, "lmbda": [157, 171, 173, 174, 176, 177, 178, 179, 180, 231, 232], "discount_loss": [157, 159], "unrol": 157, "lambda_kl": 158, "lambda_reco": 158, "lambda_reward": 158, "reco_loss": 158, "reward_loss": 158, "free_nat": 158, "delayed_clamp": 158, "global_averag": 158, "kl": [158, 161], "reconstruct": [158, 239], "nat": 158, "clamp": [158, 199], "value_loss": [159, 231], "fake_data": 159, "loss_modul": [160, 166, 199, 218, 219, 229, 238], "dqnloss": [160, 166, 210, 225], "ddpgloss": [160, 166, 208, 219, 225, 240], "sacloss": [160, 166, 216, 225], "td3loss": [160, 166], "value_network_update_interv": 160, "contrast": 160, "soft": [160, 165, 166], "06461": 160, "dtarg": 161, "decrement": 161, "samples_mc_kl": 161, "penalti": 161, "old_polici": 161, "new_polici": 161, "adapt": 161, "thu": 161, "distanc": [161, 167, 170, 171], "apart": 161, "proxim": [162, 204, 212], "optimis": [162, 195], "flavour": [162, 231, 240], "constrain": 162, "clipppoloss": [162, 225], "klpenppoloss": [162, 225], "regularis": 162, "06347": [162, 204, 212], "qvalue_network": [163, 165], "num_qvalue_net": [163, 165], "sub_sample_len": 163, "priotity_kei": [163, 165], "alpha_init": [163, 165], "min_alpha": [163, 165], "max_alpha": [163, 165], "fixed_alpha": [163, 165], "target_entropi": [163, 165], "delay_qvalu": [163, 165], "openreview": [163, 214], "ay8zfzm0tdd": [163, 214], "idea": [163, 229, 232, 238], "subsampl": [163, 190, 229], "connectionist": 164, "1992": 164, "doi": 164, "1007": 164, "bf00992696": 164, "1801": [165, 217], "01290": [165, 217], "applic": 165, "1812": 165, "05905": 165, "qvalue_network_bi": 165, "prod": 165, "n_action": 165, "redqloss": [166, 225], "999": [166, 197, 232], "prev_param": 166, "new_param": 166, "v2": [167, 176, 177, 179, 180, 204, 207, 212, 214, 217], "strict_shap": 167, "view_a": 167, "next_val_kei": 170, "pred_next_v": 170, "usus": 170, "mse": [170, 232], "q_valu": 170, "target_valu": [170, 240], "n_steps_to_next": 170, "value_next_st": 170, "average_ga": 171, "value_kei": [171, 172, 173], "1506": [171, 174, 175, 178, 239], "02438": [171, 174, 175, 178], "exponenti": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 197], "propag": [171, 172, 173], "throught": [171, 172, 173], "advang": 171, "gradient_mod": 171, "sign": 171, "unused_arg": 171, "target_param": [171, 172, 173], "relev": [171, 172, 173], "98": [171, 172, 173, 235], "94": [171, 173, 235], "unpack": [171, 172, 173], "average_reward": [172, 173], "next_state_valu": [174, 175, 176, 177, 178, 179, 180, 225], "old_stat": [174, 175, 176, 178, 179], "timestep": [174, 175, 176, 177, 178, 179, 180, 232], "new_stat": [174, 175, 176, 177, 178, 179, 180], "rolling_gamma": [176, 177, 179, 180], "ti": [176, 177, 179, 180], "event": [176, 177, 179, 180], "g1": [176, 177, 179, 180], "g2": [176, 177, 179, 180], "g3": [176, 177, 179, 180], "g4": [176, 177, 179, 180], "v3": [176, 177, 179, 180], "v4": [176, 177, 179, 180, 231, 235], "upcom": [176, 177, 179, 180, 231], "out_file_bas": 181, "skip_reset": 181, "dump": 181, "interv": [181, 182, 191, 200, 232], "center_crop": 182, "make_grid": 182, "video": [182, 195, 223, 232], "Will": 182, "grid": 182, "exp_nam": [183, 184, 185, 186, 187, 219, 231], "log_dir": [183, 184, 186, 189], "minim": [183, 237], "dependeci": 183, "csv": [183, 189], "templat": 184, "tracking_uri": 185, "mlflow": [185, 189], "uri": 185, "datastor": 185, "tb_log": 186, "tensoarboard": 186, "tensorboard": [186, 189, 240], "wandb": [187, 189, 240], "experiment_nam": [188, 189], "uuid": [188, 239], "date": 188, "logger_typ": 189, "logger_nam": 189, "wandb_kwarg": 189, "mlflow_kwarg": 189, "sub_traj_len": 190, "min_sub_traj_len": 190, "full": [190, 231, 232, 234, 235, 237, 238, 239, 240], "20": [190, 231, 232, 235, 239, 240], "register_op": [190, 191, 192, 193, 194, 196, 197, 198, 200, 229], "process_optim_batch": [190, 196, 197, 229], "_process_optim_batch_hook": [190, 229], "clear": 191, "clear_cuda": 191, "pre_optim_step": [191, 229], "counter": [192, 229], "log_pbar": [192, 193, 195, 197, 229], "progress": [192, 193, 195, 199, 229, 239], "bar": [192, 193, 195, 199, 229], "count_fram": 192, "pre_steps_log": [192, 193, 229], "lognam": 193, "r_train": 193, "log_reward": 193, "loss_compon": 194, "appl": 194, "omit": [194, 232], "loss_": 194, "optimizer_hook": 194, "loss_actor": [194, 240], "record_interv": [195, 231], "record_fram": [195, 201, 231], "policy_explor": [195, 219, 231], "log_kei": 195, "suffix": 195, "underestim": 195, "suppos": [195, 229, 237, 238, 239], "set_exploration_mod": [195, 225, 231, 232, 240], "reward_evalu": 195, "tensordictreplaybuff": [196, 219, 225, 231, 232], "flatten_tensordict": 196, "max_dim": 196, "rb_trainer": 196, "batch_process": [196, 197, 198, 229], "post_loss": [196, 229], "reward_norm": 197, "update_reward_stat": 197, "normalize_reward": 197, "make_train": [198, 225], "_process_batch_hook": [198, 229], "versatil": 199, "lossmodul": [199, 218, 219], "optim_steps_per_batch": [199, 229, 231], "epoch": 199, "clip_grad_norm": 199, "partial": 199, "deriv": 199, "clip_norm": 199, "progress_bar": 199, "tqdm": [199, 231, 232], "save_trainer_interv": 199, "disk": [199, 229, 232], "10000": [199, 232], "save_trainer_fil": [199, 229], "_datacollector": [200, 205, 206, 219], "update_weights_interv": 200, "sit": [200, 232], "sync": [200, 219, 229, 231, 240], "update_weight": 200, "post_step": [200, 229], "cfg": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223], "dictconfig": [201, 202, 204, 205, 206, 207, 209, 212, 214, 215, 217, 218, 219, 220, 223], "correct": [201, 232], "divid": 201, "unknowingli": 201, "annealing_fram": [201, 231], "init_env_step": [201, 202, 231], "proof_environ": [202, 204, 207, 209, 212, 214, 217, 231], "sta": 202, "ot": 202, "a2closs": [203, 225], "in_keys_actor": [204, 212], "observation_kei": [204, 212, 214, 217], "actorvalueoper": [204, 212, 225, 237], "dummi": [204, 207, 209, 212, 214, 217, 239], "actorcriticoper": [204, 212, 225], "parser_env_arg": [204, 212, 214], "make_ppo_model": [204, 225], "parser_model_args_continu": [204, 212, 214, 217], "cattensor": [204, 207, 212, 214, 217, 231, 232, 234, 239], "hydra": [204, 207, 209, 212, 214, 217], "config_stor": [204, 207, 209, 212, 214, 217], "configstor": [204, 207, 209, 212, 214, 217], "dataclass": [204, 207, 209, 212, 214, 217], "halfcheetah": [204, 207, 212, 214, 217, 231], "config_field": [204, 207, 209, 212, 214, 217], "config_cl": [204, 207, 209, 212, 214, 217], "ppomodelconfig": [204, 212], "envconfig": [204, 207, 209, 212, 214, 217], "make_dataclass": [204, 207, 209, 212, 214, 217], "cls_name": [204, 207, 209, 212, 214, 217], "config_path": [204, 207, 209, 212, 214, 217], "config_nam": [204, 207, 209, 212, 214, 217], "actor_valu": [204, 212], "17": [204, 207, 212, 214, 217, 231, 235], "actor_model_explor": [205, 206, 231], "make_env_kwarg": [205, 206], "actor_net_kwarg": [207, 214, 217], "value_net_kwarg": [207, 217], "modulelist": [207, 214, 217, 237, 240], "ddpgcnnactor": [207, 225], "ddpgmlpactor": [207, 225], "ddpgcnnqnet": [207, 225], "ddpgmlpqnet": [207, 225], "ddpgmodelconfig": 207, "targetnetupdat": [208, 210, 213, 216, 218, 219], "discretemodelconfig": 209, "pong": [209, 239], "v5": [209, 239], "pixels_onli": [209, 231, 232, 239, 240], "210": [209, 239], "160": [209, 239], "ppoloss": [211, 225], "redqloss_deprec": 213, "qvalue_net_kwarg": [214, 217], "qvalu": [214, 217, 231, 232], "redqmodelconfig": 214, "replayargsconfig": 215, "sacmodelconfig": 217, "target_net_updat": 219, "constitu": 219, "learnt": [219, 232], "tempfil": 219, "tensorboardlogg": [219, 225], "egreedywrapp": [219, 225, 232], "env_proof": 219, "obs_spec": 219, "net_valu": 219, "dir": [219, 229], "gettempdir": 219, "argpars": [220, 223], "namespac": [220, 223], "parser": [220, 223], "transformed_env_constructor": [220, 225], "env_kwarg": [221, 222, 231], "num_env_per_collector": [221, 222], "num_collector": [221, 222], "video_tag": 223, "norm_obs_onli": 223, "use_env_cr": 223, "custom_env_mak": 223, "custom_env": 223, "return_transformed_env": 223, "action_dim_gsd": 223, "state_dim_gsd": 223, "batch_dim": [223, 238], "obs_norm_state_dict": 223, "wheter": 223, "maker": [223, 231], "overrid": 223, "randompolici": 225, "asyncdatacollector": 225, "tensordictprioritizedreplaybuff": [225, 240], "prioritizedsampl": [225, 231], "sotr": 225, "binarydiscretetensorspec": 225, "discretetensorspec": 225, "multidiscretetensorspec": 225, "multionehotdiscretetensorspec": 225, "unboundeddiscretetensorspec": [225, 239], "multistep": [225, 231, 232], "tensordictrecord": 225, "videorecord": 225, "step_mdp": [225, 231, 232, 239, 240], "get_available_librari": 225, "braxenv": 225, "braxwrapp": 225, "dmcontrolenv": [225, 231, 234, 239], "dmcontrolwrapp": 225, "jumanjienv": 225, "jumanjiwrapp": 225, "vmasenv": 225, "vmaswrapp": 225, "actorcriticwrapp": [225, 237], "additivegaussianwrapp": 225, "ornsteinuhlenbeckprocesswrapp": [225, 231], "is_tensordict_compat": 225, "ensure_tensordict_compat": 225, "qvaluehook": 225, "distributionalqvaluehook": 225, "duelingcnndqnet": [225, 232], "distributionaldqnnet": 225, "lstmnet": 225, "dreameractor": 225, "obsencod": 225, "obsdecod": 225, "rssmprior": 225, "rssmposterior": 225, "reset_nois": 225, "cemplann": 225, "mpcplannerbas": 225, "mppiplann": 225, "independentnorm": 225, "truncatednorm": 225, "tanhdelta": [225, 231], "onehotcategor": 225, "inv_softplu": 225, "distributionaldqnloss": [225, 232], "reinforceloss": 225, "dreameractorloss": 225, "dreamermodelloss": 225, "dreamervalueloss": 225, "gae": 225, "tdestim": 225, "generalized_advantage_estim": 225, "vec_generalized_advantage_estim": 225, "vec_td_lambda_return_estim": 225, "vec_td_lambda_advantage_estim": [225, 231, 232], "td_lambda_return_estim": 225, "td_lambda_advantage_estim": 225, "td_advantage_estim": 225, "distance_loss": 225, "hold_out_net": [225, 231], "hold_out_param": 225, "softupd": [225, 231], "hardupd": [225, 231], "batchsubsampl": [225, 229], "clearcudacach": 225, "countframeslog": 225, "logreward": [225, 229], "optimizerhook": 225, "replaybuffertrain": [225, 229], "rewardnorm": 225, "selectkei": [225, 229], "updateweight": [225, 229], "make_a2c_loss": 225, "make_a2c_model": 225, "make_collector_offpolici": 225, "make_collector_onpolici": 225, "make_ddpg_actor": [225, 231], "make_ddpg_loss": 225, "make_dqn_actor": 225, "make_dqn_loss": 225, "make_ppo_loss": 225, "make_redq_loss": 225, "make_redq_model": 225, "make_replay_buff": [225, 231], "make_sac_loss": 225, "make_sac_model": 225, "make_target_updat": 225, "parallel_env_constructor": [225, 231], "sync_async_collector": 225, "sync_sync_collector": 225, "correct_for_frame_skip": 225, "get_stats_random_rollout": [225, 231], "csvlogger": 225, "mlflowlogg": 225, "wandblogg": 225, "get_logg": 225, "generate_exp_nam": 225, "journei": 226, "guid": [226, 231, 232], "textbook": 226, "highlight": 226, "readi": [226, 234], "ever": 226, "bump": 226, "think": [226, 239], "benefit": 226, "submit": [226, 240], "pr": 226, "outer": [229, 231, 239], "believ": 229, "scheme": [229, 239], "substenti": 229, "_pre_steps_log_hook": 229, "_pre_optim_hook": 229, "sub_batch": 229, "_post_loss_hook": 229, "_post_optim_hook": 229, "post_optim": 229, "_post_optim_log": 229, "post_optim_log": 229, "_post_steps_hook": 229, "_post_steps_log_hook": 229, "post_steps_log": 229, "comment": [229, 240], "categori": 229, "extens": 229, "reserv": 229, "trainerhookbas": 229, "three": [229, 232], "logginghook": 229, "logging_hook": 229, "save_dict": 229, "some_valu": 229, "els": [229, 231, 232, 235], "torchsnapshot": 229, "ckpt_backend": 229, "pt": [229, 232, 235], "filepath": 229, "select_kei": 229, "save_train": 229, "load_from_fil": 229, "perfectli": 229, "intern": 230, "click": [231, 232, 234, 235, 237, 238, 239, 240], "tutori": [231, 232, 234, 235, 236, 237, 239], "familiar": [231, 232, 239], "suffici": [231, 232], "transpar": [231, 232], "understood": [231, 232], "sota": [231, 232, 240], "rather": [231, 232], "illustr": [231, 232], "deepcopi": 231, "matplotlib": [231, 232, 239], "pyplot": [231, 232, 239], "plt": [231, 232, 239], "wish": 231, "env_librari": 231, "env_task": 231, "env_arg": 231, "elif": [231, 232], "notimplementederror": 231, "friendli": 231, "rescal": 231, "leav": 231, "make_transformed_env": 231, "reward_sc": 231, "double_to_float_list": 231, "double_to_float_inv_list": 231, "dmcontrol": 231, "downstream": 231, "_stat": 231, "leverag": [231, 239], "env_per_collector": 231, "parallel_env": [231, 239, 240], "td_stat": 231, "_td_stat": 231, "numel": [231, 235], "_td_stats_select": 231, "to_tensordict": [231, 232, 238], "got": [231, 238], "isfinit": 231, "sd": 231, "get_env_stat": 231, "proof_env": 231, "env_spec": 231, "actor_net": 231, "num_lay": 231, "actor_modul": [231, 240], "q_net": 231, "qnet": 231, "frequenc": 231, "make_record": 231, "recorder_obj": 231, "likelihood": 231, "circular": 231, "special": [231, 237, 239], "arrai": 231, "prb": 231, "buffer_s": [231, 232], "buffer_scratch_dir": 231, "adjust": 231, "device_count": [231, 232, 235, 239], "1000000": 231, "becom": [231, 239], "lr": [231, 232], "5e": 231, "weight_decai": 231, "5000": 231, "warm": 231, "tau": [231, 232], "005": [231, 232], "tmp": [231, 235], "n_steps_forward": 231, "semin": 231, "qnet_target": 231, "9152e": 231, "3728e": 231, "00": [231, 235, 236], "6790e": 231, "02": [231, 235], "8100e": 231, "0432e": 231, "4661e": 231, "7335e": 231, "6330e": 231, "3439e": 231, "04": [231, 235], "3564e": 231, "1885e": 231, "4405e": 231, "1127e": 231, "9993e": 231, "7058e": 231, "7317e": 231, "3022e": 231, "2335": 231, "3836": 231, "3375": 231, "3587": 231, "3461": 231, "4445": 231, "3917": 231, "3489": 231, "5510": 231, "5761": 231, "1731": [231, 239], "4106": 231, "3918": 231, "0521": 231, "4038": 231, "4419": 231, "9479": 231, "coupl": 231, "async": [231, 240], "transmiss": 231, "3018685293": 231, "adam": [231, 232], "optimizer_actor": 231, "optimizer_qnet": 231, "total_collection_step": 231, "scheduler1": 231, "lr_schedul": 231, "cosineannealinglr": 231, "t_max": 231, "scheduler2": 231, "temporarili": 231, "Then": [231, 234], "fed": 231, "hood": 231, "metadata": [231, 239], "ommit": 231, "earli": [231, 240], "rewards_ev": 231, "norm_factor_train": 231, "collected_fram": 231, "pbar": [231, 232], "r0": 231, "filter": 231, "current_fram": [231, 232], "sampled_tensordict": 231, "backprop": 231, "next_valu": [231, 232], "value_est": 231, "pow": [231, 232], "sampled_tensordict_actor": 231, "actor_loss": 231, "p_in": 231, "p_dest": 231, "zip": [231, 233], "copy_": 231, "b_in": 231, "b_dest": 231, "td_record": 231, "r_evalu": 231, "set_descript": [231, 232], "4f": [231, 232], "2500": 231, "457": 231, "67it": 231, "memmapstorag": [231, 235], "057220458984375": 231, "mb": [231, 235, 236], "002384185791015625": 231, "0095367431640625": 231, "1621246337890625": 231, "steps_to_next_ob": [231, 232], "019073486328125": 231, "2210": 231, "3128": 231, "7589": 231, "40": [231, 235], "07": [231, 235], "208": 231, "46it": 231, "1929": 231, "05": [231, 232, 235, 236], "60": [231, 235, 240], "1500": 231, "275": 231, "71it": 231, "4172": 231, "80": [231, 235], "283": 231, "41it": 231, "7373": 231, "333": 231, "06it": 231, "1908": 231, "09": [231, 235], "plot": [231, 232], "mention": [231, 232, 239], "figur": [231, 232, 237, 239], "label": [231, 232, 238], "legend": [231, 232], "xlabel": [231, 232], "ylabel": [231, 232], "tight_layout": [231, 232], "250": 231, "devid": 231, "100000": [231, 232], "batch_size_traj": 231, "simplic": [231, 235, 237], "19": [231, 235], "td_lambda": 231, "roughli": [231, 240], "four": 231, "big": [231, 232, 239], "revert": 231, "incompat": [231, 238], "bit": 231, "rand_idx": 231, "traceback": [231, 232], "__w": [231, 232], "doc": [231, 232], "coding_ddpg": [231, 236], "896": 231, "miniconda": [231, 232], "2409": 231, "_batch_size_sett": 231, "new_siz": 231, "351": 231, "_check_new_batch_s": 231, "new_batch_s": 231, "1326": 231, "titl": [231, 232], "labmda": 231, "minut": [231, 232, 234, 235, 237, 238, 239, 240], "37": [231, 235, 236], "422": [231, 236], "jupyt": [231, 232, 233, 234, 235, 237, 238, 239, 240], "ipynb": [231, 232, 234, 235, 237, 238, 239, 240], "galleri": [231, 232, 233, 234, 235, 237, 238, 239, 240], "sphinx": [231, 232, 233, 234, 235, 237, 238, 239, 240], "cartpol": [232, 239], "tabl": 232, "pick": 232, "highest": 232, "discretiz": 232, "amort": 232, "seen": 232, "past": 232, "grayscal": [232, 239], "esitm": 232, "ipython": 232, "get_funct": [232, 237], "is_notebook": 232, "shell": 232, "get_ipython": 232, "__class__": 232, "zmqinteractiveshel": 232, "qtconsol": 232, "terminalinteractiveshel": 232, "nameerror": 232, "interpret": 232, "hyperparam": 232, "hopefulli": 232, "sentit": 232, "variat": 232, "2e": 232, "harder": [232, 240], "n_optim": 232, "n_worker": 232, "smooth": 232, "loos": 232, "eps_greedy_v": 232, "eps_greedy_val_env": 232, "predefin": 232, "init_bia": 232, "500000": 232, "techin": 232, "dummy_env": 232, "9923098087310791": 232, "07682561874389648": 232, "pole": 232, "un": 232, "actuat": 232, "cart": 232, "frictionless": 232, "upright": [232, 239], "balanc": [232, 239], "pixels_sav": 232, "eval_rollout": 232, "imageio": 232, "mimwrit": 232, "cartpole_random": 232, "mp4": 232, "fp": 232, "480": [232, 235], "360": 232, "trick": 232, "num_ob": 232, "make_model": 232, "output_s": 232, "unflatten_kei": 232, "fairli": 232, "params_target": 232, "actor_explor": 232, "params_flat": 232, "flatten_kei": 232, "params_target_flat": 232, "600": 232, "bootstrap": 232, "value_next_step": 232, "not_termin": 232, "significantli": 232, "data_collector": 232, "traj_lengths_ev": 232, "grad_val": 232, "traj_length": 232, "mavg": 232, "traj_count": 232, "prev_traj_count": 232, "enough": 232, "sampled_data": 232, "sampled_data_out": 232, "tdstep": 232, "exp_valu": 232, "mse_loss": 232, "gv": 232, "clip_grad_value_": 232, "set_": 232, "clear_output": 232, "gcf": 232, "clf": 232, "figsiz": 232, "subplot": [232, 239], "traj": 232, "savefig": 232, "dqn_td0": 232, "png": 232, "coding_dqn": [232, 236], "382": 232, "1978": 232, "__getitem__": [232, 238], "2711": 232, "_default_get": 232, "555": 232, "keyerror": 232, "imshow": [232, 239], "imread": 232, "axi": 232, "traj_lengths_train": 232, "saved_results_td0": 232, "entir": 232, "capac": 232, "smooth_l1_loss": 232, "clip_grad_norm_": 232, "dqn_tdlambda": 232, "saved_results_tdlambda": 232, "fewer": 232, "load_td0": 232, "load_tdlambda": 232, "frames_td0": 232, "frames_tdlambda": 232, "evals_td0": 232, "evals_tdlambda": 232, "mavgs_td0": 232, "mavgs_tdlambda": 232, "losses_td0": 232, "losses_tdlambda": 232, "values_td0": 232, "values_tdlambda": 232, "grad_vals_td0": 232, "grad_vals_tdlambda": 232, "traj_lengths_td0": 232, "traj_lengths_tdlambda": 232, "traj_count_td0": 232, "traj_count_tdlambda": 232, "td0": 232, "goe": [232, 239], "greatli": 232, "nth": 232, "noticebli": 232, "myopic": 232, "collectorclass": 232, "till": 232, "worst": 232, "accuraci": 232, "fanci": 232, "538": [232, 236], "tutorials_python": 233, "tutorials_jupyt": 233, "distinct": 234, "humanoid": [234, 239], "walk": [234, 239], "env1": 234, "env1_obs_kei": 234, "observation_stand": 234, "env2": 234, "env2_obs_kei": 234, "observation_walk": 234, "tdreset1": 234, "tdreset2": 234, "tdreset": 234, "67": [234, 235], "backbon": [234, 240], "policy_common": 234, "policy_stand": 234, "policy_walk": 234, "seq": 234, "21": [234, 235], "But": 234, "env1_mak": 234, "env2_mak": 234, "_single_task": 234, "td_rollout": 234, "shown": 234, "766": [234, 236], "multi_task": [234, 236], "explain": 235, "fine": 235, "tune": 235, "semat": 235, "interchang": 235, "r3mtransform": 235, "sake": 235, "challeng": 235, "embodi": 235, "ai": 235, "env_transform": [235, 239], "s3": 235, "amazonaw": 235, "r3m_50": 235, "374m": 235, "56": 235, "0k": 235, "429kb": 235, "240k": 235, "43": [235, 236], "973kb": 235, "952k": 235, "90mb": 235, "75m": 235, "1mb": 235, "50m": 235, "9mb": 235, "28": 235, "6mb": 235, "8m": 235, "0mb": 235, "26": 235, "5m": 235, "36": 235, "3m": 235, "8mb": 235, "7mb": 235, "6m": 235, "49": 235, "4m": 235, "41": 235, "53": 235, "57": 235, "2m": 235, "7m": 235, "2mb": 235, "66": 235, "72": 235, "4mb": 235, "78": 235, "0m": 235, "39": 235, "22": 235, "83": 235, "5mb": 235, "89": 235, "25": 235, "9m": 235, "104m": 235, "29": 235, "109m": 235, "113m": 235, "118m": 235, "122m": 235, "127m": 235, "131m": 235, "135m": 235, "141m": 235, "145m": 235, "149m": 235, "155m": 235, "159m": 235, "163m": 235, "3mb": 235, "45": 235, "168m": 235, "172m": 235, "47": [235, 236], "176m": 235, "48": 235, "181m": 235, "185m": 235, "51": 235, "189m": 235, "52": 235, "193m": 235, "197m": 235, "54": 235, "203m": 235, "209m": 235, "213m": 235, "58": 235, "217m": 235, "59": 235, "221m": 235, "226m": 235, "61": 235, "230m": 235, "63": 235, "235m": 235, "239m": 235, "65": 235, "242m": 235, "245m": 235, "248m": 235, "252m": 235, "68": 235, "255m": 235, "69": 235, "258m": 235, "70": 235, "261m": 235, "71": 235, "264m": 235, "268m": 235, "271m": 235, "73": 235, "274m": 235, "74": 235, "278m": 235, "75": 235, "281m": 235, "76": 235, "285m": 235, "77": 235, "288m": 235, "290m": 235, "293m": 235, "79": 235, "297m": 235, "299m": 235, "302m": 235, "82": 235, "305m": 235, "308m": 235, "311m": 235, "84": 235, "314m": 235, "85": 235, "317m": 235, "319m": 235, "86": 235, "322m": 235, "325m": 235, "327m": 235, "88": 235, "330m": 235, "332m": 235, "90": 235, "335m": 235, "338m": 235, "91": 235, "340m": 235, "92": 235, "343m": 235, "345m": 235, "93": 235, "347m": 235, "349m": 235, "351m": 235, "353m": 235, "355m": 235, "96": 235, "357m": 235, "359m": 235, "97": 235, "361m": 235, "363m": 235, "366m": 235, "368m": 235, "370m": 235, "372m": 235, "2048": 235, "trainabl": 235, "wiser": 235, "subset": 235, "163": 235, "again": [235, 239], "conclud": 235, "tmpu5_kna5": 235, "030517578125": 235, "tmp1v5p0imq": 235, "00095367431640625": 235, "tmpb6o00bv0": 235, "659": 235, "1796875": 235, "tmp4nlanv2c": 235, "003814697265625": 235, "tmpih0dtxlb": 235, "haven": 235, "yet": 235, "_storag": 235, "426": [235, 236], "pretrained_model": [235, 236], "140": 236, "torchrl_demo": [236, 240], "605": [236, 240], "torch_env": [236, 239], "192": [236, 239], "148": [236, 237], "tensordict_tutori": [236, 238], "042": [236, 238], "recommand": 237, "conveni": [237, 238], "a_out": 237, "mergelinear": 237, "in_1": 237, "in_2": 237, "linear_1": 237, "linear_2": 237, "x_1": 237, "x_2": 237, "multiheadlinear": 237, "out_1": 237, "out_2": 237, "splitlinear": 237, "output_1": 237, "output_2": 237, "split_and_merge_linear": 237, "make_functional_with_buff": 237, "replica": 237, "params_expand": [237, 240], "buffers_expand": 237, "num_model": 237, "group": 237, "zeros_lik": 237, "result_td": 237, "ok": 237, "conflict": 237, "wire": 237, "tensordictsequentialand": 237, "block": 237, "demonstr": [237, 239], "architectur": 237, "vaswani": 237, "2017": 237, "asid": 237, "tokenstoqkv": 237, "to_dim": 237, "from_dim": 237, "latent_dim": 237, "x_to": 237, "x_from": 237, "splithead": 237, "num_head": 237, "to_num": 237, "from_num": 237, "d_tensor": 237, "transpos": 237, "softmax": 237, "n_head": 237, "d_in": 237, "attn": 237, "skiplayernorm": 237, "to_len": 237, "layer_norm": 237, "layernorm": 237, "x_0": 237, "ffn": 237, "dropout_r": 237, "attentionblock": 237, "tokens_to_qkv": 237, "split_head": 237, "encodertransformerblock": 237, "attention_block": 237, "x_out": 237, "decodertransformerblock": 237, "encoder_block": 237, "transformerencod": 237, "num_block": 237, "transformerdecod": 237, "from_len": 237, "attentionblocktensordict": 237, "connect": 237, "moreov": 237, "complic": [237, 238, 239], "to_nam": 237, "from_nam": 237, "thank": 237, "transformerblockencodertensordict": 237, "transformerblockdecodertensordict": 237, "token": 237, "extract": 237, "transformerencodertensordict": 237, "transformerdecodertensordict": 237, "transformertensordict": 237, "x_encod": 237, "x_decod": 237, "ve": 237, "operar": 237, "td_token": 237, "tdtransform": 237, "t1": 237, "t2": 237, "016504526138305664": 237, "t3": 237, "t4": 237, "009058952331542969": 237, "margin": 237, "deal": 238, "furthermor": 238, "awai": 238, "organ": 238, "power": 238, "segment": 238, "get_data_a": 238, "get_data_b": 238, "reusabl": 238, "lot": 238, "rewriten": 238, "modal": 238, "get_data": 238, "reus": 238, "argu": 238, "dictdataset": 238, "collat": 238, "collate_dict_fn": 238, "dict_list": 238, "final_dict": 238, "single_dict": 238, "simpler": 238, "collate_tensordict_fn": 238, "furtherdown": 238, "_permutedtensordict": 238, "_unsqueezedtensordict": 238, "_viewedtensordict": 238, "datastructur": 238, "explicitli": 238, "caramba": 238, "algebra": 238, "foo": [238, 239], "insid": [238, 239], "violat": 238, "err": 238, "resp": 238, "among": 238, "tensordict_clon": 238, "tensodict": 238, "tuple_index": 238, "new_tensordict": 238, "get_sub_tensordict": 238, "subtensordict": 238, "subtd": 238, "td2": 238, "booltensor": 238, "fashion": 238, "clonned_tensordict": 238, "staked_tensordict": 238, "unbind": 238, "list_tensordict": 238, "comeback": 238, "unsqueezed_tensordict": 238, "role": 239, "supervis": 239, "unsupervis": 239, "rom": 239, "licens": 239, "pygam": 239, "unifi": 239, "_build_env": 239, "sphinx_gallery_start_ignor": 239, "warn": 239, "filterwarn": 239, "sphinx_gallery_end_ignor": 239, "adventur": 239, "ram": 239, "airraid": 239, "alien": 239, "amidar": 239, "assault": 239, "continuousbox": [239, 240], "6095": 239, "pack": 239, "brief": 239, "exectut": 239, "reproduct": 239, "did": 239, "shortcut": 239, "tensordict_tprim": 239, "tensordict_rollout": [239, 240], "quickli": 239, "axesimag": 239, "0x7fcf2f5dd570": 239, "inconsist": 239, "supplementari": 239, "swingup": 239, "swingup_spars": 239, "ball_in_cup": 239, "catch": 239, "balance_spars": 239, "three_pol": 239, "two_pol": 239, "finger": 239, "turn_easi": 239, "turn_hard": 239, "fish": 239, "swim": 239, "hopper": 239, "hop": 239, "run_pure_st": 239, "bring_bal": 239, "bring_peg": 239, "insert_bal": 239, "insert_peg": 239, "point_mass": 239, "reacher": 239, "swimmer": 239, "swimmer6": 239, "swimmer15": 239, "walker": 239, "dog": 239, "trot": 239, "humanoid_cmu": 239, "lqr": 239, "lqr_2_1": 239, "lqr_6_2": 239, "quadrup": 239, "escap": 239, "stacker": 239, "stack_2": 239, "stack_4": 239, "240": [239, 240], "320": 239, "wrapper1": 239, "wrapper2": 239, "obviou": 239, "truth": 239, "env0": 239, "env_transformed_bi": 239, "stanc": 239, "transformeddistribut": 239, "base_dist": 239, "concat": 239, "mofidi": 239, "_inv_apply_transform": 239, "_apply_transform": 239, "transformedenviron": 239, "noopresetenv": [239, 240], "moderet": 239, "computation": 239, "legitim": 239, "side": 239, "incom": 239, "amongst": 239, "has_cuda": 239, "simplest": 239, "wor": 239, "convention": 239, "scope": 239, "difficulti": 239, "markovian": 239, "3288080526": 239, "sometim": 239, "constain": 239, "uuid1": 239, "bar_": 239, "get_someth": 239, "bar_faae0196": 239, "ad6d": 239, "11ed": 239, "bcbb": 239, "0242ac120002": 239, "aargh": 239, "ourselv": 239, "foo_list": 239, "vec_env": 239, "_dispatch_caller_parallel": 239, "0x7fcf2f619330": 239, "bar_fea79564": 239, "bd0b": 239, "bar_fe78829c": 239, "8b60": 239, "bar_fe920d0c": 239, "85b7": 239, "121": 239, "122": 239, "parallen": 239, "carefulli": 239, "commonli": 239, "approxim": 239, "particularili": 239, "evolv": 239, "previous": 239, "steadi": 239, "approx": 239, "2037": 239, "3890": 239, "1113": 239, "9489": 239, "_extra_st": 239, "observation_ssq": 239, "observation_sum": 239, "3336": 239, "1148": 239, "0774": 239, "1648": 239, "1818": 239, "2341": 239, "dispach": 239, "small": 239, "absor": 239, "demo": 240, "icml": 240, "dai": 240, "overview": 240, "vmoen": 240, "fb": 240, "question": 240, "team": 240, "decid": 240, "invest": 240, "platform": 240, "media": 240, "truli": 240, "rest": 240, "predominantli": 240, "tensordict1": 240, "tensordict2": 240, "tensordict_sampl": 240, "_sampler": 240, "_sum_tre": 240, "modulenotfounderror": 240, "28791671991348267": 240, "gym_env": 240, "stepcount": 240, "squash": 240, "lazyconv2d": 240, "6400": 240, "backbone_modul": 240, "value_modul": 240, "tensordict_exp": 240, "base_modul": 240, "0137": 240, "1524": 240, "0641": 240, "indexputbackward0": 240, "8728": 240, "1335": 240, "9833": 240, "3497": 240, "6889": 240, "6433": 240, "clampbackward1": 240, "1131": 240, "1761": 240, "3425": 240, "2665": 240, "2915": 240, "6207": 240, "1441": 240, "2375": 240, "1242": 240, "1372": 240, "3810": 240, "meanbackward1": 240, "tensordicts_prealloc": 240, "tensordicts_stack": 240, "disclaim": 240, "concatmodul": 240, "loss_td": 240, "loss_valu": 240, "pred_valu": 240, "pred_value_max": 240, "target_value_max": 240, "year": 240, "roadmap": 240, "compris": 240, "hierarch": 240, "contributor": 240, "curiou": 240, "feedback": 240, "nascent": 240, "pypi": 240}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "RandomPolicy"], [14, 0, 1, "", "SyncDataCollector"], [15, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[14, 1, 1, "", "iterator"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "rollout"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[16, 2, 1, "", "split_trajectories"]], "torchrl.data": [[17, 0, 1, "", "BinaryDiscreteTensorSpec"], [18, 0, 1, "", "BoundedTensorSpec"], [19, 0, 1, "", "CompositeSpec"], [20, 0, 1, "", "DiscreteTensorSpec"], [21, 0, 1, "", "MultiDiscreteTensorSpec"], [22, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [23, 0, 1, "", "MultiStep"], [24, 0, 1, "", "OneHotDiscreteTensorSpec"], [25, 0, 1, "", "PrioritizedReplayBuffer"], [26, 0, 1, "", "ReplayBuffer"], [27, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [28, 0, 1, "", "TensorDictReplayBuffer"], [29, 0, 1, "", "TensorSpec"], [30, 0, 1, "", "UnboundedContinuousTensorSpec"], [31, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "expand"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "expand"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "expand"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "keys"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "expand"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "expand"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[23, 1, 1, "", "add_module"], [23, 1, 1, "", "apply"], [23, 1, 1, "", "bfloat16"], [23, 1, 1, "", "buffers"], [23, 1, 1, "", "children"], [23, 1, 1, "", "cpu"], [23, 1, 1, "", "cuda"], [23, 1, 1, "", "double"], [23, 1, 1, "", "eval"], [23, 1, 1, "", "extra_repr"], [23, 1, 1, "", "float"], [23, 1, 1, "", "forward"], [23, 1, 1, "", "get_buffer"], [23, 1, 1, "", "get_extra_state"], [23, 1, 1, "", "get_parameter"], [23, 1, 1, "", "get_submodule"], [23, 1, 1, "", "half"], [23, 1, 1, "", "ipu"], [23, 1, 1, "", "load_state_dict"], [23, 1, 1, "", "modules"], [23, 1, 1, "", "named_buffers"], [23, 1, 1, "", "named_children"], [23, 1, 1, "", "named_modules"], [23, 1, 1, "", "named_parameters"], [23, 1, 1, "", "parameters"], [23, 1, 1, "", "register_backward_hook"], [23, 1, 1, "", "register_buffer"], [23, 1, 1, "", "register_forward_hook"], [23, 1, 1, "", "register_forward_pre_hook"], [23, 1, 1, "", "register_full_backward_hook"], [23, 1, 1, "", "register_load_state_dict_post_hook"], [23, 1, 1, "", "register_module"], [23, 1, 1, "", "register_parameter"], [23, 1, 1, "", "requires_grad_"], [23, 1, 1, "", "set_extra_state"], [23, 1, 1, "", "share_memory"], [23, 1, 1, "", "state_dict"], [23, 1, 1, "", "to"], [23, 1, 1, "", "to_empty"], [23, 1, 1, "", "train"], [23, 1, 1, "", "type"], [23, 1, 1, "", "xpu"], [23, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "append_transform"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "insert_transform"], [25, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "append_transform"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "insert_transform"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[32, 0, 1, "", "PrioritizedSampler"], [33, 0, 1, "", "RandomSampler"], [34, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[32, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[35, 0, 1, "", "LazyMemmapStorage"], [36, 0, 1, "", "LazyTensorStorage"], [37, 0, 1, "", "ListStorage"], [38, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[39, 0, 1, "", "RoundRobinWriter"], [40, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[39, 1, 1, "", "add"], [39, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.envs": [[41, 0, 1, "", "EnvBase"], [42, 0, 1, "", "EnvCreator"], [43, 0, 1, "", "EnvMetaData"], [44, 0, 1, "", "GymLikeEnv"], [45, 2, 1, "", "ModelBasedEnvBase"], [46, 0, 1, "", "MultiThreadedEnv"], [47, 0, 1, "", "ParallelEnv"], [48, 0, 1, "", "SerialEnv"], [49, 0, 1, "", "Specs"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[41, 1, 1, "", "add_module"], [41, 1, 1, "", "apply"], [41, 3, 1, "", "batch_locked"], [41, 1, 1, "", "bfloat16"], [41, 1, 1, "", "buffers"], [41, 1, 1, "", "children"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 1, 1, "", "double"], [41, 1, 1, "", "eval"], [41, 1, 1, "", "extra_repr"], [41, 1, 1, "", "fake_tensordict"], [41, 1, 1, "", "float"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_buffer"], [41, 1, 1, "", "get_extra_state"], [41, 1, 1, "", "get_parameter"], [41, 1, 1, "", "get_submodule"], [41, 1, 1, "", "half"], [41, 1, 1, "", "ipu"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "modules"], [41, 1, 1, "", "named_buffers"], [41, 1, 1, "", "named_children"], [41, 1, 1, "", "named_modules"], [41, 1, 1, "", "named_parameters"], [41, 1, 1, "", "parameters"], [41, 1, 1, "id0", "rand_step"], [41, 1, 1, "", "register_backward_hook"], [41, 1, 1, "", "register_buffer"], [41, 1, 1, "", "register_forward_hook"], [41, 1, 1, "", "register_forward_pre_hook"], [41, 1, 1, "", "register_full_backward_hook"], [41, 1, 1, "", "register_load_state_dict_post_hook"], [41, 1, 1, "", "register_module"], [41, 1, 1, "", "register_parameter"], [41, 1, 1, "", "requires_grad_"], [41, 1, 1, "id1", "reset"], [41, 1, 1, "id2", "rollout"], [41, 1, 1, "", "set_extra_state"], [41, 1, 1, "id3", "set_seed"], [41, 1, 1, "", "share_memory"], [41, 3, 1, "", "specs"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "id4", "step"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_empty"], [41, 1, 1, "", "train"], [41, 1, 1, "", "type"], [41, 1, 1, "", "xpu"], [41, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "close"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "read_action"], [44, 1, 1, "", "read_done"], [44, 1, 1, "", "read_obs"], [44, 1, 1, "", "read_reward"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_info_dict_reader"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "close"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "update_kwargs"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.Specs": [[49, 1, 1, "", "build_tensordict"]], "torchrl.envs.libs.brax": [[50, 2, 1, "", "BraxEnv"], [51, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[52, 2, 1, "", "DMControlEnv"], [53, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[54, 2, 1, "", "GymEnv"], [55, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[56, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[57, 2, 1, "", "JumanjiEnv"], [58, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[59, 2, 1, "", "VmasEnv"], [60, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[61, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[62, 0, 1, "", "BinarizeReward"], [63, 0, 1, "", "CatFrames"], [64, 0, 1, "", "CatTensors"], [65, 0, 1, "", "CenterCrop"], [66, 0, 1, "", "Compose"], [67, 0, 1, "", "DiscreteActionProjection"], [68, 0, 1, "", "DoubleToFloat"], [69, 0, 1, "", "ExcludeTransform"], [70, 0, 1, "", "FiniteTensorDictCheck"], [71, 0, 1, "", "FlattenObservation"], [72, 0, 1, "", "FrameSkipTransform"], [73, 0, 1, "", "GrayScale"], [74, 0, 1, "", "NoopResetEnv"], [75, 0, 1, "", "ObservationNorm"], [76, 0, 1, "", "ObservationTransform"], [77, 0, 1, "", "PinMemoryTransform"], [78, 0, 1, "", "R3MTransform"], [79, 0, 1, "", "RandomCropTensorDict"], [80, 0, 1, "", "Resize"], [81, 0, 1, "", "RewardClipping"], [82, 0, 1, "", "RewardScaling"], [83, 0, 1, "", "RewardSum"], [84, 0, 1, "", "SelectTransform"], [85, 0, 1, "", "SqueezeTransform"], [86, 0, 1, "", "StepCounter"], [87, 0, 1, "", "TensorDictPrimer"], [88, 0, 1, "", "TimeMaxPool"], [89, 0, 1, "", "ToTensorImage"], [90, 0, 1, "", "Transform"], [91, 0, 1, "", "TransformedEnv"], [92, 0, 1, "", "UnsqueezeTransform"], [93, 0, 1, "", "VIPRewardTransform"], [94, 0, 1, "", "VIPTransform"], [95, 0, 1, "", "VecNorm"], [96, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[62, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[63, 1, 1, "", "forward"], [63, 1, 1, "", "reset"], [63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[64, 1, 1, "", "forward"], [64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[66, 1, 1, "", "forward"], [66, 1, 1, "", "reset"], [66, 1, 1, "", "to"], [66, 1, 1, "", "transform_input_spec"], [66, 1, 1, "", "transform_observation_spec"], [66, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[67, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[68, 1, 1, "", "transform_input_spec"], [68, 1, 1, "", "transform_observation_spec"], [68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "reset"], [69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[70, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[71, 1, 1, "", "forward"], [71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[72, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[74, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[75, 1, 1, "", "init_stats"], [75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[77, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[78, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[79, 1, 1, "", "forward"]], "torchrl.envs.transforms.Resize": [[80, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[81, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[82, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[83, 1, 1, "", "reset"], [83, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[84, 1, 1, "", "forward"], [84, 1, 1, "", "reset"], [84, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[86, 1, 1, "", "forward"], [86, 1, 1, "", "reset"], [86, 1, 1, "", "transform_input_spec"], [86, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[87, 1, 1, "", "forward"], [87, 1, 1, "", "reset"], [87, 1, 1, "", "to"], [87, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[88, 1, 1, "", "forward"], [88, 1, 1, "", "reset"], [88, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[89, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[90, 1, 1, "", "forward"], [90, 1, 1, "", "reset"], [90, 1, 1, "", "transform_input_spec"], [90, 1, 1, "", "transform_observation_spec"], [90, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[91, 3, 1, "", "action_spec"], [91, 3, 1, "", "batch_locked"], [91, 1, 1, "", "eval"], [91, 3, 1, "", "input_spec"], [91, 1, 1, "", "load_state_dict"], [91, 3, 1, "", "observation_spec"], [91, 3, 1, "", "reward_spec"], [91, 1, 1, "", "set_seed"], [91, 1, 1, "", "state_dict"], [91, 1, 1, "", "to"], [91, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[92, 1, 1, "", "transform_input_spec"], [92, 1, 1, "", "transform_observation_spec"], [92, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[94, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[95, 1, 1, "", "build_td_for_shared_vecnorm"], [95, 1, 1, "", "forward"], [95, 1, 1, "", "get_extra_state"], [95, 1, 1, "", "set_extra_state"], [95, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[97, 2, 1, "", "check_env_specs"], [98, 2, 1, "", "exploration_mode"], [99, 2, 1, "", "get_available_libraries"], [100, 2, 1, "", "set_exploration_mode"], [101, 2, 1, "", "step_mdp"]], "torchrl.modules": [[102, 0, 1, "", "CEMPlanner"], [103, 0, 1, "", "ConvNet"], [104, 0, 1, "", "DdpgCnnActor"], [105, 0, 1, "", "DdpgCnnQNet"], [106, 0, 1, "", "DdpgMlpActor"], [107, 0, 1, "", "DdpgMlpQNet"], [108, 0, 1, "", "Delta"], [109, 0, 1, "", "DistributionalDQNnet"], [110, 0, 1, "", "DreamerActor"], [111, 0, 1, "", "DuelingCnnDQNet"], [112, 0, 1, "", "IndependentNormal"], [113, 0, 1, "", "LSTMNet"], [114, 0, 1, "", "MLP"], [115, 0, 1, "", "MPCPlannerBase"], [116, 0, 1, "", "MPPIPlanner"], [117, 0, 1, "", "NoisyLazyLinear"], [118, 0, 1, "", "NoisyLinear"], [119, 0, 1, "", "NormalParamWrapper"], [120, 0, 1, "", "ObsDecoder"], [121, 0, 1, "", "ObsEncoder"], [122, 0, 1, "", "OneHotCategorical"], [123, 0, 1, "", "RSSMPosterior"], [124, 0, 1, "", "RSSMPrior"], [125, 0, 1, "", "TanhDelta"], [126, 0, 1, "", "TanhNormal"], [127, 0, 1, "", "TruncatedNormal"], [128, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[102, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[103, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[104, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[105, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[106, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[107, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[108, 1, 1, "", "log_prob"], [108, 3, 1, "", "mean"], [108, 3, 1, "", "mode"], [108, 1, 1, "", "rsample"], [108, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[109, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[110, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[111, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[112, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[113, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[114, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[116, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[117, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[119, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[120, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[121, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[122, 1, 1, "", "log_prob"], [122, 3, 1, "", "mode"], [122, 1, 1, "", "rsample"], [122, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[123, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[124, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[125, 3, 1, "", "mean"], [125, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[126, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[127, 1, 1, "", "log_prob"], [127, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[129, 0, 1, "", "Actor"], [130, 0, 1, "", "ActorCriticOperator"], [131, 0, 1, "", "ActorCriticWrapper"], [132, 0, 1, "", "ActorValueOperator"], [133, 0, 1, "", "AdditiveGaussianWrapper"], [134, 0, 1, "", "DistributionalQValueActor"], [135, 0, 1, "", "EGreedyWrapper"], [136, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [137, 0, 1, "", "ProbabilisticActor"], [138, 0, 1, "", "QValueActor"], [139, 0, 1, "", "SafeModule"], [140, 0, 1, "", "SafeProbabilisticModule"], [141, 0, 1, "", "SafeProbabilisticSequential"], [142, 0, 1, "", "SafeSequential"], [143, 0, 1, "", "ValueOperator"], [144, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[130, 1, 1, "", "get_critic_operator"], [130, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[131, 1, 1, "", "get_policy_operator"], [131, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[132, 1, 1, "", "get_policy_operator"], [132, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[139, 1, 1, "", "random"], [139, 1, 1, "", "random_sample"], [139, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[140, 1, 1, "", "random"], [140, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[144, 1, 1, "", "get_reward_operator"], [144, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[145, 0, 1, "", "DistributionalQValueHook"], [146, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[147, 0, 1, "", "ensure_tensordict_compatible"], [148, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[149, 0, 1, "", "biased_softplus"], [150, 0, 1, "", "inv_softplus"], [151, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[149, 1, 1, "", "forward"]], "torchrl.objectives": [[152, 0, 1, "", "A2CLoss"], [153, 0, 1, "", "ClipPPOLoss"], [154, 0, 1, "", "DDPGLoss"], [155, 0, 1, "", "DQNLoss"], [156, 0, 1, "", "DistributionalDQNLoss"], [157, 0, 1, "", "DreamerActorLoss"], [158, 0, 1, "", "DreamerModelLoss"], [159, 0, 1, "", "DreamerValueLoss"], [160, 0, 1, "", "HardUpdate"], [161, 0, 1, "", "KLPENPPOLoss"], [162, 0, 1, "", "PPOLoss"], [163, 0, 1, "", "REDQLoss"], [164, 0, 1, "", "ReinforceLoss"], [165, 0, 1, "", "SACLoss"], [166, 0, 1, "", "SoftUpdate"], [167, 0, 1, "", "distance_loss"], [168, 0, 1, "", "hold_out_net"], [169, 0, 1, "", "hold_out_params"], [170, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[152, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[153, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[159, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[161, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[162, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[163, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[164, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[165, 1, 1, "", "forward"]], "torchrl.objectives.value": [[171, 0, 1, "", "GAE"], [172, 0, 1, "", "TDEstimate"], [173, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[171, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[172, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[173, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[174, 0, 1, "", "generalized_advantage_estimate"], [175, 0, 1, "", "td_advantage_estimate"], [176, 0, 1, "", "td_lambda_advantage_estimate"], [177, 0, 1, "", "td_lambda_return_estimate"], [178, 0, 1, "", "vec_generalized_advantage_estimate"], [179, 0, 1, "", "vec_td_lambda_advantage_estimate"], [180, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[181, 2, 1, "", "TensorDictRecorder"], [182, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[183, 2, 1, "", "CSVLogger"], [184, 2, 1, "", "Logger"], [185, 2, 1, "", "MLFlowLogger"], [186, 2, 1, "", "TensorboardLogger"], [187, 2, 1, "", "WandbLogger"], [188, 2, 1, "", "generate_exp_name"], [189, 2, 1, "", "get_logger"]], "torchrl.trainers": [[190, 0, 1, "", "BatchSubSampler"], [191, 0, 1, "", "ClearCudaCache"], [192, 0, 1, "", "CountFramesLog"], [193, 0, 1, "", "LogReward"], [194, 0, 1, "", "OptimizerHook"], [195, 0, 1, "", "Recorder"], [196, 0, 1, "", "ReplayBufferTrainer"], [197, 0, 1, "", "RewardNormalizer"], [198, 0, 1, "", "SelectKeys"], [199, 0, 1, "", "Trainer"], [200, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[201, 2, 1, "", "correct_for_frame_skip"], [202, 2, 1, "", "get_stats_random_rollout"], [203, 2, 1, "", "make_a2c_loss"], [204, 2, 1, "", "make_a2c_model"], [205, 2, 1, "", "make_collector_offpolicy"], [206, 2, 1, "", "make_collector_onpolicy"], [207, 2, 1, "", "make_ddpg_actor"], [208, 2, 1, "", "make_ddpg_loss"], [209, 2, 1, "", "make_dqn_actor"], [210, 2, 1, "", "make_dqn_loss"], [211, 2, 1, "", "make_ppo_loss"], [212, 2, 1, "", "make_ppo_model"], [213, 2, 1, "", "make_redq_loss"], [214, 2, 1, "", "make_redq_model"], [215, 2, 1, "", "make_replay_buffer"], [216, 2, 1, "", "make_sac_loss"], [217, 2, 1, "", "make_sac_model"], [218, 2, 1, "", "make_target_updater"], [219, 2, 1, "", "make_trainer"], [220, 2, 1, "", "parallel_env_constructor"], [221, 2, 1, "", "sync_async_collector"], [222, 2, 1, "", "sync_sync_collector"], [223, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 227, 228, 229, 230, 231, 232, 239, 240], "document": [0, 8], "tutori": 0, "refer": [0, 225], "knowledg": [0, 226], "base": [0, 226, 232], "indic": 0, "tabl": 0, "collector": [1, 231], "packag": [1, 2, 3, 227, 228, 229, 230], "data": [1, 2, 231, 240], "helper": [1, 3], "function": [1, 240], "replai": [2, 231, 240], "buffer": [2, 231, 240], "compos": [2, 66], "sotr": 2, "trajectori": [2, 231], "tensorspec": [2, 29], "util": [2, 227, 228, 229], "env": [3, 239, 240], "vector": [3, 240], "transform": [3, 90, 231, 237, 239, 240], "clone": [3, 6], "record": [3, 195, 229, 231], "domain": 3, "specif": [3, 234], "librari": [3, 240], "work": [4, 5], "gym": [4, 239], "what": 4, "i": [4, 7, 238], "openai": 4, "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 238], "up": 5, "your": [5, 231], "environ": [5, 6, 231, 232, 234, 239, 240], "instal": [5, 6, 240], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 231, 232, 235, 237, 240], "common": [5, 6, 7], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 239], "all": 6, "new": 6, "bindindg": 6, "2": [6, 237], "1": [6, 237], "old": 6, "bind": 6, "py": 6, "option": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "debug": 7, "gradient": 7, "relat": 7, "error": 7, "newcom": 7, "my": 7, "train": [7, 231, 232], "too": 7, "slow": 7, "intermedi": 7, "bug": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 237], "rl": [8, 240], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "randompolici": 13, "syncdatacollector": 14, "asyncdatacollector": 15, "split_trajectori": 16, "binarydiscretetensorspec": 17, "boundedtensorspec": 18, "compositespec": 19, "discretetensorspec": 20, "multidiscretetensorspec": 21, "multionehotdiscretetensorspec": 22, "multistep": 23, "onehotdiscretetensorspec": 24, "prioritizedreplaybuff": 25, "replaybuff": 26, "tensordictprioritizedreplaybuff": 27, "tensordictreplaybuff": 28, "unboundedcontinuoustensorspec": 30, "unboundeddiscretetensorspec": 31, "prioritizedsampl": 32, "randomsampl": 33, "sampler": 34, "lazymemmapstorag": 35, "lazytensorstorag": 36, "liststorag": 37, "storag": 38, "roundrobinwrit": 39, "writer": 40, "envbas": 41, "envcreat": 42, "envmetadata": 43, "gymlikeenv": 44, "modelbasedenvbas": 45, "multithreadedenv": 46, "parallelenv": 47, "serialenv": 48, "spec": [49, 239], "braxenv": 50, "braxwrapp": 51, "dmcontrolenv": 52, "dmcontrolwrapp": 53, "gymenv": 54, "gymwrapp": 55, "habitatenv": 56, "jumanjienv": 57, "jumanjiwrapp": 58, "vmasenv": 59, "vmaswrapp": 60, "dreamerenv": 61, "binarizereward": 62, "catfram": 63, "cattensor": 64, "centercrop": 65, "discreteactionproject": 67, "doubletofloat": 68, "excludetransform": 69, "finitetensordictcheck": 70, "flattenobserv": 71, "frameskiptransform": 72, "grayscal": 73, "noopresetenv": 74, "observationnorm": 75, "observationtransform": 76, "pinmemorytransform": 77, "r3mtransform": 78, "randomcroptensordict": 79, "resiz": 80, "rewardclip": 81, "rewardsc": 82, "rewardsum": 83, "selecttransform": 84, "squeezetransform": 85, "stepcount": 86, "tensordictprim": 87, "timemaxpool": 88, "totensorimag": 89, "transformedenv": 91, "unsqueezetransform": 92, "viprewardtransform": 93, "viptransform": 94, "vecnorm": [95, 239], "gsdenois": 96, "check_env_spec": 97, "exploration_mod": 98, "get_available_librari": 99, "set_exploration_mod": 100, "step_mdp": 101, "cemplann": 102, "convnet": 103, "ddpgcnnactor": 104, "ddpgcnnqnet": 105, "ddpgmlpactor": 106, "ddpgmlpqnet": 107, "delta": 108, "distributionaldqnnet": 109, "dreameractor": 110, "duelingcnndqnet": 111, "independentnorm": 112, "lstmnet": 113, "mlp": 114, "mpcplannerbas": 115, "mppiplann": 116, "noisylazylinear": 117, "noisylinear": 118, "normalparamwrapp": 119, "obsdecod": 120, "obsencod": 121, "onehotcategor": 122, "rssmposterior": 123, "rssmprior": 124, "tanhdelta": 125, "tanhnorm": 126, "truncatednorm": 127, "reset_nois": 128, "actor": [129, 237], "actorcriticoper": [130, 237], "actorcriticwrapp": 131, "actorvalueoper": 132, "additivegaussianwrapp": 133, "distributionalqvalueactor": 134, "egreedywrapp": 135, "ornsteinuhlenbeckprocesswrapp": 136, "probabilisticactor": [137, 237], "qvalueactor": 138, "safemodul": 139, "safeprobabilisticmodul": 140, "safeprobabilisticsequenti": 141, "safesequenti": 142, "valueoper": 143, "worldmodelwrapp": 144, "distributionalqvaluehook": 145, "qvaluehook": 146, "ensure_tensordict_compat": 147, "is_tensordict_compat": 148, "biased_softplu": 149, "inv_softplu": 150, "map": 151, "a2closs": 152, "clipppoloss": 153, "ddpgloss": 154, "dqnloss": 155, "distributionaldqnloss": 156, "dreameractorloss": 157, "dreamermodelloss": 158, "dreamervalueloss": 159, "hardupd": 160, "klpenppoloss": 161, "ppoloss": 162, "redqloss": 163, "reinforceloss": 164, "sacloss": 165, "softupd": 166, "distance_loss": 167, "hold_out_net": 168, "hold_out_param": 169, "next_state_valu": 170, "gae": 171, "tdestim": 172, "tdlambdaestim": 173, "generalized_advantage_estim": 174, "td_advantage_estim": 175, "td_lambda_advantage_estim": 176, "td_lambda_return_estim": 177, "vec_generalized_advantage_estim": 178, "vec_td_lambda_advantage_estim": 179, "vec_td_lambda_return_estim": 180, "tensordictrecord": 181, "videorecord": 182, "csvlogger": 183, "logger": [184, 229], "mlflowlogg": 185, "tensorboardlogg": 186, "wandblogg": 187, "generate_exp_nam": 188, "get_logg": 189, "batchsubsampl": 190, "clearcudacach": 191, "countframeslog": 192, "logreward": 193, "optimizerhook": 194, "replaybuffertrain": 196, "rewardnorm": 197, "selectkei": 198, "trainer": [199, 229], "updateweight": 200, "correct_for_frame_skip": 201, "get_stats_random_rollout": 202, "make_a2c_loss": 203, "make_a2c_model": 204, "make_collector_offpolici": 205, "make_collector_onpolici": 206, "make_ddpg_actor": 207, "make_ddpg_loss": 208, "make_dqn_actor": 209, "make_dqn_loss": 210, "make_ppo_loss": 211, "make_ppo_model": 212, "make_redq_loss": 213, "make_redq_model": 214, "make_replay_buff": 215, "make_sac_loss": 216, "make_sac_model": 217, "make_target_updat": 218, "make_train": 219, "parallel_env_constructor": 220, "sync_async_collector": 221, "sync_sync_collector": 222, "transformed_env_constructor": 223, "readm": [224, 233], "tuto": [224, 233], "api": 225, "contribut": [226, 240], "content": 226, "modul": [227, 240], "tensordict": [227, 238, 240], "hook": [227, 229], "model": [227, 231, 232, 235, 240], "explor": 227, "planner": 227, "distribut": 227, "object": [228, 231, 240], "dqn": [228, 232], "ddpg": [228, 231], "sac": 228, "redq": 228, "ppo": 228, "a2c": 228, "reinforc": 228, "dreamer": 228, "return": 228, "checkpoint": 229, "builder": 229, "_util": 230, "code": [231, 232, 238], "parallel": [231, 234, 239], "execut": [231, 234], "normal": 231, "observ": 231, "build": [231, 232], "evalu": 231, "hyperparamet": [231, 232], "initi": 231, "time": [231, 236], "polici": [231, 234], "experi": 231, "result": 231, "sampl": 231, "td": [231, 232], "lambda": [231, 232], "pixel": 232, "The": 232, "problem": 232, "deep": 232, "q": 232, "network": 232, "regular": 232, "loop": 232, "conclus": 232, "possibl": 232, "improv": [232, 238], "task": 234, "multi": 234, "divers": 234, "rollout": [234, 239], "pretrain": 235, "comput": 236, "tensordictmodul": [237, 240], "exampl": 237, "simpl": 237, "usag": [237, 238], "multipl": 237, "input": 237, "3": 237, "output": 237, "4": 237, "combin": 237, "tensordictsequenti": 237, "5": 237, "compat": 237, "do": [237, 238], "": 237, "don": 237, "t": [237, 238], "probabilistictensordictmodul": 237, "showcas": 237, "implement": 237, "benchmark": 237, "modular": 238, "can": 238, "thi": 238, "python": 238, "dict": 238, "structur": 238, "dictionari": 238, "featur": 238, "get": 238, "kei": 238, "valu": 238, "updat": 238, "tensordict_or_dict": 238, "del": 238, "tensor": 238, "batch": 238, "size": 238, "devic": [238, 239], "memori": 238, "share": 238, "via": 238, "physic": 238, "oper": 238, "seed": 239, "reset": 239, "step": 239, "frame_skip": 239, "deepmind": 239, "control": 239, "run": 239, "close": 239, "access": 239, "attribut": 239, "kwarg": 239, "introduct": 240, "chang": 240, "config": 240, "sequenc": 240, "program": 240, "ensembl": 240, "meta": 240, "special": 240, "class": 240, "state": 240}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [226, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "Sotring trajectories": [[2, "sotring-trajectories"]], "TensorSpec": [[2, "tensorspec"], [29, "tensorspec"]], "Utils": [[2, "utils"], [227, "utils"], [228, "utils"], [229, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [231, "transforms"], [240, "transforms"]], "Cloning transforms": [[3, "cloning-transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "What is OpenAI Gym?": [[4, "what-is-openai-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[7, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[7, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[7, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[7, "common-bugs"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "RandomPolicy": [[13, "randompolicy"]], "SyncDataCollector": [[14, "syncdatacollector"]], "aSyncDataCollector": [[15, "asyncdatacollector"]], "split_trajectories": [[16, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[17, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[18, "boundedtensorspec"]], "CompositeSpec": [[19, "compositespec"]], "DiscreteTensorSpec": [[20, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[21, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[22, "multionehotdiscretetensorspec"]], "MultiStep": [[23, "multistep"]], "OneHotDiscreteTensorSpec": [[24, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[25, "prioritizedreplaybuffer"]], "ReplayBuffer": [[26, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[27, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[28, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[30, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[31, "unboundeddiscretetensorspec"]], "PrioritizedSampler": [[32, "prioritizedsampler"]], "RandomSampler": [[33, "randomsampler"]], "Sampler": [[34, "sampler"]], "LazyMemmapStorage": [[35, "lazymemmapstorage"]], "LazyTensorStorage": [[36, "lazytensorstorage"]], "ListStorage": [[37, "liststorage"]], "Storage": [[38, "storage"]], "RoundRobinWriter": [[39, "roundrobinwriter"]], "Writer": [[40, "writer"]], "EnvBase": [[41, "envbase"]], "EnvCreator": [[42, "envcreator"]], "EnvMetaData": [[43, "envmetadata"]], "GymLikeEnv": [[44, "gymlikeenv"]], "ModelBasedEnvBase": [[45, "modelbasedenvbase"]], "MultiThreadedEnv": [[46, "multithreadedenv"]], "ParallelEnv": [[47, "parallelenv"]], "SerialEnv": [[48, "serialenv"]], "Specs": [[49, "specs"]], "BraxEnv": [[50, "braxenv"]], "BraxWrapper": [[51, "braxwrapper"]], "DMControlEnv": [[52, "dmcontrolenv"]], "DMControlWrapper": [[53, "dmcontrolwrapper"]], "GymEnv": [[54, "gymenv"]], "GymWrapper": [[55, "gymwrapper"]], "HabitatEnv": [[56, "habitatenv"]], "JumanjiEnv": [[57, "jumanjienv"]], "JumanjiWrapper": [[58, "jumanjiwrapper"]], "VmasEnv": [[59, "vmasenv"]], "VmasWrapper": [[60, "vmaswrapper"]], "DreamerEnv": [[61, "dreamerenv"]], "BinarizeReward": [[62, "binarizereward"]], "CatFrames": [[63, "catframes"]], "CatTensors": [[64, "cattensors"]], "CenterCrop": [[65, "centercrop"]], "Compose": [[66, "compose"]], "DiscreteActionProjection": [[67, "discreteactionprojection"]], "DoubleToFloat": [[68, "doubletofloat"]], "ExcludeTransform": [[69, "excludetransform"]], "FiniteTensorDictCheck": [[70, "finitetensordictcheck"]], "FlattenObservation": [[71, "flattenobservation"]], "FrameSkipTransform": [[72, "frameskiptransform"]], "GrayScale": [[73, "grayscale"]], "NoopResetEnv": [[74, "noopresetenv"]], "ObservationNorm": [[75, "observationnorm"]], "ObservationTransform": [[76, "observationtransform"]], "PinMemoryTransform": [[77, "pinmemorytransform"]], "R3MTransform": [[78, "r3mtransform"]], "RandomCropTensorDict": [[79, "randomcroptensordict"]], "Resize": [[80, "resize"]], "RewardClipping": [[81, "rewardclipping"]], "RewardScaling": [[82, "rewardscaling"]], "RewardSum": [[83, "rewardsum"]], "SelectTransform": [[84, "selecttransform"]], "SqueezeTransform": [[85, "squeezetransform"]], "StepCounter": [[86, "stepcounter"]], "TensorDictPrimer": [[87, "tensordictprimer"]], "TimeMaxPool": [[88, "timemaxpool"]], "ToTensorImage": [[89, "totensorimage"]], "Transform": [[90, "transform"]], "TransformedEnv": [[91, "transformedenv"]], "UnsqueezeTransform": [[92, "unsqueezetransform"]], "VIPRewardTransform": [[93, "viprewardtransform"]], "VIPTransform": [[94, "viptransform"]], "VecNorm": [[95, "vecnorm"], [239, "vecnorm"]], "gSDENoise": [[96, "gsdenoise"]], "check_env_specs": [[97, "check-env-specs"]], "exploration_mode": [[98, "exploration-mode"]], "get_available_libraries": [[99, "get-available-libraries"]], "set_exploration_mode": [[100, "set-exploration-mode"]], "step_mdp": [[101, "step-mdp"]], "CEMPlanner": [[102, "cemplanner"]], "ConvNet": [[103, "convnet"]], "DdpgCnnActor": [[104, "ddpgcnnactor"]], "DdpgCnnQNet": [[105, "ddpgcnnqnet"]], "DdpgMlpActor": [[106, "ddpgmlpactor"]], "DdpgMlpQNet": [[107, "ddpgmlpqnet"]], "Delta": [[108, "delta"]], "DistributionalDQNnet": [[109, "distributionaldqnnet"]], "DreamerActor": [[110, "dreameractor"]], "DuelingCnnDQNet": [[111, "duelingcnndqnet"]], "IndependentNormal": [[112, "independentnormal"]], "LSTMNet": [[113, "lstmnet"]], "MLP": [[114, "mlp"]], "MPCPlannerBase": [[115, "mpcplannerbase"]], "MPPIPlanner": [[116, "mppiplanner"]], "NoisyLazyLinear": [[117, "noisylazylinear"]], "NoisyLinear": [[118, "noisylinear"]], "NormalParamWrapper": [[119, "normalparamwrapper"]], "ObsDecoder": [[120, "obsdecoder"]], "ObsEncoder": [[121, "obsencoder"]], "OneHotCategorical": [[122, "onehotcategorical"]], "RSSMPosterior": [[123, "rssmposterior"]], "RSSMPrior": [[124, "rssmprior"]], "TanhDelta": [[125, "tanhdelta"]], "TanhNormal": [[126, "tanhnormal"]], "TruncatedNormal": [[127, "truncatednormal"]], "reset_noise": [[128, "reset-noise"]], "Actor": [[129, "actor"], [237, "actor"]], "ActorCriticOperator": [[130, "actorcriticoperator"], [237, "actorcriticoperator"]], "ActorCriticWrapper": [[131, "actorcriticwrapper"]], "ActorValueOperator": [[132, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[133, "additivegaussianwrapper"]], "DistributionalQValueActor": [[134, "distributionalqvalueactor"]], "EGreedyWrapper": [[135, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[136, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[137, "probabilisticactor"], [237, "probabilisticactor"]], "QValueActor": [[138, "qvalueactor"]], "SafeModule": [[139, "safemodule"]], "SafeProbabilisticModule": [[140, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[141, "safeprobabilisticsequential"]], "SafeSequential": [[142, "safesequential"]], "ValueOperator": [[143, "valueoperator"]], "WorldModelWrapper": [[144, "worldmodelwrapper"]], "DistributionalQValueHook": [[145, "distributionalqvaluehook"]], "QValueHook": [[146, "qvaluehook"]], "ensure_tensordict_compatible": [[147, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[148, "is-tensordict-compatible"]], "biased_softplus": [[149, "biased-softplus"]], "inv_softplus": [[150, "inv-softplus"]], "mappings": [[151, "mappings"]], "A2CLoss": [[152, "a2closs"]], "ClipPPOLoss": [[153, "clipppoloss"]], "DDPGLoss": [[154, "ddpgloss"]], "DQNLoss": [[155, "dqnloss"]], "DistributionalDQNLoss": [[156, "distributionaldqnloss"]], "DreamerActorLoss": [[157, "dreameractorloss"]], "DreamerModelLoss": [[158, "dreamermodelloss"]], "DreamerValueLoss": [[159, "dreamervalueloss"]], "HardUpdate": [[160, "hardupdate"]], "KLPENPPOLoss": [[161, "klpenppoloss"]], "PPOLoss": [[162, "ppoloss"]], "REDQLoss": [[163, "redqloss"]], "ReinforceLoss": [[164, "reinforceloss"]], "SACLoss": [[165, "sacloss"]], "SoftUpdate": [[166, "softupdate"]], "distance_loss": [[167, "distance-loss"]], "hold_out_net": [[168, "hold-out-net"]], "hold_out_params": [[169, "hold-out-params"]], "next_state_value": [[170, "next-state-value"]], "GAE": [[171, "gae"]], "TDEstimate": [[172, "tdestimate"]], "TDLambdaEstimate": [[173, "tdlambdaestimate"]], "generalized_advantage_estimate": [[174, "generalized-advantage-estimate"]], "td_advantage_estimate": [[175, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[176, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[177, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[178, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[179, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[180, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[181, "tensordictrecorder"]], "VideoRecorder": [[182, "videorecorder"]], "CSVLogger": [[183, "csvlogger"]], "Logger": [[184, "logger"]], "MLFlowLogger": [[185, "mlflowlogger"]], "TensorboardLogger": [[186, "tensorboardlogger"]], "WandbLogger": [[187, "wandblogger"]], "generate_exp_name": [[188, "generate-exp-name"]], "get_logger": [[189, "get-logger"]], "BatchSubSampler": [[190, "batchsubsampler"]], "ClearCudaCache": [[191, "clearcudacache"]], "CountFramesLog": [[192, "countframeslog"]], "LogReward": [[193, "logreward"]], "OptimizerHook": [[194, "optimizerhook"]], "Recorder": [[195, "recorder"]], "ReplayBufferTrainer": [[196, "replaybuffertrainer"]], "RewardNormalizer": [[197, "rewardnormalizer"]], "SelectKeys": [[198, "selectkeys"]], "Trainer": [[199, "trainer"]], "UpdateWeights": [[200, "updateweights"]], "correct_for_frame_skip": [[201, "correct-for-frame-skip"]], "get_stats_random_rollout": [[202, "get-stats-random-rollout"]], "make_a2c_loss": [[203, "make-a2c-loss"]], "make_a2c_model": [[204, "make-a2c-model"]], "make_collector_offpolicy": [[205, "make-collector-offpolicy"]], "make_collector_onpolicy": [[206, "make-collector-onpolicy"]], "make_ddpg_actor": [[207, "make-ddpg-actor"]], "make_ddpg_loss": [[208, "make-ddpg-loss"]], "make_dqn_actor": [[209, "make-dqn-actor"]], "make_dqn_loss": [[210, "make-dqn-loss"]], "make_ppo_loss": [[211, "make-ppo-loss"]], "make_ppo_model": [[212, "make-ppo-model"]], "make_redq_loss": [[213, "make-redq-loss"]], "make_redq_model": [[214, "make-redq-model"]], "make_replay_buffer": [[215, "make-replay-buffer"]], "make_sac_loss": [[216, "make-sac-loss"]], "make_sac_model": [[217, "make-sac-model"]], "make_target_updater": [[218, "make-target-updater"]], "make_trainer": [[219, "make-trainer"]], "parallel_env_constructor": [[220, "parallel-env-constructor"]], "sync_async_collector": [[221, "sync-async-collector"]], "sync_sync_collector": [[222, "sync-sync-collector"]], "transformed_env_constructor": [[223, "transformed-env-constructor"]], "README Tutos": [[224, "readme-tutos"], [233, "readme-tutos"]], "API Reference": [[225, "api-reference"]], "Contributing": [[226, "contributing"], [240, "contributing"]], "Contents:": [[226, null]], "torchrl.modules package": [[227, "torchrl-modules-package"]], "TensorDict modules": [[227, "tensordict-modules"]], "Hooks": [[227, "hooks"]], "Models": [[227, "models"], [240, "models"]], "Exploration": [[227, "exploration"]], "Planners": [[227, "planners"]], "Distributions": [[227, "distributions"]], "torchrl.objectives package": [[228, "torchrl-objectives-package"]], "DQN": [[228, "dqn"]], "DDPG": [[228, "ddpg"]], "SAC": [[228, "sac"]], "REDQ": [[228, "redq"]], "PPO": [[228, "ppo"]], "A2C": [[228, "a2c"]], "Reinforce": [[228, "reinforce"]], "Dreamer": [[228, "dreamer"]], "Returns": [[228, "returns"]], "torchrl.trainers package": [[229, "torchrl-trainers-package"]], "Checkpointing": [[229, "checkpointing"]], "Trainer and hooks": [[229, "trainer-and-hooks"]], "Builders": [[229, "builders"]], "Loggers": [[229, "loggers"]], "Recording utils": [[229, "recording-utils"]], "torchrl._utils package": [[230, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[231, "coding-ddpg-using-torchrl"]], "Environment": [[231, "environment"]], "Parallel execution": [[231, "parallel-execution"]], "Normalization of the observations": [[231, "normalization-of-the-observations"]], "Building the model": [[231, "building-the-model"]], "Evaluator: building your recorder object": [[231, "evaluator-building-your-recorder-object"]], "Replay buffer": [[231, "replay-buffer"]], "Hyperparameters": [[231, "hyperparameters"], [232, "hyperparameters"]], "Initialization": [[231, "initialization"]], "Data collector": [[231, "data-collector"]], "Time to train the policy!": [[231, "time-to-train-the-policy"]], "Experiment results": [[231, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[231, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[232, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[232, "building-the-environment"]], "The problem": [[232, "the-problem"]], "Building the model (Deep Q-network)": [[232, "building-the-model-deep-q-network"]], "Regular DQN": [[232, "regular-dqn"]], "Training loop": [[232, "training-loop"], [232, "id1"]], "TD-lambda": [[232, "td-lambda"]], "Conclusion and possible improvements": [[232, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[234, "task-specific-policy-in-multi-task-environments"]], "Policy": [[234, "policy"]], "Executing diverse tasks in parallel": [[234, "executing-diverse-tasks-in-parallel"]], "Rollout": [[234, "rollout"]], "Using pretrained models": [[235, "using-pretrained-models"]], "Computation times": [[236, "computation-times"]], "TensorDictModule": [[237, "tensordictmodule"]], "TensorDictModule by examples": [[237, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[237, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[237, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[237, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[237, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[237, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[237, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[237, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[237, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[237, "benchmarking"]], "TensorDict": [[238, "tensordict"], [240, "tensordict"]], "Improving the modularity of codes": [[238, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[238, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[238, "tensordict-structure"]], "TensorDict Dictionary Features": [[238, "tensordict-dictionary-features"]], "get(key)": [[238, "get-key"]], "set(key, value)": [[238, "set-key-value"]], "keys()": [[238, "keys"]], "values()": [[238, "values"]], "update(tensordict_or_dict)": [[238, "update-tensordict-or-dict"]], "del": [[238, "del"]], "TensorDict tensor features": [[238, "tensordict-tensor-features"]], "Batch size": [[238, "batch-size"]], "Devices": [[238, "devices"]], "Memory sharing via physical memory usage": [[238, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[238, "tensor-operations"]], "TorchRL envs": [[239, "torchrl-envs"]], "Gym environments": [[239, "gym-environments"]], "Env Specs": [[239, "env-specs"]], "Seeding, resetting and steps": [[239, "seeding-resetting-and-steps"]], "Rollouts": [[239, "rollouts"]], "frame_skip": [[239, "frame-skip"]], "Rendering": [[239, "rendering"]], "DeepMind Control environments": [[239, "deepmind-control-environments"]], "Transforming envs": [[239, "transforming-envs"]], "Environment device": [[239, "environment-device"]], "Running environments in parallel": [[239, "running-environments-in-parallel"]], "Closing parallel environments": [[239, "closing-parallel-environments"]], "Seeding": [[239, "seeding"]], "Accessing environment attributes": [[239, "accessing-environment-attributes"]], "kwargs for parallel environments": [[239, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[239, "transforming-parallel-environments"]], "Introduction to TorchRL": [[240, "introduction-to-torchrl"]], "Data": [[240, "data"]], "Replay buffers": [[240, "replay-buffers"]], "Envs": [[240, "envs"]], "Changing environments config": [[240, "changing-environments-config"]], "Vectorized Environments": [[240, "vectorized-environments"]], "Modules": [[240, "modules"]], "TensorDictModules": [[240, "tensordictmodules"]], "Sequences of Modules": [[240, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[240, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[240, "specialized-classes"]], "Using Environments and Modules": [[240, "using-environments-and-modules"]], "Objectives": [[240, "objectives"]], "State of the Library": [[240, "state-of-the-library"]], "Installing the Library": [[240, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[16, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[17, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[18, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.expand"]], "index() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[19, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.expand"]], "index() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[20, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.expand"]], "index() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "index() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[23, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[26, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[29, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.expand"]], "index() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[30, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[37, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[38, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[41, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[41, "id0"], [41, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[41, "id1"], [41, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[41, "id2"], [41, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[41, "id3"], [41, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[41, "id4"], [41, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[42, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[43, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[44, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[45, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[45, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[45, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[45, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[45, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[45, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[46, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[46, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[46, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[47, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[48, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.zero_grad"]], "specs (class in torchrl.envs)": [[49, "torchrl.envs.Specs"]], "build_tensordict() (torchrl.envs.specs method)": [[49, "torchrl.envs.Specs.build_tensordict"]], "braxenv() (in module torchrl.envs.libs.brax)": [[50, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[51, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[52, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[54, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[56, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[57, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[58, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[59, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[60, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[61, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[62, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.CatFrames"]], "forward() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.forward"]], "reset() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.CatTensors"]], "forward() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.forward"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[65, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.DiscreteActionProjection"]], "transform_input_spec() (torchrl.envs.transforms.discreteactionprojection method)": [[67, "torchrl.envs.transforms.DiscreteActionProjection.transform_input_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.ExcludeTransform"]], "forward() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.forward"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "forward() (torchrl.envs.transforms.finitetensordictcheck method)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck.forward"]], "flattenobservation (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.FlattenObservation"]], "forward() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.forward"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.FrameSkipTransform"]], "forward() (torchrl.envs.transforms.frameskiptransform method)": [[72, "torchrl.envs.transforms.FrameSkipTransform.forward"]], "grayscale (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[73, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[74, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_input_spec() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.PinMemoryTransform"]], "forward() (torchrl.envs.transforms.pinmemorytransform method)": [[77, "torchrl.envs.transforms.PinMemoryTransform.forward"]], "r3mtransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[78, "torchrl.envs.transforms.R3MTransform.to"]], "randomcroptensordict (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.RandomCropTensorDict"]], "forward() (torchrl.envs.transforms.randomcroptensordict method)": [[79, "torchrl.envs.transforms.RandomCropTensorDict.forward"]], "resize (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[80, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[81, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[82, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[83, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[83, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.SelectTransform"]], "forward() (torchrl.envs.transforms.selecttransform method)": [[84, "torchrl.envs.transforms.SelectTransform.forward"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[84, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[84, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.SqueezeTransform"]], "stepcounter (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.StepCounter"]], "forward() (torchrl.envs.transforms.stepcounter method)": [[86, "torchrl.envs.transforms.StepCounter.forward"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[86, "torchrl.envs.transforms.StepCounter.reset"]], "transform_input_spec() (torchrl.envs.transforms.stepcounter method)": [[86, "torchrl.envs.transforms.StepCounter.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[86, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.TensorDictPrimer"]], "forward() (torchrl.envs.transforms.tensordictprimer method)": [[87, "torchrl.envs.transforms.TensorDictPrimer.forward"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[87, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[87, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[87, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.TimeMaxPool"]], "forward() (torchrl.envs.transforms.timemaxpool method)": [[88, "torchrl.envs.transforms.TimeMaxPool.forward"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[88, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[88, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[89, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.UnsqueezeTransform"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[92, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[92, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[92, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[93, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[93, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[94, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[95, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "forward() (torchrl.envs.transforms.vecnorm method)": [[95, "torchrl.envs.transforms.VecNorm.forward"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[95, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[95, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[95, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[96, "torchrl.envs.transforms.gSDENoise"]], "check_env_specs() (in module torchrl.envs.utils)": [[97, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[98, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[99, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[100, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[101, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[102, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[102, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[103, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[103, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[104, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[104, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[105, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[105, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[106, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[106, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[107, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[107, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[108, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[108, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[108, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[108, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[108, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[108, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[109, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[109, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[110, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[110, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[111, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[111, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[112, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[112, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[113, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[113, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[114, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[114, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[115, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[115, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[115, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[116, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[116, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[117, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[117, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[118, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[119, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[119, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[120, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[120, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[121, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[121, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[122, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[122, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[122, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[122, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[122, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[123, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[123, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[124, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[124, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[125, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[125, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[125, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[126, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[126, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[127, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[127, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[127, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[128, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[129, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[130, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[130, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[131, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[131, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[132, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[132, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[133, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[133, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[135, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[135, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[136, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[136, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[139, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[139, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[139, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[140, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[140, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[144, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[144, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[144, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[145, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[146, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[147, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[148, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[149, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[149, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[150, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[151, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[152, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[152, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[153, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[153, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[154, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[154, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[155, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[155, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[156, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[156, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[157, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[157, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[158, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[158, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[159, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[159, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[160, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[161, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[161, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[162, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[162, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[163, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[163, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[164, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[164, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[165, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[165, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[166, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[167, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[168, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[169, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[170, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[171, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[171, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[172, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[172, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[173, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[173, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[174, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[175, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[176, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[177, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[178, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[179, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[180, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[181, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[182, "torchrl.record.VideoRecorder"]], "csvlogger() (in module torchrl.record.loggers)": [[183, "torchrl.record.loggers.CSVLogger"]], "logger() (in module torchrl.record.loggers)": [[184, "torchrl.record.loggers.Logger"]], "mlflowlogger() (in module torchrl.record.loggers)": [[185, "torchrl.record.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers)": [[186, "torchrl.record.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers)": [[187, "torchrl.record.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[188, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[189, "torchrl.record.loggers.get_logger"]], "batchsubsampler (class in torchrl.trainers)": [[190, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[191, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[192, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[193, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[194, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[195, "torchrl.trainers.Recorder"]], "replaybuffertrainer (class in torchrl.trainers)": [[196, "torchrl.trainers.ReplayBufferTrainer"]], "rewardnormalizer (class in torchrl.trainers)": [[197, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[198, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[199, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[200, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[201, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[202, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[211, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[212, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[213, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[214, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[215, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[216, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[217, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[218, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[219, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[220, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[221, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[222, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[223, "torchrl.trainers.helpers.transformed_env_constructor"]]}})